{"version":3,"sources":["chart.tsx","details.tsx","gedcom_util.ts","load_data.ts","intro.tsx","top_bar.tsx","app.tsx","index.tsx"],"names":["zoomed","parent","d3","node","parentElement","scrollLeft","transform","x","scrollTop","y","scrolled","clientWidth","clientHeight","call","translateTo","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","chart","inherits","createClass","key","value","_this2","undefined","initialRender","innerHTML","createChart","json","props","data","chartType","HourglassChart","renderer","DetailedRenderer","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","chartInfo","render","startIndi","selection","id","baseGeneration","generation","svg","on","scaleExtent","translateExtent","size","dx","origin","dy","offsetX","offsetY","svgTransition","transition","delay","duration","attr","tween","i","t","renderChart","prevProps","react","document","getElementById","cloneNode","removeAttribute","XMLSerializer","serializeToString","_this3","printWindow","createElement","style","position","top","left","onload","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","blob","Blob","type","saveAs","canvas","width","getBBox","height","img","Image","src","URL","createObjectURL","Promise","resolve","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","onBlob","drawOnCanvas","then","toBlob","doc","jsPDF","orientation","unit","format","addImage","save","React","contextTypes","intlShape","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","Map","translateTag","tag","index_es","defaultMessage","get","joinLines","lines","map","line","Linkify_default","a","properties","target","eventDetails","entry","date","tree","find","subentry","push","gedcomDate","dateOrRange","getDate","formatDate","translateDate","place","filter","forEach","note","className","noteDetails","nameDetails","split","name","getDetails","entries","tags","detailsFunction","flatMap","element","getOtherDetails","includes","dataDetails","Details","_React$Component","gedcom","indis","indi","pointerToId","pointer","substring","prepareGedcom","head","fams","sortFamilyChildren","fam","children","newChildren","sort","idToIndiMap","indiId1","indiId2","b","idComparison","indi1","indi2","birth1","birth","birth2","date1","dateRange","from","date2","year","month","day","birthDatesComparator","assign","sortChildren","newFams","filterImage","imageUrl","startsWith","newIndi","filterImages","newIndis","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","Error","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","e","console","warn","loadGedcom","hash","cachedData","getItem","parse","loadGedcomSync","reject","GedcomLink","Link","to","pathname","search","queryString","url","text","Intro","Card","Content","Header","href","values","link","TopBar","state","loadUrlDialogOpen","inputRef","event","files","reader","FileReader","evt","result","md5","history","file","readAsText","setState","_this4","loadFromUrlModal","Modal","onClose","handleClose","centered","Icon","txt","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","ref","Actions","Button","secondary","onClick","primary","chartMenus","showingChart","Menu","Item","as","onPrint","Dropdown","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","attached","inverted","color","handleLoadFromUrl","accept","handleUpload","htmlFor","ErrorMessage","Message","negative","message","App","loading","chartRef","location","gen","String","renderMainArea","chart_Chart","showSidePanel","Responsive","minWidth","details_Details","error","Loader","active","componentDidUpdate","getParam","parsedGen","Number","isNaN","handleCors","isNewData","urlToFetch","window","fetch","response","status","statusText","loadFromUrl","replace","Route","top_bar_TopBar","downloadPdf","downloadPng","downloadSvg","Switch","exact","path","component","Redirect","addLocaleData","toConsumableArray","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","browser","detect","ReactDOM","querySelector","HashRouter"],"mappings":"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","file":"static/js/main.617a1bbf.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport * as React from 'react';\nimport jsPDF from 'jspdf';\nimport {intlShape} from 'react-intl';\nimport {saveAs} from 'file-saver';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n} from 'topola';\n\n/** Called when the view is dragged with the mouse. */\nfunction zoomed() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement!;\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  d3.select(parent).call(d3.zoom().translateTo, x, y);\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: HourglassChart,\n        renderer: DetailedRenderer,\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chart');\n    const parent = (svg.node() as HTMLElement).parentElement as Element;\n\n    d3.select(parent)\n      .on('scroll', scrolled)\n      .call(\n        d3\n          .zoom()\n          .scaleExtent([1, 1])\n          .translateExtent([[0, 0], chartInfo.size])\n          .on('zoom', zoomed),\n      );\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0];\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1];\n    const offsetX = d3.max([0, (parent.clientWidth - chartInfo.size[0]) / 2]);\n    const offsetY = d3.max([0, (parent.clientHeight - chartInfo.size[1]) / 2]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0])\n      .attr('height', chartInfo.size[1]);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    this.renderChart({initialRender: this.props.data !== prevProps.data});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <svg id=\"chart\" />\n      </div>\n    );\n  }\n\n  private getSvgContents() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  downloadSvg() {\n    const blob = new Blob([this.getSvgContents()], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const canvas = document.createElement('canvas');\n\n    // Scale image for better quality.\n    const svg = (document.getElementById('chart') as unknown) as SVGSVGElement;\n    canvas.width = svg.getBBox().width * 2;\n    canvas.height = svg.getBBox().height * 2;\n\n    const blob = new Blob([this.getSvgContents()], {type: 'image/svg+xml'});\n    const img = new Image();\n    img.src = URL.createObjectURL(blob);\n\n    return new Promise<HTMLCanvasElement>((resolve) => {\n      img.onload = () => {\n        const ctx = canvas.getContext('2d')!;\n        const oldFill = ctx.fillStyle;\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = oldFill;\n\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        resolve(canvas);\n      };\n    });\n  }\n\n  downloadPng() {\n    const onBlob = (blob: Blob | null) => {\n      if (blob) {\n        saveAs(blob, 'topola.png');\n      }\n    };\n    this.drawOnCanvas().then((canvas) => canvas.toBlob(onBlob, 'image/png'));\n  }\n\n  downloadPdf() {\n    this.drawOnCanvas().then((canvas) => {\n      const doc = new jsPDF({\n        orientation: canvas.width > canvas.height ? 'l' : 'p',\n        unit: 'pt',\n        format: [canvas.width, canvas.height],\n      });\n      doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n      doc.save('topola.pdf');\n    });\n  }\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {formatDate, getDate} from 'topola';\nimport {FormattedMessage} from 'react-intl';\nimport {GedcomData} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {intlShape} from 'react-intl';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'DEAT', 'BURI'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'SOUR', 'NOTE'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CHR', 'Christening'],\n  ['DEAT', 'Death'],\n  ['EMAIL', 'E-mail'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  return (\n    <FormattedMessage\n      id={`gedcom.${tag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(tag) || tag}\n    />\n  );\n}\n\nfunction translateDate(gedcomDate: string, locale: string) {\n  const dateOrRange = getDate(gedcomDate);\n  const date = dateOrRange && dateOrRange.date;\n  if (!date) {\n    return gedcomDate;\n  }\n  return formatDate(date, locale);\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line) => (\n        <>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </>\n      ))}\n    </>\n  );\n}\n\nfunction eventDetails(entry: GedcomEntry, locale: string) {\n  const lines = [];\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, locale));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(place.data);\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) => {\n      lines.push(<i>{note.data}</i>);\n    });\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(entry.data);\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) => {\n      lines.push(<i>{note.data}</i>);\n    });\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(entry.data);\n  }\n  if (!lines.length) {\n    return null;\n  }\n  return <i>{joinLines(lines)}</i>;\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name) => (\n          <>\n            {name}\n            <br />\n          </>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element) => <div className=\"ui segment\">{element}</div>);\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element) => <div className=\"ui segment\">{element}</div>);\n}\n\nexport class Details extends React.Component<Props, {}> {\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.context.intl.locale),\n        )}\n        {getOtherDetails(entries)}\n        {getDetails(entries, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\n","import {JsonFam, JsonGedcomData, JsonIndi, gedcomEntriesToJson} from 'topola';\nimport {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\n\nexport interface GedcomData {\n  head: GedcomEntry;\n  indis: {[key: string]: GedcomEntry};\n  fams: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nfunction pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const idToIndiMap = new Map<string, JsonIndi>();\n  gedcom.indis.forEach((indi) => {\n    idToIndiMap[indi.id] = indi;\n  });\n\n  return (indiId1: string, indiId2: string) => {\n    const idComparison = strcmp(indiId1, indiId2);\n    const indi1: JsonIndi = idToIndiMap[indiId1];\n    const indi2: JsonIndi = idToIndiMap[indiId2];\n    const birth1 = indi1 && indi1.birth;\n    const birth2 = indi2 && indi2.birth;\n    const date1 =\n      birth1 && (birth1.date || (birth1.dateRange && birth1.dateRange.from));\n    const date2 =\n      birth2 && (birth2.date || (birth2.dateRange && birth2.dateRange.from));\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n      return idComparison;\n    }\n    if (date1.year !== date2.year) {\n      return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n      return idComparison;\n    }\n    if (date1.month !== date2.month) {\n      return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n      return date1.month - date2.month;\n    }\n    return idComparison;\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(fam: JsonFam, gedcom: JsonGedcomData): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(birthDatesComparator(gedcom));\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, gedcom));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi): JsonIndi {\n  if (!indi.imageUrl || indi.imageUrl.startsWith('http')) {\n    return indi;\n  }\n  const newIndi = Object.assign({}, indi);\n  delete newIndi.imageUrl;\n  return newIndi;\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(gedcom: JsonGedcomData): JsonGedcomData {\n  const newIndis = gedcom.indis.map(filterImage);\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links.\n */\nexport function convertGedcom(gedcom: string): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(sortChildren(json)),\n    gedcom: prepareGedcom(entries),\n  };\n}\n","import {convertGedcom, TopolaData} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  return {\n    id: indi || data.indis[0].id,\n    generation: generation || 0,\n  };\n}\n\nfunction prepareData(gedcom: string, cacheId: string): TopolaData {\n  const data = convertGedcom(gedcom);\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  const cachedData = sessionStorage.getItem(url);\n  if (cachedData) {\n    return Promise.resolve(JSON.parse(cachedData));\n  }\n  const urlToFetch = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/' + url\n    : url;\n\n  return window\n    .fetch(urlToFetch)\n    .then((response) => {\n      if (response.status !== 200) {\n        return Promise.reject(new Error(response.statusText));\n      }\n      return response.text();\n    })\n    .then((gedcom) => {\n      return prepareData(gedcom, url);\n    });\n}\n\n/** Loads data from the given GEDCOM file contents. */\nfunction loadGedcomSync(hash: string, gedcom?: string) {\n  const cachedData = sessionStorage.getItem(hash);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  if (!gedcom) {\n    throw new Error('Error loading data. Please upload your file again.');\n  }\n  return prepareData(gedcom, hash);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport function loadGedcom(hash: string, gedcom?: string): Promise<TopolaData> {\n  try {\n    return Promise.resolve(loadGedcomSync(hash, gedcom));\n  } catch (e) {\n    return Promise.reject(new Error('Failed to read GEDCOM file'));\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Card} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <Card className=\"intro\">\n      <Card.Content>\n        <Card.Header>\n          <FormattedMessage\n            id=\"intro.title\"\n            defaultMessage=\"Topola Genealogy Viewer\"\n          />\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <p>\n          <FormattedMessage\n            id=\"intro.description\"\n            defaultMessage={\n              'Topola Genealogy is a genealogy tree viewer that lets you' +\n              ' browse the structure of the family.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.instructions\"\n            defaultMessage={\n              'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n              ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n              ' existing genealogy programs and web sites.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.examples\"\n            defaultMessage={\n              'Here are some examples from the web that you can view:'\n            }\n          />\n        </p>\n        <ul>\n          <li>\n            <GedcomLink\n              url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n              text=\"Karol Wojtyła\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n              GENPOL\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n              text=\"Shakespeare\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n              webtreeprint.com\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n              text=\"Harry Potter\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://famousfamilytrees.blogspot.com/\">\n              Famous Family Trees\n            </a>\n            )\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n          </b>\n          :\n          <FormattedMessage\n            id=\"intro.privacy_note\"\n            defaultMessage={\n              'When using the \"load from file\" option, this site does not' +\n              ' send your data anywhere and files loaded from disk do not' +\n              ' leave your computer. When using \"load from URL\", data is' +\n              ' passed through the {link} service to deal with an issue with' +\n              ' cross-site file loading in the browser (CORS).'\n            }\n            values={{\n              link: (\n                <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n              ),\n            }}\n          />\n        </p>\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n  Dropdown,\n} from 'semantic-ui-react';\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n}\n\ninterface Props {\n  showingChart: boolean;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {loadUrlDialogOpen: false};\n  inputRef?: Input;\n\n  /** Handles the \"Upload file\" button. */\n  handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      const data = (evt.target as FileReader).result;\n      const hash = md5(data as string);\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({file: hash}),\n        state: {data},\n      });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  handleLoadFromUrl() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.inputRef!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  render() {\n    const loadFromUrlModal = (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={(ref) => (this.inputRef = ref!)}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n\n    const chartMenus = this.props.showingChart ? (\n      <>\n        <Menu.Item as=\"a\" onClick={() => this.props.onPrint()}>\n          <Icon name=\"print\" />\n          <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n        </Menu.Item>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"download\" />\n              <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => this.props.onDownloadPdf()}>\n              <FormattedMessage id=\"menu.pdf_file\" defaultMessage=\"PDF file\" />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.props.onDownloadPng()}>\n              <FormattedMessage id=\"menu.png_file\" defaultMessage=\"PNG file\" />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.props.onDownloadSvg()}>\n              <FormattedMessage id=\"menu.svg_file\" defaultMessage=\"SVG file\" />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    ) : null;\n\n    return (\n      <Menu attached=\"top\" inverted color=\"blue\" size=\"large\">\n        <Link to=\"/\">\n          <Menu.Item>\n            <b>Topola Genealogy</b>\n          </Menu.Item>\n        </Link>\n        <Menu.Item as=\"a\" onClick={() => this.handleLoadFromUrl()}>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Menu.Item>\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged\"\n          id=\"fileInput\"\n          onChange={(e) => this.handleUpload(e)}\n        />\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">\n            <Icon name=\"folder open\" />\n            <FormattedMessage\n              id=\"menu.load_from_file\"\n              defaultMessage=\"Load from file\"\n            />\n          </Menu.Item>\n        </label>\n        {chartMenus}\n        <Menu.Item\n          as=\"a\"\n          href=\"https://github.com/PeWu/topola-viewer\"\n          position=\"right\"\n        >\n          <FormattedMessage\n            id=\"menu.github\"\n            defaultMessage=\"Source on GitHub\"\n          />\n        </Menu.Item>\n        {loadFromUrlModal}\n      </Menu>\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Chart} from './chart';\nimport {Details} from './details';\nimport {getSelection, loadFromUrl, loadGedcom} from './load_data';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Responsive} from 'semantic-ui-react';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './top_bar';\nimport {TopolaData} from './gedcom_util';\n\n/** Shows an error message. */\nexport function ErrorMessage(props: {message: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>Failed to load file</Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if currently loading. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  url?: string;\n  /** Whether the side panel is shoen. */\n  showSidePanel?: boolean;\n}\n\nexport class App extends React.Component<RouteComponentProps, {}> {\n  state: State = {loading: false};\n  chartRef: Chart | null = null;\n\n  private isNewData(\n    hash: string | undefined,\n    url: string | undefined,\n  ): boolean {\n    return (\n      !!(hash && hash !== this.state.hash) || !!(url && this.state.url !== url)\n    );\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      return;\n    }\n    const gedcom = this.props.location.state && this.props.location.state.data;\n    const search = queryString.parse(this.props.location.search);\n    const getParam = (name: string) => {\n      const value = search[name];\n      return typeof value === 'string' ? value : undefined;\n    };\n    const url = getParam('url');\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const generation = !isNaN(parsedGen) ? parsedGen : undefined;\n    const hash = getParam('file');\n    const handleCors = getParam('handleCors') !== 'false'; // True by default.\n    const showSidePanel = getParam('sidePanel') === 'true'; // False by default.\n\n    if (!url && !hash) {\n      this.props.history.replace({pathname: '/'});\n    } else if (this.isNewData(hash, url)) {\n      const loadedData = hash\n        ? loadGedcom(hash, gedcom)\n        : loadFromUrl(url!, handleCors);\n      loadedData.then(\n        (data) => {\n          // Set state with data.\n          this.setState(\n            Object.assign({}, this.state, {\n              data,\n              hash,\n              selection: getSelection(data.chartData, indi, generation),\n              error: undefined,\n              loading: false,\n              url,\n              showSidePanel,\n            }),\n          );\n        },\n        (error) => {\n          // Set error state.\n          this.setState(\n            Object.assign({}, this.state, {\n              error: error.message,\n              loading: false,\n            }),\n          );\n        },\n      );\n      // Set loading state.\n      this.setState(\n        Object.assign({}, this.state, {\n          data: undefined,\n          selection: undefined,\n          hash,\n          error: undefined,\n          loading: true,\n          url,\n        }),\n      );\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data.chartData,\n        indi,\n        generation,\n      );\n      if (\n        this.state.selection.id !== selection.id ||\n        this.state.selection.generation !== selection.generation\n      ) {\n        this.setState(\n          Object.assign({}, this.state, {\n            selection,\n          }),\n        );\n      }\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private renderMainArea = () => {\n    if (this.state.data && this.state.selection) {\n      return (\n        <div id=\"content\">\n          <Chart\n            data={this.state.data.chartData}\n            onSelection={this.onSelection}\n            selection={this.state.selection}\n            ref={(ref) => (this.chartRef = ref)}\n          />\n          {this.state.showSidePanel ? (\n            <Responsive minWidth={768} id=\"sidePanel\">\n              <Details\n                gedcom={this.state.data.gedcom}\n                indi={this.state.selection.id}\n              />\n            </Responsive>\n          ) : null}\n        </div>\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              showingChart={\n                !!(\n                  this.props.history.location.pathname === '/view' &&\n                  this.state.data &&\n                  this.state.selection\n                )\n              }\n              onPrint={() => this.chartRef && this.chartRef.print()}\n              onDownloadPdf={() => this.chartRef && this.chartRef.downloadPdf()}\n              onDownloadPng={() => this.chartRef && this.chartRef.downloadPng()}\n              onDownloadSvg={() => this.chartRef && this.chartRef.downloadSvg()}\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}