{"version":3,"sources":["analytics.ts","chart.tsx","gedcom_util.ts","date_util.ts","details.tsx","load_data.ts","intro.tsx","search_index.ts","search_util.tsx","top_bar.tsx","app.tsx","wikitree.ts","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","ChartType","zoomed","parent","d3","node","parentElement","scrollLeft","transform","x","scrollTop","y","scrolled","clientWidth","clientHeight","call","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","_callee6","image","href","response","dataUrl","regenerator_default","a","wrap","_context6","prev","next","baseVal","abrupt","fetch","sent","t0","console","warn","stop","inlineImages","_callee7","svg","images","_context7","Array","from","getElementsByTagName","all","map","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","chart","animating","rerenderRequired","inherits","createClass","key","value","props","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","CircleRenderer","DetailedRenderer","_this2","undefined","initialRender","innerHTML","createChart","json","getChartType","renderer","getRendererType","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","setData","chartInfo","render","startIndi","selection","id","baseGeneration","generation","on","scaleExtent","translateExtent","size","dx","origin","dy","offsetX","offsetY","svgTransition","transition","delay","duration","attr","tween","i","t","animationPromise","then","renderChart","prevProps","react","getElementById","cloneNode","removeAttribute","XMLSerializer","serializeToString","_getSvgContentsWithInlinedImages","asyncToGenerator","mark","_callee","_context","_this3","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","_downloadSvg","_callee2","contents","_context2","getSvgContentsWithInlinedImages","Blob","saveAs","_drawOnCanvas2","_callee3","_context3","t1","_downloadPng","_callee4","_context4","_downloadPdf","_callee5","doc","_context5","jsPDF","orientation","unit","format","addImage","save","React","contextTypes","intlShape","pointerToId","pointer","substring","prepareGedcom","entries","head","find","entry","tag","indis","fams","other","forEach","strcmp","b","compareDates","event1","event2","date1","date","dateRange","date2","year","month","day","sortChildren","gedcom","comparator","idToIndiMap","Map","indi","indiId1","indiId2","indi1","indi2","birth","birthDatesComparator","newFams","fam","children","newChildren","sort","assign","sortFamilyChildren","sortSpouses","idToFamMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","normalizeGedcom","IMAGE_EXTENSIONS","filterImage","newImages","fileName","url","match","has","push","get","title","startsWith","lowerName","toLowerCase","some","ext","endsWith","isImageFile","filterImages","getSoftware","sour","tree","name","DATE_QUALIFIERS","formatDate","hasDay","hasMonth","hasYear","text","dateObject","Date","qualifier","formatOptions","formatMessage","defaultMessage","Intl","DateTimeFormat","join","translateDate","gedcomDate","dateOrRange","getDate","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","translateTag","index_es","joinLines","lines","line","index","Linkify_default","properties","getData","subentry","last","noteDetails","nameDetails","className","split","filter","getDetails","tags","detailsFunction","flatMap","element","hasData","getOtherDetails","includes","toConsumableArray","note","dataDetails","Details","_React$Component","entriesWithData","dereferenced","dereference","place","eventDetails","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","Error","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadFromUrl","_x","_x2","_loadFromUrl","handleCors","cachedData","urlToFetch","getItem","parse","status","statusText","loadGedcom","_x3","_x4","_x5","_loadGedcom","hash","GedcomLink","Link","pathname","search","queryString","Intro","Card","Content","Header","values","link","process","slice","normalize","input","toLocaleLowerCase","replace","compare","score","naturalSort","ref","getHusbandLastName","husband","husbandId","names","LunrSearchIndex","self","lunr","field","boost","spouseLastName","add","normalizedName","normalizedSpouseLastName","query","s","getNameLine","nameTag","eventEntry","dateEntry","getDescriptionLine","birthDate","deathDate","WikiTreeLoginState","loadFileAsText","file","evt","readAsText","isImageFileName","lower","EmbeddedMessageType","TopBar","state","loadUrlDialogOpen","searchResults","wikiTreeLoginState","UNKNOWN","urlInputRef","wikiTreeLoginFormRef","wikiTreeReturnUrlRef","searchRef","searchIndex","_handleUpload","event","files","filesArray","gedcomFile","imageMap","imageFileNames","event_value","md5","location","history","setState","current","results","description","displaySearchResult","eventHandlers","setValue","initialize","buildSearchIndex","view","returnUrl","submit","Cookies","LOGGED_IN","NOT_LOGGED_IN","wikiTreeLoginUsername","_componentDidMount","checkWikiTreeLoginState","initializeSearchIndex","_this4","Modal","onClose","handleClose","centered","Icon","txt","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","Actions","Button","secondary","onClick","primary","_this5","showingChart","Menu","Item","as","onPrint","Dropdown","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","changeView","allowAllRelativesChart","Search","onSearchChange","debounce","_","handleSearch","onResultSelect","handleResultSelect","noResultsMessage","selectFirstResult","_this6","standalone","openLoadUrlDialog","accept","multiple","handleUpload","htmlFor","_this7","showWikiTreeLogin","wikiTreeLogoUrl","wikiTreeLogin","alt","method","display","tooltip","username","attached","inverted","color","fileMenus","chartMenus","wikiTreeLoginMenu","sourceLink","poweredByLink","loadFromUrlModal","wikiTreeGet","request","requestData","apiUrl","responseBody","FormData","append","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","fetchedResults","getChildren","getSpouses","items","person","Name","clientLogin","_x7","_clientLogin","authcode","loadWikiTree","_x8","_x9","_loadWikiTree","everyone","firstPerson","spouseKeys","ancestorKeys","ancestorDetails","descendantGenerationLimit","toFetch","people","allSpouses","families","spouses","idToName","converted","hostname","clear","Spouses","personId","flat","Children","c","set","Id","Mother","Father","famId","getFamilyId","getSet","wife","Set","convertPerson","spouse","familySpouses","Gender","_ref","_ref2","slicedToArray","husb","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","FirstName","firstName","LastNameAtBirth","lastName","famc","sex","BirthDate","BirthLocation","DataStatus","DeathDate","DeathLocation","death","PhotoData","path","dataStatus","matchedDate","dataRange","gedcomIndis","escapedId","level","newSet","ErrorMessage","Message","negative","message","ErrorPopup","Portal","onDismiss","App","loading","embedded","showErrorPopup","wikiTreeSource","chartRef","updateDisplay","gen","String","downloadPdf","downloadPng","downloadSvg","onDismissErrorPopup","renderMainArea","error","loadingMore","Loader","active","inline","chart_Chart","showSidePanel","Responsive","minWidth","details_Details","source","otherStateChanges","changes","_onMessage","PARENT_READY","postMessage","READY","GEDCOM","event_label","setError","componentDidUpdate","_componentDidUpdate","getParam","parsedGen","chartTypes","software","loadMoreFromWikitree","_data","onMessage","Number","isNaN","isNewData","t2","Route","top_bar_TopBar","Switch","exact","component","Redirect","addLocaleData","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","browser","detect","ReactDOM","querySelector","HashRouter"],"mappings":"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","file":"static/js/main.fd3735bf.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import * as d3 from 'd3';\nimport * as React from 'react';\nimport jsPDF from 'jspdf';\nimport {intlShape} from 'react-intl';\nimport {saveAs} from 'file-saver';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n} from 'topola';\n\n/** Called when the view is dragged with the mouse. */\nfunction zoomed() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement!;\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  d3.select(parent).call(d3.zoom().translateTo, x, y);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n\n  private getChartType() {\n    switch (this.props.chartType) {\n      case ChartType.Hourglass:\n        return HourglassChart;\n      case ChartType.Relatives:\n        return RelativesChart;\n      case ChartType.Fancy:\n        return FancyChart;\n      default:\n        // Fall back to hourglass chart.\n        return HourglassChart;\n    }\n  }\n\n  private getRendererType() {\n    switch (this.props.chartType) {\n      case ChartType.Fancy:\n        return CircleRenderer;\n      default:\n        // Use DetailedRenderer by default.\n        return DetailedRenderer;\n    }\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      return;\n    }\n\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: this.getChartType(),\n        renderer: this.getRendererType(),\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    } else {\n      this.chart!.setData(this.props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chart');\n    const parent = (svg.node() as HTMLElement).parentElement as Element;\n\n    d3.select(parent)\n      .on('scroll', scrolled)\n      .call(\n        d3\n          .zoom()\n          .scaleExtent([1, 1])\n          .translateExtent([[0, 0], chartInfo.size])\n          .on('zoom', zoomed),\n      );\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0];\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1];\n    const offsetX = d3.max([0, (parent.clientWidth - chartInfo.size[0]) / 2]);\n    const offsetY = d3.max([0, (parent.clientHeight - chartInfo.size[1]) / 2]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0])\n      .attr('height', chartInfo.size[1]);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        this.renderChart({initialRender: false});\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    const initialRender = this.props.chartType !== prevProps.chartType;\n    this.renderChart({initialRender});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <svg id=\"chart\" />\n      </div>\n    );\n  }\n\n  private getSvgContents() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  private async getSvgContentsWithInlinedImages() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  async downloadSvg() {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return await drawOnCanvas(await loadImage(blob));\n  }\n\n  async downloadPng() {\n    const canvas = await this.drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'topola.png');\n  }\n\n  async downloadPdf() {\n    const canvas = await this.drawOnCanvas();\n    const doc = new jsPDF({\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\n      unit: 'pt',\n      format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('topola.pdf');\n  }\n}\n","import {\n  JsonFam,\n  JsonGedcomData,\n  JsonIndi,\n  gedcomEntriesToJson,\n  JsonImage,\n  JsonEvent,\n} from 'topola';\nimport {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Compares dates of the given events. */\nfunction compareDates(\n  event1: JsonEvent | undefined,\n  event2: JsonEvent | undefined,\n): number {\n  const date1 =\n    event1 && (event1.date || (event1.dateRange && event1.dateRange.from));\n  const date2 =\n    event2 && (event2.date || (event2.dateRange && event2.dateRange.from));\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const idToIndiMap = new Map<string, JsonIndi>();\n  gedcom.indis.forEach((indi) => {\n    idToIndiMap[indi.id] = indi;\n  });\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi = idToIndiMap[indiId1];\n    const indi2: JsonIndi = idToIndiMap[indiId2];\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const idToFamMap = new Map<string, JsonFam>();\n  gedcom.fams.forEach((fam) => {\n    idToFamMap[fam.id] = fam;\n  });\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam = idToFamMap[famId1];\n    const fam2: JsonFam = idToFamMap[famId2];\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nfunction isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import {Date as TopolaDate, DateRange, getDate} from 'topola';\nimport {InjectedIntl} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: InjectedIntl) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: InjectedIntl) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: InjectedIntl) {\n  const dateOrRange = getDate(gedcomDate);\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {FormattedMessage, InjectedIntl} from 'react-intl';\nimport {GedcomData, pointerToId} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {intlShape} from 'react-intl';\nimport {translateDate} from './date_util';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'DEAT', 'BURI', 'EVEN'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'NOTE', 'SOUR'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CHR', 'Christening'],\n  ['DEAT', 'Death'],\n  ['EMAIL', 'E-mail'],\n  ['EVEN', 'Event'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  return (\n    <FormattedMessage\n      id={`gedcom.${tag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(tag) || tag}\n    />\n  );\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nfunction getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\nfunction eventDetails(entry: GedcomEntry, intl: InjectedIntl) {\n  const lines = [];\n  if (entry.data && entry.data.length > 1) {\n    lines.push(<i>{entry.data}</i>);\n  }\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, intl));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(...getData(place));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return joinLines(\n    getData(entry).map((line, index) => <i key={index}>{line}</i>),\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nfunction dereference(entry: GedcomEntry, gedcom: GedcomData) {\n  if (entry.data) {\n    const dereferenced = gedcom.other[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\nexport class Details extends React.Component<Props, {}> {\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n    const entriesWithData = entries\n      .map((entry) => dereference(entry, this.props.gedcom))\n      .filter(hasData);\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.context.intl as InjectedIntl),\n        )}\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\n","import {convertGedcom, TopolaData} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    indi && data.indis.some((i) => i.id === indi) ? indi : data.indis[0].id;\n  return {id, generation: generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  const urlToFetch = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new Error('Error loading data. Please upload your file again.');\n  }\n  return prepareData(gedcom, hash, images);\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Card} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString.slice(0, 16);\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <Card className=\"intro\">\n      <Card.Content>\n        <Card.Header>\n          <FormattedMessage\n            id=\"intro.title\"\n            defaultMessage=\"Topola Genealogy Viewer\"\n          />\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <p>\n          <FormattedMessage\n            id=\"intro.description\"\n            defaultMessage={\n              'Topola Genealogy is a genealogy tree viewer that lets you' +\n              ' browse the structure of the family.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.instructions\"\n            defaultMessage={\n              'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n              ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n              ' existing genealogy programs and web sites.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.examples\"\n            defaultMessage={\n              'Here are some examples from the web that you can view:'\n            }\n          />\n        </p>\n        <ul>\n          <li>\n            <GedcomLink\n              url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n              text=\"Karol Wojtyła\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n              GENPOL\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n              text=\"Shakespeare\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n              webtreeprint.com\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n              text=\"Harry Potter\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://famousfamilytrees.blogspot.com/\">\n              Famous Family Trees\n            </a>\n            )\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n          </b>\n          :\n          <FormattedMessage\n            id=\"intro.privacy_note\"\n            defaultMessage={\n              'When using the \"load from file\" option, this site does not' +\n              ' send your data anywhere and files loaded from disk do not' +\n              ' leave your computer. When using \"load from URL\", data is' +\n              ' passed through the {link} service to deal with an issue with' +\n              ' cross-site file loading in the browser (CORS).'\n            }\n            values={{\n              link: (\n                <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n              ),\n            }}\n          />\n        </p>\n        <p className=\"ui right aligned version\">\n          version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n          <a\n            href={`https://github.com/PeWu/topola-viewer/commit/${\n              process.env.REACT_APP_GIT_SHA\n            }`}\n          >\n            {process.env.REACT_APP_GIT_SHA}\n          </a>\n          )\n        </p>\n      </Card.Content>\n    </Card>\n  );\n}\n","import naturalSort from 'javascript-natural-sort';\nimport lunr from 'lunr';\nimport {GedcomData, pointerToId} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: GedcomEntry;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(indi: GedcomEntry, gedcom: GedcomData): string {\n  return indi.tree\n    .filter((entry) => entry.tag === 'FAMS')\n    .map((entry) => gedcom.fams[pointerToId(entry.data)])\n    .filter((entry) => !!entry)\n    .map((entry) => {\n      const husband = entry.tree.find((entry) => entry.tag === 'HUSB');\n      const husbandId = husband && pointerToId(husband.data);\n      return (\n        husbandId &&\n        husbandId !== pointerToId(indi.pointer) &&\n        gedcom.indis[husbandId]\n      );\n    })\n    .filter((entry) => !!entry)\n    .flatMap((husband) =>\n      (husband as GedcomEntry).tree\n        .filter((entry) => entry.tag === 'NAME')\n        .map((entry) => {\n          const names = entry.data.split('/');\n          return names.length >= 2 ? names[1] : '';\n        }),\n    )\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n\n  constructor(private gedcom: GedcomData) {}\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function() {\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      for (let id in self.gedcom.indis) {\n        const indi = self.gedcom.indis[id];\n        const name = indi.tree\n          .filter((entry) => entry.tag === 'NAME')\n          .map((entry) => entry.data)\n          .join(' ');\n        const spouseLastName = getHusbandLastName(indi, self.gedcom);\n        this.add({\n          id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      }\n    });\n  }\n\n  public search(input: string) {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.gedcom.indis[result.ref]}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(gedcom: GedcomData): SearchIndex {\n  const index = new LunrSearchIndex(gedcom);\n  index.initialize();\n  return index;\n}\n","import * as React from 'react';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {InjectedIntl} from 'react-intl';\nimport {SearchResult} from './search_index';\nimport {translateDate} from './date_util';\n\nfunction getNameLine(result: SearchResult) {\n  const nameTag = result.indi.tree.find((entry) => entry.tag === 'NAME');\n  const name =\n    nameTag &&\n    nameTag.data\n      .split('/')\n      .filter((s) => !!s)\n      .join(' ');\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\nfunction getDate(indi: GedcomEntry, tag: string, intl: InjectedIntl) {\n  const eventEntry = indi.tree.find((entry) => entry.tag === tag);\n  const dateEntry =\n    eventEntry && eventEntry.tree.find((entry) => entry.tag === 'DATE');\n  return (dateEntry && translateDate(dateEntry.data, intl)) || '';\n}\n\nfunction getDescriptionLine(indi: GedcomEntry, intl: InjectedIntl) {\n  const birthDate = getDate(indi, 'BIRT', intl);\n  const deathDate = getDate(indi, 'DEAT', intl);\n  if (!deathDate) {\n    return birthDate;\n  }\n  return `${birthDate} – ${deathDate}`;\n}\n\n/** Produces an object that is displayed in the Semantic UI Search results. */\nexport function displaySearchResult(result: SearchResult, intl: InjectedIntl) {\n  return {\n    id: result.id,\n    key: result.id,\n    title: getNameLine(result),\n    description: getDescriptionLine(result.indi, intl),\n  };\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport Cookies from 'js-cookie';\nimport debounce from 'debounce';\nimport md5 from 'md5';\nimport {analyticsEvent} from './analytics';\nimport {buildSearchIndex, SearchIndex} from './search_index';\nimport {displaySearchResult} from './search_util';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {GedcomData} from './gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n  Dropdown,\n  Search,\n  SearchProps,\n  SearchResultProps,\n} from 'semantic-ui-react';\n\nenum WikiTreeLoginState {\n  UNKNOWN,\n  NOT_LOGGED_IN,\n  LOGGED_IN,\n}\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n  wikiTreeLoginState: WikiTreeLoginState;\n  wikiTreeLoginUsername?: string;\n  searchResults: SearchResultProps[];\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  gedcom?: GedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show the 'Log in to WikiTree' button. */\n  showWikiTreeLogin: boolean;\n}\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    loadUrlDialogOpen: false,\n    searchResults: [],\n    wikiTreeLoginState: WikiTreeLoginState.UNKNOWN,\n  };\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  urlInputRef: React.RefObject<Input> = React.createRef();\n  wikiTreeLoginFormRef: React.RefObject<HTMLFormElement> = React.createRef();\n  wikiTreeReturnUrlRef: React.RefObject<HTMLInputElement> = React.createRef();\n  searchRef?: {setValue(value: string): void};\n  searchIndex?: SearchIndex;\n\n  /** Handles the \"Upload file\" button. */\n  private async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(this.props.location.search);\n    const historyPush =\n      search.file === hash\n        ? this.props.history.replace\n        : this.props.history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  private openLoadUrlDialog() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.urlInputRef.current!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  private handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  private handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      analyticsEvent('url_selected');\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  private handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  /** On search input change. */\n  private handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = this.searchIndex!.search(input).map((result) =>\n      displaySearchResult(result, this.context.intl),\n    );\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\n  }\n\n  /** On search result selected. */\n  private handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    this.props.eventHandlers.onSelection({id, generation: 0});\n    this.searchRef!.setValue('');\n  }\n\n  private initializeSearchIndex() {\n    if (this.props.gedcom) {\n      this.searchIndex = buildSearchIndex(this.props.gedcom);\n    }\n  }\n\n  changeView(view: string) {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      this.props.history.push(location);\n    }\n  }\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  private wikiTreeLogin() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // Append '&' because the login page appends '?authcode=...' to this URL.\n    // TODO: remove ?authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}&`;\n    this.wikiTreeReturnUrlRef.current!.value = returnUrl;\n    this.wikiTreeLoginFormRef.current!.submit();\n  }\n\n  private checkWikiTreeLoginState() {\n    const wikiTreeLoginState =\n      Cookies.get('wikidb_wtb_UserID') !== undefined\n        ? WikiTreeLoginState.LOGGED_IN\n        : WikiTreeLoginState.NOT_LOGGED_IN;\n    if (this.state.wikiTreeLoginState !== wikiTreeLoginState) {\n      const wikiTreeLoginUsername = Cookies.get('wikidb_wtb_UserName');\n      this.setState(\n        Object.assign({}, this.state, {\n          wikiTreeLoginState,\n          wikiTreeLoginUsername,\n        }),\n      );\n    }\n  }\n\n  async componentDidMount() {\n    this.checkWikiTreeLoginState();\n    this.initializeSearchIndex();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.checkWikiTreeLoginState();\n    if (prevProps.gedcom !== this.props.gedcom) {\n      this.initializeSearchIndex();\n    }\n  }\n\n  private loadFromUrlModal() {\n    return (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={this.urlInputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  private chartMenus() {\n    if (!this.props.showingChart) {\n      return null;\n    }\n    return (\n      <>\n        <Menu.Item as=\"a\" onClick={() => this.props.eventHandlers.onPrint()}>\n          <Icon name=\"print\" />\n          <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n        </Menu.Item>\n\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"download\" />\n              <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPdf()}\n            >\n              <FormattedMessage id=\"menu.pdf_file\" defaultMessage=\"PDF file\" />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPng()}\n            >\n              <FormattedMessage id=\"menu.png_file\" defaultMessage=\"PNG file\" />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadSvg()}\n            >\n              <FormattedMessage id=\"menu.svg_file\" defaultMessage=\"SVG file\" />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"eye\" />\n              <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => this.changeView('hourglass')}>\n              <Icon name=\"hourglass\" />\n              <FormattedMessage\n                id=\"menu.hourglass\"\n                defaultMessage=\"Hourglass chart\"\n              />\n            </Dropdown.Item>\n            {this.props.allowAllRelativesChart ? (\n              <Dropdown.Item onClick={() => this.changeView('relatives')}>\n                <Icon name=\"users\" />\n                <FormattedMessage\n                  id=\"menu.relatives\"\n                  defaultMessage=\"All relatives\"\n                />\n              </Dropdown.Item>\n            ) : null}\n            <Dropdown.Item onClick={() => this.changeView('fancy')}>\n              <Icon name=\"users\" />\n              <FormattedMessage\n                id=\"menu.fancy\"\n                defaultMessage=\"Fancy tree (experimental)\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Search\n          onSearchChange={debounce(\n            (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\n              this.handleSearch(data.value),\n            200,\n          )}\n          onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\n          results={this.state.searchResults}\n          noResultsMessage={this.context.intl.formatMessage({\n            id: 'menu.search.no_results',\n            defaultMessage: 'No results found',\n          })}\n          placeholder={this.context.intl.formatMessage({\n            id: 'menu.search.placeholder',\n            defaultMessage: 'Search for people',\n          })}\n          selectFirstResult={true}\n          ref={(ref) =>\n            (this.searchRef = (ref as unknown) as {\n              setValue(value: string): void;\n            })\n          }\n        />\n      </>\n    );\n  }\n\n  private fileMenus() {\n    if (!this.props.standalone) {\n      return null;\n    }\n    return (\n      <>\n        <Link to=\"/\">\n          <Menu.Item>\n            <b>Topola Genealogy</b>\n          </Menu.Item>\n        </Link>\n        <Menu.Item as=\"a\" onClick={() => this.openLoadUrlDialog()}>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Menu.Item>\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged,image/*\"\n          id=\"fileInput\"\n          multiple\n          onChange={(e) => this.handleUpload(e)}\n        />\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">\n            <Icon name=\"folder open\" />\n            <FormattedMessage\n              id=\"menu.load_from_file\"\n              defaultMessage=\"Load from file\"\n            />\n          </Menu.Item>\n        </label>\n      </>\n    );\n  }\n\n  private wikiTreeLoginMenu() {\n    if (!this.props.showWikiTreeLogin) {\n      return null;\n    }\n    const wikiTreeLogoUrl =\n      'https://www.wikitree.com/photo.php/a/a5/WikiTree_Images.png';\n    switch (this.state.wikiTreeLoginState) {\n      case WikiTreeLoginState.NOT_LOGGED_IN:\n        return (\n          <Menu.Item as=\"a\" onClick={() => this.wikiTreeLogin()}>\n            <img\n              src={wikiTreeLogoUrl}\n              alt=\"WikiTree logo\"\n              style={{width: '24px', height: '24px'}}\n            />\n            <FormattedMessage\n              id=\"menu.wikitree_login\"\n              defaultMessage=\"Log in to WikiTree\"\n            />\n            <form\n              action=\"https://apps.wikitree.com/api.php\"\n              method=\"POST\"\n              style={{display: 'hidden'}}\n              ref={this.wikiTreeLoginFormRef}\n            >\n              <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\n              <input\n                type=\"hidden\"\n                name=\"returnURL\"\n                ref={this.wikiTreeReturnUrlRef}\n              />\n            </form>\n          </Menu.Item>\n        );\n      case WikiTreeLoginState.LOGGED_IN:\n        const tooltip = this.state.wikiTreeLoginUsername\n          ? this.context.intl.formatMessage(\n              {\n                id: 'menu.wikitree_popup_username',\n                defaultMessage: 'Logged in to WikiTree as {username}',\n              },\n              {username: this.state.wikiTreeLoginUsername},\n            )\n          : this.context.intl.formatMessage({\n              id: 'menu.wikitree_popup',\n              defaultMessage: 'Logged in to WikiTree',\n            });\n        return (\n          <Menu.Item title={tooltip}>\n            <img\n              src={wikiTreeLogoUrl}\n              alt=\"WikiTree logo\"\n              style={{width: '24px', height: '24px'}}\n            />\n            <FormattedMessage\n              id=\"menu.wikitree_logged_in\"\n              defaultMessage=\"Logged in\"\n            />\n          </Menu.Item>\n        );\n      default:\n        return null;\n    }\n  }\n\n  private sourceLink() {\n    return (\n      <Menu.Item\n        as=\"a\"\n        href=\"https://github.com/PeWu/topola-viewer\"\n        target=\"_blank\"\n      >\n        <FormattedMessage id=\"menu.github\" defaultMessage=\"Source on GitHub\" />\n      </Menu.Item>\n    );\n  }\n\n  private poweredByLink() {\n    return (\n      <Menu.Item\n        as=\"a\"\n        href=\"https://pewu.github.com/topola-viewer\"\n        target=\"_blank\"\n      >\n        <FormattedMessage\n          id=\"menu.powered_by\"\n          defaultMessage=\"Powered by Topola\"\n        />\n      </Menu.Item>\n    );\n  }\n\n  render() {\n    return (\n      <Menu attached=\"top\" inverted color=\"blue\" size=\"large\">\n        {this.fileMenus()}\n        {this.chartMenus()}\n        <Menu.Menu position=\"right\">\n          {this.wikiTreeLoginMenu()}\n          {this.props.standalone ? this.sourceLink() : this.poweredByLink()}\n        </Menu.Menu>\n        {this.loadFromUrlModal()}\n      </Menu>\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from './analytics';\nimport {Chart, ChartType} from './chart';\nimport {Details} from './details';\nimport {FormattedMessage} from 'react-intl';\nimport {getSelection, loadFromUrl, loadGedcom} from './load_data';\nimport {getSoftware, TopolaData} from './gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {intlShape} from 'react-intl';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Responsive} from 'semantic-ui-react';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './top_bar';\nimport {loadWikiTree} from './wikitree';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\n/** Returs true if the changes object has values that are different than those in state. */\nfunction hasUpdatedValues<T>(state: T, changes: Partial<T> | undefined) {\n  if (!changes) {\n    return false;\n  }\n  return Object.entries(changes).some(\n    ([key, value]) => value !== undefined && state[key] !== value,\n  );\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if data is currently being loaded. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  url?: string;\n  /** Whether the side panel is shown. */\n  showSidePanel?: boolean;\n  /** Whether the app is in embedded mode, i.e. embedded in an iframe. */\n  embedded: boolean;\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  standalone: boolean;\n  /** Type of displayed chart. */\n  chartType: ChartType;\n  /** Whether to show the error popup. */\n  showErrorPopup: boolean;\n  /** True if data is loaded from WikiTree. */\n  wikiTreeSource: boolean;\n  loadingMore?: boolean;\n}\n\nexport class App extends React.Component<RouteComponentProps, {}> {\n  state: State = {\n    loading: false,\n    embedded: false,\n    standalone: true,\n    chartType: ChartType.Hourglass,\n    showErrorPopup: false,\n    wikiTreeSource: false,\n  };\n  chartRef: Chart | null = null;\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  private isNewData(\n    hash: string | undefined,\n    url: string | undefined,\n    gedcom: string | undefined,\n    source: string | undefined,\n  ): boolean {\n    return (\n      !!(hash && hash !== this.state.hash) ||\n      !!(url && this.state.url !== url) ||\n      (!!gedcom && !this.state.loading && !this.state.data) ||\n      (source === 'wikitree' &&\n        !this.state.loading &&\n        !this.state.data &&\n        !this.state.error)\n    );\n  }\n\n  /** Sets the state with a new individual selection and chart type. */\n  private updateDisplay(\n    selection: IndiInfo,\n    otherStateChanges?: Partial<State>,\n  ) {\n    if (\n      !this.state.selection ||\n      this.state.selection.id !== selection.id ||\n      this.state.selection!.generation !== selection.generation ||\n      hasUpdatedValues(this.state, otherStateChanges)\n    ) {\n      this.setState(\n        Object.assign({}, this.state, {selection}, otherStateChanges),\n      );\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  private setError(error: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        error: error,\n        loading: false,\n      }),\n    );\n  }\n\n  private async onMessage(message: EmbeddedMessage) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            selection: getSelection(data.chartData),\n            error: undefined,\n            loading: false,\n          }),\n        );\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        this.setError(error.message);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  async componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      return;\n    }\n\n    const search = queryString.parse(this.props.location.search);\n    const getParam = (name: string) => {\n      const value = search[name];\n      return typeof value === 'string' ? value : undefined;\n    };\n\n    const showSidePanel = getParam('sidePanel') !== 'false'; // True by default.\n    const embedded = getParam('embedded') === 'true'; // False by default.\n\n    if (embedded && !this.state.embedded) {\n      this.setState(\n        Object.assign({}, this.state, {\n          embedded: true,\n          standalone: false,\n          showSidePanel,\n        }),\n      );\n      // Notify the parent window that we are ready.\n      window.parent.postMessage('ready', '*');\n      window.addEventListener('message', (data) => this.onMessage(data.data));\n    }\n    if (embedded) {\n      // If the app is embedded, do not run the normal loading code.\n      return;\n    }\n\n    const url = getParam('url');\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const generation = !isNaN(parsedGen) ? parsedGen : undefined;\n    const hash = getParam('file');\n    const handleCors = getParam('handleCors') !== 'false'; // True by default.\n    const standalone = getParam('standalone') !== 'false'; // True by default.\n    const view = getParam('view');\n    const source = getParam('source');\n    const authcode = getParam('?authcode');\n\n    const chartTypes = new Map<string | undefined, ChartType>([\n      ['relatives', ChartType.Relatives],\n      ['fancy', ChartType.Fancy],\n    ]);\n    // Hourglass is the default view.\n    const chartType = chartTypes.get(view) || ChartType.Hourglass;\n\n    const gedcom = this.props.location.state && this.props.location.state.data;\n    const images =\n      this.props.location.state && this.props.location.state.images;\n\n    if (!url && !hash && !source) {\n      this.props.history.replace({pathname: '/'});\n    } else if (this.isNewData(hash, url, gedcom, source)) {\n      try {\n        // Set loading state.\n        this.setState(\n          Object.assign({}, this.state, {\n            data: undefined,\n            selection: undefined,\n            hash,\n            error: undefined,\n            loading: true,\n            url,\n            standalone,\n            chartType,\n          }),\n        );\n        const data =\n          source === 'wikitree'\n            ? await loadWikiTree(indi!, authcode)\n            : hash\n            ? await loadGedcom(hash, gedcom, images)\n            : await loadFromUrl(url!, handleCors);\n\n        const software = getSoftware(data.gedcom.head);\n        if (source === 'wikitree') {\n          analyticsEvent('wikitree_loaded');\n        } else {\n          analyticsEvent(hash ? 'upload_file_loaded' : 'url_file_loaded', {\n            event_label: software,\n            event_value: (images && images.size) || 0,\n          });\n        }\n\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            hash,\n            selection: getSelection(data.chartData, indi, generation),\n            error: undefined,\n            loading: false,\n            url,\n            showSidePanel,\n            standalone,\n            chartType,\n            wikiTreeSource: source === 'wikitree',\n          }),\n        );\n      } catch (error) {\n        analyticsEvent(hash ? 'upload_file_error' : 'url_file_error');\n        this.setError(error.message);\n      }\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data.chartData,\n        indi,\n        generation,\n      );\n      const loadMoreFromWikitree =\n        source === 'wikitree' &&\n        (!this.state.selection || this.state.selection.id !== selection.id);\n      this.updateDisplay(selection, {\n        chartType,\n        loadingMore: loadMoreFromWikitree || undefined,\n      });\n      if (loadMoreFromWikitree) {\n        const data = await loadWikiTree(indi!);\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            hash,\n            selection: getSelection(data.chartData, indi, generation),\n            error: undefined,\n            loading: false,\n            url,\n            showSidePanel,\n            standalone,\n            chartType,\n            wikiTreeSource: source === 'wikitree',\n            loadingMore: false,\n          }),\n        );\n      }\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    analyticsEvent('selection_changed');\n    if (this.state.embedded) {\n      // In embedded mode the URL doesn't change.\n      this.updateDisplay(selection);\n      return;\n    }\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private onPrint = () => {\n    analyticsEvent('print');\n    this.chartRef && this.chartRef.print();\n  };\n\n  private showErrorPopup(message: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: true,\n        error: message,\n      }),\n    );\n  }\n\n  private onDownloadPdf = async () => {\n    analyticsEvent('download_pdf');\n    try {\n      this.chartRef && (await this.chartRef.downloadPdf());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadPng = async () => {\n    analyticsEvent('download_png');\n    try {\n      this.chartRef && (await this.chartRef.downloadPng());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadSvg = () => {\n    analyticsEvent('download_svg');\n    this.chartRef && this.chartRef.downloadSvg();\n  };\n\n  onDismissErrorPopup = () => {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: false,\n      }),\n    );\n  };\n\n  private renderMainArea = () => {\n    if (this.state.data && this.state.selection) {\n      return (\n        <div id=\"content\">\n          <ErrorPopup\n            open={this.state.showErrorPopup}\n            message={this.state.error}\n            onDismiss={this.onDismissErrorPopup}\n          />\n          {this.state.loadingMore ? (\n            <Loader active inline size=\"small\" />\n          ) : null}\n          <Chart\n            data={this.state.data.chartData}\n            selection={this.state.selection}\n            chartType={this.state.chartType}\n            onSelection={this.onSelection}\n            ref={(ref) => (this.chartRef = ref)}\n          />\n          {this.state.showSidePanel ? (\n            <Responsive minWidth={768} id=\"sidePanel\">\n              <Details\n                gedcom={this.state.data.gedcom}\n                indi={this.state.selection.id}\n              />\n            </Responsive>\n          ) : null}\n        </div>\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              gedcom={this.state.data && this.state.data.gedcom}\n              allowAllRelativesChart={!this.state.wikiTreeSource}\n              showingChart={\n                !!(\n                  this.props.history.location.pathname === '/view' &&\n                  this.state.data &&\n                  this.state.selection\n                )\n              }\n              standalone={this.state.standalone}\n              eventHandlers={{\n                onSelection: this.onSelection,\n                onPrint: this.onPrint,\n                onDownloadPdf: this.onDownloadPdf,\n                onDownloadPng: this.onDownloadPng,\n                onDownloadSvg: this.onDownloadSvg,\n              }}\n              showWikiTreeLogin={this.state.wikiTreeSource}\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import Cookies from 'js-cookie';\nimport {Date, JsonFam, JsonIndi} from 'topola';\nimport {GedcomData, TopolaData, normalizeGedcom} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\n\n/** WikiTree API getAncestors request. */\ninterface GetAncestorsRequest {\n  action: 'getAncestors';\n  key: string;\n  fields: string;\n}\n\n/** WikiTree API getRelatives request. */\ninterface GetRelatives {\n  action: 'getRelatives';\n  keys: string;\n  getChildren?: true;\n  getSpouses?: true;\n}\n\ninterface ClientLogin {\n  action: 'clientLogin';\n  authcode: string;\n}\n\ntype WikiTreeRequest = GetAncestorsRequest | GetRelatives | ClientLogin;\n\n/** Person structure returned from WikiTree API. */\ninterface Person {\n  Id: number;\n  Name: string;\n  FirstName: string;\n  LastNameAtBirth: string;\n  Spouses: {[key: number]: Person};\n  Children: {[key: number]: Person};\n  Mother: number;\n  Father: number;\n  Gender: string;\n  BirthDate: string;\n  DeathDate: string;\n  BirthLocation: string;\n  DeathLocation: string;\n  marriage_location: string;\n  marriage_date: string;\n  DataStatus?: {\n    BirthDate: string;\n    DeathDate: string;\n  };\n  PhotoData?: {\n    path: string;\n  };\n}\n\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\n  const requestData = new FormData();\n  requestData.append('format', 'json');\n  for (const key in request) {\n    requestData.append(key, request[key]);\n  }\n  const apiUrl = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/https://apps.wikitree.com/api.php'\n    : 'https://apps.wikitree.com/api.php';\n  const response = await window.fetch(apiUrl, {\n    method: 'POST',\n    body: requestData,\n  });\n  const responseBody = await response.text();\n  return JSON.parse(responseBody);\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(key: string, handleCors: boolean) {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = sessionStorage.getItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getAncestors',\n      key: key,\n      fields: '*',\n    },\n    handleCors,\n  );\n  const result = response[0].ancestors as Person[];\n  sessionStorage.setItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(keys: string[], handleCors: boolean) {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = sessionStorage.getItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getRelatives',\n      keys: keysToFetch.join(','),\n      getChildren: true,\n      getSpouses: true,\n    },\n    handleCors,\n  );\n  if (response[0].items === null) {\n    throw new Error(`WikiTree profile ${keysToFetch[0]} not found.`);\n  }\n  const fetchedResults = response[0].items.map(\n    (x: {person: Person}) => x.person,\n  ) as Person[];\n  fetchedResults.forEach((person) => {\n    sessionStorage.setItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(fetchedResults);\n}\n\nexport async function clientLogin(authcode: string) {\n  const response = await wikiTreeGet(\n    {\n      action: 'clientLogin',\n      authcode,\n    },\n    false,\n  );\n  return response.clientLogin;\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !Cookies.get('wikidb_wtb_UserID') && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    throw new Error(\n      `WikiTree profile ${key} is not accessible. Try logging in.`,\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses).map((s) => s.Name);\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n  everyone.push(...ancestorDetails);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 10;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person);\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(indis);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      person.DataStatus && person.DataStatus.BirthDate,\n    );\n    indi.birth = Object.assign({}, parsedDate, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      person.DataStatus && person.DataStatus.DeathDate,\n    );\n    indi.death = Object.assign({}, parsedDate, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [{url: `https://wikitree.com${person.PhotoData.path}`}];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string) {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {text: date};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dataRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dataRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(indis: JsonIndi[]): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  indis.forEach((indi) => {\n    // WikiTree URLs replace spaces with underscores.\n    const escapedId = indi.id.replace(/ /g, '_');\n    gedcomIndis[indi.id] = {\n      level: 0,\n      pointer: `@${indi.id}@`,\n      tag: 'INDI',\n      data: '',\n      tree: [\n        {\n          level: 1,\n          pointer: '',\n          tag: 'NAME',\n          data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n          tree: [],\n        },\n        {\n          level: 1,\n          pointer: '',\n          tag: 'WWW',\n          data: `https://www.wikitree.com/wiki/${escapedId}`,\n          tree: [],\n        },\n      ],\n    };\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: {},\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}