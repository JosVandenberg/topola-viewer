{"version":3,"sources":["topola.jpg","analytics.ts","chart.tsx","gedcom_util.ts","date_util.ts","details.tsx","load_data.ts","intro.tsx","wikitree.ts","search_index.ts","search_util.tsx","top_bar.tsx","app.tsx","index.tsx","wikitree.png"],"names":["module","exports","analyticsEvent","action","data","window","gtag","ChartType","zoomed","size","parent","select","node","scale","event","transform","k","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","image","a","href","baseVal","fetch","response","dataUrl","console","warn","inlineImages","svg","images","Array","from","getElementsByTagName","all","map","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","Chart","chart","animating","rerenderRequired","zoomBehavior","this","props","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","CircleRenderer","DetailedRenderer","factor","scaleBy","args","initialRender","freezeAnimation","innerHTML","createChart","json","getChartType","renderer","getRendererType","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","setData","chartInfo","render","startIndi","selection","id","baseGeneration","generation","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","i","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","prevProps","Responsive","minWidth","className","onClick","getElementById","cloneNode","removeAttribute","setAttribute","String","Number","getAttribute","querySelector","XMLSerializer","serializeToString","getStrippedSvg","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","getSvgContentsWithInlinedImages","contents","Blob","saveAs","jspdf","default","doc","orientation","unit","format","addImage","save","React","contextTypes","intlShape","pointerToId","pointer","substring","length","idToIndiMap","Map","indis","forEach","indi","set","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","compareDates","event1","event2","date1","date","dateRange","date2","year","month","day","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","get","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","normalizeGedcom","IMAGE_EXTENSIONS","filterImage","newImages","fileName","url","match","has","push","title","startsWith","lowerName","toLowerCase","some","ext","endsWith","isImageFile","filterImages","getSoftware","sour","tree","name","DATE_QUALIFIERS","formatDate","hasDay","undefined","hasMonth","hasYear","text","dateObject","Date","qualifier","formatOptions","formatMessage","defaultMessage","Intl","DateTimeFormat","join","formatDateOrRange","dateOrRange","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","translateTag","joinLines","lines","line","index","key","properties","getData","subentry","last","eventDetails","gedcomDate","getDate","translateDate","place","filter","note","noteDetails","nameDetails","split","getDetails","tags","detailsFunction","flatMap","element","hasData","getOtherDetails","includes","dataDetails","Details","entriesWithData","dereferenced","dereference","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","Error","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadFromUrl","handleCors","cachedData","getItem","parse","urlToFetch","status","statusText","loadGedcom","hash","GedcomLink","Link","pathname","search","queryString","Intro","values","link","process","slice","Card","as","Content","Header","Grid","Row","Column","logo","alt","maxWidth","centered","getSessionStorageItem","setSessionStorageItem","value","wikiTreeGet","request","requestData","FormData","append","apiUrl","method","credentials","responseBody","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","getChildren","getSpouses","items","fetchedResults","person","Name","concat","clientLogin","authcode","getLoggedInUserName","Cookies","loadWikiTree","location","hostname","loginResult","clear","username","everyone","firstPerson","spouseKeys","Spouses","s","personId","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","families","spouses","idToName","famId","getFamilyId","getSet","add","wife","husband","converted","Set","convertPerson","spouse","familySpouses","Gender","husb","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","hideId","firstName","FirstName","LastNameAtBirth","lastName","famc","sex","BirthDate","BirthLocation","BirthDateDecade","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","death","PhotoData","dataStatus","matchedDate","decade","gedcomIndis","escapedId","replace","level","newSet","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","lunr","field","boost","spouseLastName","husbId","getHusbandLastName","normalizedName","normalizedSpouseLastName","query","getNameLine","trim","getDescriptionLine","birthDate","deathDate","WikiTreeLoginState","ScreenSize","loadFileAsText","file","evt","readAsText","isImageFileName","lower","EmbeddedMessageType","TopBar","state","loadUrlDialogOpen","wikiTreeIdDialogOpen","searchResults","wikiTreeLoginState","UNKNOWN","urlInputRef","wikiTreeIdInputRef","wikiTreeLoginFormRef","wikiTreeReturnUrlRef","searchRef","searchIndex","files","filesArray","event_value","gedcomFile","imageMap","imageFileNames","md5","history","setState","current","wikiTreeId","standalone","source","results","description","displaySearchResult","eventHandlers","setValue","initialize","buildSearchIndex","view","returnUrl","submit","wikiTreeLoginUsername","LOGGED_IN","NOT_LOGGED_IN","checkWikiTreeLoginState","initializeSearchIndex","Modal","onClose","handleClose","Icon","txt","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","Actions","Button","secondary","primary","preventDefault","inputRef","handleWikiTreeIdChange","wikitreeLogo","handleSelectWikiTreeId","wikiTreeLink","rel","example1","enterWikiTreeId","example2","Search","onSearchChange","debounce","_","handleSearch","onResultSelect","handleResultSelect","noResultsMessage","selectFirstResult","screenSize","showingChart","chartTypeItems","Dropdown","Item","changeView","allowAllRelativesChart","LARGE","Menu","onPrint","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","loadWikiTreeItem","showWikiTreeMenus","openWikiTreeIdDialog","wikiTreeIdModal","openFileItem","loadUrlItem","commonElements","loadFromUrlModal","accept","multiple","handleUpload","menus","htmlFor","openLoadUrlDialog","loginForm","display","wikiTreeLogin","tooltip","icon","fileMenus","chartMenus","wikiTreeLoginMenu","attached","inverted","color","desktopMenus","mobileMenus","ErrorMessage","Message","negative","message","ErrorPopup","Portal","onDismiss","DataSourceEnum","UploadedDataSource","loading","event_label","GedcomUrlDataSource","WikiTreeDataSource","getArguments","getParam","parsedGen","chartTypes","WIKITREE","UPLOADED","GEDCOM_URL","showSidePanel","embedded","isNaN","App","showErrorPopup","chartRef","dataSources","updateDisplay","gen","downloadPdf","downloadPng","downloadSvg","onDismissErrorPopup","renderMainArea","error","loadingMore","Loader","active","otherStateChanges","changes","PARENT_READY","postMessage","READY","GEDCOM","setError","componentDidUpdate","onMessage","dataSource","isNewData","loadData","loadMoreFromWikitree","Route","Switch","exact","path","component","Redirect","addLocaleData","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","browser","detect","ReactDOM"],"mappings":"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","file":"static/js/main.0c73a86c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/topola.060eef13.jpg\";","/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import * as React from 'react';\nimport {event, select, Selection} from 'd3-selection';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {intlShape} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Responsive} from 'semantic-ui-react';\nimport {saveAs} from 'file-saver';\nimport {zoom, ZoomBehavior, zoomTransform} from 'd3-zoom';\nimport 'd3-transition';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(size: [number, number]) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n\n  private getChartType() {\n    switch (this.props.chartType) {\n      case ChartType.Hourglass:\n        return HourglassChart;\n      case ChartType.Relatives:\n        return RelativesChart;\n      case ChartType.Fancy:\n        return FancyChart;\n      default:\n        // Fall back to hourglass chart.\n        return HourglassChart;\n    }\n  }\n\n  private getRendererType() {\n    switch (this.props.chartType) {\n      case ChartType.Fancy:\n        return CircleRenderer;\n      default:\n        // Use DetailedRenderer by default.\n        return DetailedRenderer;\n    }\n  }\n\n  private zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && this.props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: this.getChartType(),\n        renderer: this.getRendererType(),\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    } else {\n      this.chart!.setData(this.props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', () => zoomed(chartInfo.size));\n    select(parent)\n      .on('scroll', scrolled)\n      .call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        this.renderChart({initialRender: false});\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    const initialRender = this.props.chartType !== prevProps.chartType;\n    this.renderChart({initialRender});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <Responsive minWidth={768} className=\"zoom\">\n          <button className=\"zoom-in\" onClick={() => this.zoom(ZOOM_FACTOR)}>\n            +\n          </button>\n          <button\n            className=\"zoom-out\"\n            onClick={() => this.zoom(1 / ZOOM_FACTOR)}\n          >\n            −\n          </button>\n        </Responsive>\n        <svg id=\"chartSvg\">\n          <g id=\"chart\" />\n        </svg>\n      </div>\n    );\n  }\n\n  /** Return a copy of the SVG chart but without scaling and positioning. */\n  private getStrippedSvg() {\n    const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n    svg.removeAttribute('transform');\n    const parent = select('#svgContainer').node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute(\n      'width',\n      String(Number(svg.getAttribute('width')) / scale),\n    );\n    svg.setAttribute(\n      'height',\n      String(Number(svg.getAttribute('height')) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute('transform');\n\n    return svg;\n  }\n\n  private getSvgContents() {\n    return new XMLSerializer().serializeToString(this.getStrippedSvg());\n  }\n\n  private async getSvgContentsWithInlinedImages() {\n    const svg = this.getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  async downloadSvg() {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return await drawOnCanvas(await loadImage(blob));\n  }\n\n  async downloadPng() {\n    const canvas = await this.drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'topola.png');\n  }\n\n  async downloadPdf() {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import('jspdf');\n    const canvas = await this.drawOnCanvas();\n    const doc = new jspdf({\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\n      unit: 'pt',\n      format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('topola.pdf');\n  }\n}\n","import {\n  JsonFam,\n  JsonGedcomData,\n  JsonIndi,\n  gedcomEntriesToJson,\n  JsonImage,\n  JsonEvent,\n} from 'topola';\nimport {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Compares dates of the given events. */\nfunction compareDates(\n  event1: JsonEvent | undefined,\n  event2: JsonEvent | undefined,\n): number {\n  const date1 =\n    event1 && (event1.date || (event1.dateRange && event1.dateRange.from));\n  const date2 =\n    event2 && (event2.date || (event2.dateRange && event2.dateRange.from));\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nfunction isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import {Date as TopolaDate, DateRange, getDate, DateOrRange} from 'topola';\nimport {InjectedIntl} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: InjectedIntl) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: InjectedIntl) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: InjectedIntl,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: InjectedIntl): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {FormattedMessage, InjectedIntl} from 'react-intl';\nimport {GedcomData, pointerToId} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {intlShape} from 'react-intl';\nimport {translateDate} from './date_util';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'DEAT', 'BURI', 'EVEN', 'CENS'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'NOTE', 'SOUR'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['DEAT', 'Death'],\n  ['EMAIL', 'E-mail'],\n  ['EVEN', 'Event'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  return (\n    <FormattedMessage\n      id={`gedcom.${tag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(tag) || tag}\n    />\n  );\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nfunction getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\nfunction eventDetails(entry: GedcomEntry, intl: InjectedIntl) {\n  const lines = [];\n  if (entry.data && entry.data.length > 1) {\n    lines.push(<i>{entry.data}</i>);\n  }\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, intl));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(...getData(place));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return joinLines(\n    getData(entry).map((line, index) => <i key={index}>{line}</i>),\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nfunction dereference(entry: GedcomEntry, gedcom: GedcomData) {\n  if (entry.data) {\n    const dereferenced = gedcom.other[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\nexport class Details extends React.Component<Props, {}> {\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n    const entriesWithData = entries\n      .map((entry) => dereference(entry, this.props.gedcom))\n      .filter(hasData);\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.context.intl as InjectedIntl),\n        )}\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\n","import {convertGedcom, TopolaData} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    indi && data.indis.some((i) => i.id === indi) ? indi : data.indis[0].id;\n  return {id, generation: generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  const urlToFetch = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new Error('Error loading data. Please upload your file again.');\n  }\n  return prepareData(gedcom, hash, images);\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image, Responsive} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString.slice(0, 16);\n}\n\n/** The intro page. */\nexport function Intro() {\n  const contents = (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.examples\"\n          defaultMessage={\n            'Here are some examples from the web that you can view:'\n          }\n        />\n      </p>\n      <ul>\n        <li>\n          <GedcomLink\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n            text=\"Karol Wojtyła\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n            GENPOL\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n            text=\"Harry Potter\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://famousfamilytrees.blogspot.com/\">\n            Famous Family Trees\n          </a>\n          )\n        </li>\n      </ul>\n      <p>\n        <b>\n          <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n        </b>\n        {': '}\n        <FormattedMessage\n          id=\"intro.privacy_note\"\n          defaultMessage={\n            'When using the \"load from file\" option, this site does not' +\n            ' send your data anywhere and files loaded from disk do not' +\n            ' leave your computer. When using \"load from URL\", data is' +\n            ' passed through the {link} service to deal with an issue with' +\n            ' cross-site file loading in the browser (CORS).'\n          }\n          values={{\n            link: (\n              <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n            ),\n          }}\n        />\n      </p>\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Responsive as={Card.Content} minWidth={768}>\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Responsive>\n        <Card.Content>\n          <Responsive as={Grid} minWidth={768}>\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>{contents}</Grid.Column>\n            </Grid.Row>\n          </Responsive>\n          <Responsive maxWidth={767}>\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            {contents}\n          </Responsive>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import Cookies from 'js-cookie';\nimport {Date, JsonFam, JsonIndi, DateOrRange} from 'topola';\nimport {GedcomData, TopolaData, normalizeGedcom} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {InjectedIntl} from 'react-intl';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/**\n * Cookie where the logged in user name is stored. This cookie is shared\n * between apps hosted on apps.wikitree.com.\n */\nconst USER_NAME_COOKIE = 'wikidb_wtb_UserName';\n\n/** WikiTree API getAncestors request. */\ninterface GetAncestorsRequest {\n  action: 'getAncestors';\n  key: string;\n  fields: string;\n}\n\n/** WikiTree API getRelatives request. */\ninterface GetRelativesRequest {\n  action: 'getRelatives';\n  keys: string;\n  getChildren?: true;\n  getSpouses?: true;\n}\n\n/** WikiTree API clientLogin request. */\ninterface ClientLoginRequest {\n  action: 'clientLogin';\n  authcode: string;\n}\n\n/** WikiTree API clientLogin response. */\ninterface ClientLoginResponse {\n  result: string;\n  username: string;\n}\n\ntype WikiTreeRequest =\n  | GetAncestorsRequest\n  | GetRelativesRequest\n  | ClientLoginRequest;\n\n/** Person structure returned from WikiTree API. */\ninterface Person {\n  Id: number;\n  Name: string;\n  FirstName: string;\n  LastNameAtBirth: string;\n  Spouses: {[key: number]: Person};\n  Children: {[key: number]: Person};\n  Mother: number;\n  Father: number;\n  Gender: string;\n  BirthDate: string;\n  DeathDate: string;\n  BirthLocation: string;\n  DeathLocation: string;\n  BirthDateDecade: string;\n  DeathDateDecade: string;\n  marriage_location: string;\n  marriage_date: string;\n  DataStatus?: {\n    BirthDate: string;\n    DeathDate: string;\n  };\n  PhotoData?: {\n    path: string;\n    url: string;\n  };\n}\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\n  const requestData = new FormData();\n  requestData.append('format', 'json');\n  for (const key in request) {\n    requestData.append(key, request[key]);\n  }\n  const apiUrl = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/https://api.wikitree.com/api.php'\n    : 'https://api.wikitree.com/api.php';\n  const response = await window.fetch(apiUrl, {\n    method: 'POST',\n    body: requestData,\n    credentials: handleCors ? undefined : 'include',\n  });\n  const responseBody = await response.text();\n  return JSON.parse(responseBody);\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getAncestors',\n      key: key,\n      fields: '*',\n    },\n    handleCors,\n  );\n  const result = response[0].ancestors as Person[];\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getRelatives',\n      keys: keysToFetch.join(','),\n      getChildren: true,\n      getSpouses: true,\n    },\n    handleCors,\n  );\n  if (response[0].items === null) {\n    throw new Error(`WikiTree profile ${keysToFetch[0]} not found.`);\n  }\n  const fetchedResults = response[0].items.map(\n    (x: {person: Person}) => x.person,\n  ) as Person[];\n  fetchedResults.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(fetchedResults);\n}\n\nexport async function clientLogin(\n  authcode: string,\n): Promise<ClientLoginResponse> {\n  const response = await wikiTreeGet(\n    {\n      action: 'clientLogin',\n      authcode,\n    },\n    false,\n  );\n  return response.clientLogin;\n}\n\n/**\n * Returnes the logged in user name or undefined if not logged in.\n *\n * This is not an authoritative answer. The result of this function relies on\n * the cookies set on the apps.wikitree.com domain under which this application\n * is hosted. The authoritative source of login information is in cookies set on\n * the api.wikitree.com domain.\n */\nexport function getLoggedInUserName(): string | undefined {\n  return Cookies.get(USER_NAME_COOKIE);\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  intl: InjectedIntl,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n      Cookies.set(USER_NAME_COOKIE, loginResult.username);\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    throw new Error(\n      `WikiTree profile ${key} is not accessible. Try logging in.`,\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses).map((s) => s.Name);\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n  everyone.push(...ancestorDetails);\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n  everyone.push(...privateAncestors);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person, intl);\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(indis);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: InjectedIntl): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      person.DataStatus && person.DataStatus.BirthDate,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      person.DataStatus && person.DataStatus.DeathDate,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [{url: `https://www.wikitree.com${person.PhotoData.url}`}];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(indis: JsonIndi[]): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  indis.forEach((indi) => {\n    // WikiTree URLs replace spaces with underscores.\n    const escapedId = indi.id.replace(/ /g, '_');\n    gedcomIndis[indi.id] = {\n      level: 0,\n      pointer: `@${indi.id}@`,\n      tag: 'INDI',\n      data: '',\n      tree: [\n        {\n          level: 1,\n          pointer: '',\n          tag: 'NAME',\n          data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n          tree: [],\n        },\n      ],\n    };\n    if (!indi.id.startsWith('~')) {\n      gedcomIndis[indi.id].tree.push({\n        level: 1,\n        pointer: '',\n        tag: 'WWW',\n        data: `https://www.wikitree.com/wiki/${escapedId}`,\n        tree: [],\n      });\n    }\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: {},\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n","import naturalSort from 'javascript-natural-sort';\nimport lunr from 'lunr';\nimport {idToIndiMap, idToFamMap} from './gedcom_util';\nimport {JsonIndi, JsonFam, JsonGedcomData} from 'topola';\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function() {\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import * as React from 'react';\nimport {InjectedIntl} from 'react-intl';\nimport {SearchResult} from './search_index';\nimport {formatDateOrRange} from './date_util';\nimport {JsonIndi} from 'topola';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\nfunction getDescriptionLine(indi: JsonIndi, intl: InjectedIntl) {\n  const birthDate = formatDateOrRange(indi.birth, intl);\n  const deathDate = formatDateOrRange(indi.death, intl);\n  if (!deathDate) {\n    return birthDate;\n  }\n  return `${birthDate} – ${deathDate}`;\n}\n\n/** Produces an object that is displayed in the Semantic UI Search results. */\nexport function displaySearchResult(result: SearchResult, intl: InjectedIntl) {\n  return {\n    id: result.id,\n    key: result.id,\n    title: getNameLine(result),\n    description: getDescriptionLine(result.indi, intl),\n  };\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport debounce from 'debounce';\nimport md5 from 'md5';\nimport {analyticsEvent} from './analytics';\nimport {buildSearchIndex, SearchIndex} from './search_index';\nimport {displaySearchResult} from './search_util';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {getLoggedInUserName} from './wikitree';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n  Dropdown,\n  Search,\n  SearchProps,\n  SearchResultProps,\n  Responsive,\n} from 'semantic-ui-react';\nimport wikitreeLogo from './wikitree.png';\n\nenum WikiTreeLoginState {\n  UNKNOWN,\n  NOT_LOGGED_IN,\n  LOGGED_IN,\n}\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  wikiTreeIdDialogOpen: boolean;\n  url?: string;\n  wikiTreeId?: string;\n  wikiTreeLoginState: WikiTreeLoginState;\n  wikiTreeLoginUsername?: string;\n  searchResults: SearchResultProps[];\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show additional WikiTree menus. */\n  showWikiTreeMenus: boolean;\n}\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    loadUrlDialogOpen: false,\n    wikiTreeIdDialogOpen: false,\n    searchResults: [],\n    wikiTreeLoginState: WikiTreeLoginState.UNKNOWN,\n  };\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  urlInputRef: React.RefObject<Input> = React.createRef();\n  wikiTreeIdInputRef: React.RefObject<Input> = React.createRef();\n  wikiTreeLoginFormRef: React.RefObject<HTMLFormElement> = React.createRef();\n  wikiTreeReturnUrlRef: React.RefObject<HTMLInputElement> = React.createRef();\n  searchRef?: {setValue(value: string): void};\n  searchIndex?: SearchIndex;\n\n  /** Handles the \"Upload file\" button. */\n  private async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(this.props.location.search);\n    const historyPush =\n      search.file === hash\n        ? this.props.history.replace\n        : this.props.history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  private openLoadUrlDialog() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.urlInputRef.current!.focus(),\n    );\n  }\n\n  private openWikiTreeIdDialog() {\n    this.setState(\n      Object.assign({}, this.state, {wikiTreeIdDialogOpen: true}),\n      () => this.wikiTreeIdInputRef.current!.focus(),\n    );\n  }\n\n  /** Cancels any of the open dialogs. */\n  private handleClose() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n        wikiTreeIdDialogOpen: false,\n      }),\n    );\n  }\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  private handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      analyticsEvent('url_selected');\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\n  private handleSelectWikiTreeId() {\n    this.setState(\n      Object.assign({}, this.state, {\n        wikiTreeIdDialogOpen: false,\n      }),\n    );\n    if (this.state.wikiTreeId) {\n      analyticsEvent('wikitree_id_selected');\n      const search = queryString.parse(this.props.location.search);\n      const standalone =\n        search.standalone !== undefined ? search.standalone : true;\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({\n          indi: this.state.wikiTreeId,\n          source: 'wikitree',\n          standalone,\n        }),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  private handleUrlChange(value: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: value,\n      }),\n    );\n  }\n\n  /** Called when the URL input is typed into. */\n  private handleWikiTreeIdChange(value: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        wikiTreeId: value,\n      }),\n    );\n  }\n\n  /** On search input change. */\n  private handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = this.searchIndex!.search(input).map((result) =>\n      displaySearchResult(result, this.context.intl),\n    );\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\n  }\n\n  /** On search result selected. */\n  private handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    this.props.eventHandlers.onSelection({id, generation: 0});\n    this.searchRef!.setValue('');\n  }\n\n  private initializeSearchIndex() {\n    if (this.props.data) {\n      this.searchIndex = buildSearchIndex(this.props.data);\n    }\n  }\n\n  changeView(view: string) {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      this.props.history.push(location);\n    }\n  }\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  private wikiTreeLogin() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // Append '&' because the login page appends '?authcode=...' to this URL.\n    // TODO: remove ?authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}&`;\n    this.wikiTreeReturnUrlRef.current!.value = returnUrl;\n    this.wikiTreeLoginFormRef.current!.submit();\n  }\n\n  private checkWikiTreeLoginState() {\n    const wikiTreeLoginUsername = getLoggedInUserName();\n    const wikiTreeLoginState = wikiTreeLoginUsername\n      ? WikiTreeLoginState.LOGGED_IN\n      : WikiTreeLoginState.NOT_LOGGED_IN;\n    if (this.state.wikiTreeLoginState !== wikiTreeLoginState) {\n      this.setState(\n        Object.assign({}, this.state, {\n          wikiTreeLoginState,\n          wikiTreeLoginUsername,\n        }),\n      );\n    }\n  }\n\n  async componentDidMount() {\n    this.checkWikiTreeLoginState();\n    this.initializeSearchIndex();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.checkWikiTreeLoginState();\n    if (prevProps.data !== this.props.data) {\n      this.initializeSearchIndex();\n    }\n  }\n\n  private loadFromUrlModal() {\n    return (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e, data) => this.handleUrlChange(data.value)}\n              ref={this.urlInputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  private enterWikiTreeId(event: React.MouseEvent, id: string) {\n    event.preventDefault(); // Do not follow link in href.\n    ((this.wikiTreeIdInputRef.current as unknown) as {\n      inputRef: HTMLInputElement;\n    }).inputRef.value = id;\n    this.handleWikiTreeIdChange(id);\n    this.wikiTreeIdInputRef.current!.focus();\n  }\n\n  private wikiTreeIdModal() {\n    return (\n      <Modal\n        open={this.state.wikiTreeIdDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <img\n            src={wikitreeLogo}\n            alt=\"WikiTree logo\"\n            style={{width: '32px', height: '32px'}}\n          />\n          <FormattedMessage\n            id=\"select_wikitree_id.title\"\n            defaultMessage=\"Select WikiTree ID\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleSelectWikiTreeId()}>\n            <p>\n              <FormattedMessage\n                id=\"select_wikitree_id.comment\"\n                defaultMessage={\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\n                }\n                values={{\n                  wikiTreeLink: (\n                    <a\n                      href=\"https://wikitree.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      WikiTree\n                    </a>\n                  ),\n                  example1: (\n                    <span\n                      onClick={(e) => this.enterWikiTreeId(e, 'Wojtyla-13')}\n                      className=\"link-span\"\n                    >\n                      Wojtyla-13\n                    </span>\n                  ),\n                  example2: (\n                    <span\n                      onClick={(e) => this.enterWikiTreeId(e, 'Skłodowska-2')}\n                      className=\"link-span\"\n                    >\n                      Skłodowska-2\n                    </span>\n                  ),\n                }}\n              />\n            </p>\n            <Input\n              fluid\n              onChange={(e, data) => this.handleWikiTreeIdChange(data.value)}\n              ref={this.wikiTreeIdInputRef}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"select_wikitree_id.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleSelectWikiTreeId()}>\n            <FormattedMessage\n              id=\"select_wikitree_id.load\"\n              defaultMessage=\"Load\"\n            />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  private search() {\n    return (\n      <Search\n        onSearchChange={debounce(\n          (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\n            this.handleSearch(data.value),\n          200,\n        )}\n        onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\n        results={this.state.searchResults}\n        noResultsMessage={this.context.intl.formatMessage({\n          id: 'menu.search.no_results',\n          defaultMessage: 'No results found',\n        })}\n        placeholder={this.context.intl.formatMessage({\n          id: 'menu.search.placeholder',\n          defaultMessage: 'Search for people',\n        })}\n        selectFirstResult={true}\n        ref={(ref) =>\n          (this.searchRef = (ref as unknown) as {\n            setValue(value: string): void;\n          })\n        }\n        id=\"search\"\n      />\n    );\n  }\n\n  private chartMenus(screenSize: ScreenSize) {\n    if (!this.props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => this.changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {this.props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => this.changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => this.changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPdf()}\n                >\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPng()}\n                >\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadSvg()}\n                >\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            {this.search()}\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPdf()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Downlod PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPng()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadSvg()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  private title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  private fileMenus(screenSize: ScreenSize) {\n    const loadWikiTreeItem = (\n      <>\n        <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n        <FormattedMessage\n          id=\"menu.select_wikitree_id\"\n          defaultMessage=\"Select WikiTree ID\"\n        />\n      </>\n    );\n\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\n    if (!this.props.standalone && this.props.showWikiTreeMenus) {\n      switch (screenSize) {\n        case ScreenSize.LARGE:\n          return (\n            <>\n              <Menu.Item onClick={() => this.openWikiTreeIdDialog()}>\n                {loadWikiTreeItem}\n              </Menu.Item>\n              {this.wikiTreeIdModal()}\n            </>\n          );\n        case ScreenSize.SMALL:\n          return (\n            <>\n              <Dropdown.Item onClick={() => this.openWikiTreeIdDialog()}>\n                {loadWikiTreeItem}\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              {this.wikiTreeIdModal()}\n            </>\n          );\n      }\n    }\n\n    // Don't show \"open\" menus in non-standalone mode.\n    if (!this.props.standalone) {\n      return null;\n    }\n\n    const openFileItem = (\n      <>\n        <Icon name=\"folder open\" />\n        <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n      </>\n    );\n    const loadUrlItem = (\n      <>\n        <Icon name=\"cloud download\" />\n        <FormattedMessage\n          id=\"menu.load_from_url\"\n          defaultMessage=\"Load from URL\"\n        />\n      </>\n    );\n    const commonElements = (\n      <>\n        {this.loadFromUrlModal()}\n        {this.wikiTreeIdModal()}\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged,image/*\"\n          id=\"fileInput\"\n          multiple\n          onChange={(e) => this.handleUpload(e)}\n        />\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        // Show dropdown if chart is shown, otherwise show individual menu\n        // items.\n        const menus = this.props.showingChart ? (\n          <Dropdown\n            trigger={\n              <div>\n                <Icon name=\"folder open\" />\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\n              </div>\n            }\n            className=\"item\"\n          >\n            <Dropdown.Menu>\n              <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n                {openFileItem}\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => this.openLoadUrlDialog()}>\n                {loadUrlItem}\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => this.openWikiTreeIdDialog()}>\n                {loadWikiTreeItem}\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <>\n            <label htmlFor=\"fileInput\">\n              <Menu.Item as=\"a\">{openFileItem}</Menu.Item>\n            </label>\n            <Menu.Item onClick={() => this.openLoadUrlDialog()}>\n              {loadUrlItem}\n            </Menu.Item>\n            <Menu.Item onClick={() => this.openWikiTreeIdDialog()}>\n              {loadWikiTreeItem}\n            </Menu.Item>\n          </>\n        );\n        return (\n          <>\n            {menus}\n            {commonElements}\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n              {openFileItem}\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.openLoadUrlDialog()}>\n              {loadUrlItem}\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.openWikiTreeIdDialog()}>\n              {loadWikiTreeItem}\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            {commonElements}\n          </>\n        );\n    }\n  }\n\n  private wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!this.props.showWikiTreeMenus) {\n      return null;\n    }\n    switch (this.state.wikiTreeLoginState) {\n      case WikiTreeLoginState.NOT_LOGGED_IN:\n        const loginForm = (\n          <form\n            action=\"https://api.wikitree.com/api.php\"\n            method=\"POST\"\n            style={{display: 'hidden'}}\n            ref={this.wikiTreeLoginFormRef}\n          >\n            <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\n            <input\n              type=\"hidden\"\n              name=\"returnURL\"\n              ref={this.wikiTreeReturnUrlRef}\n            />\n          </form>\n        );\n        switch (screenSize) {\n          case ScreenSize.LARGE:\n            return (\n              <Menu.Item onClick={() => this.wikiTreeLogin()}>\n                <img\n                  src={wikitreeLogo}\n                  alt=\"WikiTree logo\"\n                  className=\"menu-icon\"\n                />\n                <FormattedMessage\n                  id=\"menu.wikitree_login\"\n                  defaultMessage=\"Log in to WikiTree\"\n                />\n                {loginForm}\n              </Menu.Item>\n            );\n\n          case ScreenSize.SMALL:\n            return (\n              <>\n                <Dropdown.Item onClick={() => this.wikiTreeLogin()}>\n                  <img\n                    src={wikitreeLogo}\n                    alt=\"WikiTree logo\"\n                    className=\"menu-icon\"\n                  />\n                  <FormattedMessage\n                    id=\"menu.wikitree_login\"\n                    defaultMessage=\"Log in to WikiTree\"\n                  />\n                  {loginForm}\n                </Dropdown.Item>\n                <Dropdown.Divider />\n              </>\n            );\n        }\n        break;\n\n      case WikiTreeLoginState.LOGGED_IN:\n        const tooltip = this.state.wikiTreeLoginUsername\n          ? this.context.intl.formatMessage(\n              {\n                id: 'menu.wikitree_popup_username',\n                defaultMessage: 'Logged in to WikiTree as {username}',\n              },\n              {username: this.state.wikiTreeLoginUsername},\n            )\n          : this.context.intl.formatMessage({\n              id: 'menu.wikitree_popup',\n              defaultMessage: 'Logged in to WikiTree',\n            });\n        switch (screenSize) {\n          case ScreenSize.LARGE:\n            return (\n              <Menu.Item title={tooltip}>\n                <img\n                  src={wikitreeLogo}\n                  alt=\"WikiTree logo\"\n                  className=\"menu-icon\"\n                />\n                <FormattedMessage\n                  id=\"menu.wikitree_logged_in\"\n                  defaultMessage=\"Logged in\"\n                />\n              </Menu.Item>\n            );\n\n          case ScreenSize.SMALL:\n            return (\n              <>\n                <Menu.Item title={tooltip}>\n                  <img\n                    src={wikitreeLogo}\n                    alt=\"WikiTree logo\"\n                    className=\"menu-icon\"\n                  />\n                  <FormattedMessage\n                    id=\"menu.wikitree_logged_in\"\n                    defaultMessage=\"Logged in\"\n                  />\n                </Menu.Item>\n                <Dropdown.Divider />\n              </>\n            );\n\n          default:\n            return null;\n        }\n    }\n  }\n\n  private mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {this.fileMenus(ScreenSize.SMALL)}\n            {this.chartMenus(ScreenSize.SMALL)}\n            {this.wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"Source on GitHub\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {this.props.standalone ? (\n          <Link to=\"/\">{this.title()}</Link>\n        ) : (\n          this.title()\n        )}\n      </>\n    );\n  }\n\n  private desktopMenus() {\n    return (\n      <>\n        {this.props.standalone ? <Link to=\"/\">{this.title()}</Link> : null}\n        {this.fileMenus(ScreenSize.LARGE)}\n        {this.chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {this.wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Responsive\n          as={Menu}\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n          minWidth={768}\n        >\n          {this.desktopMenus()}\n        </Responsive>\n        <Responsive\n          as={Menu}\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n          maxWidth={767}\n        >\n          {this.mobileMenus()}\n        </Responsive>\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from './analytics';\nimport {Chart, ChartType} from './chart';\nimport {Details} from './details';\nimport {FormattedMessage, InjectedIntl} from 'react-intl';\nimport {getSelection, loadFromUrl, loadGedcom} from './load_data';\nimport {getSoftware, TopolaData} from './gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {intlShape} from 'react-intl';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Responsive} from 'semantic-ui-react';\nimport {loadWikiTree, PRIVATE_ID_PREFIX} from './wikitree';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './top_bar';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\n/** Interface encapsulating functions specific for a data source. */\ninterface DataSource {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(args: Arguments, state: State): boolean;\n  /** Loads data from the data source. */\n  loadData(args: Arguments): Promise<TopolaData>;\n}\n\n/** Files opened from the local computer. */\nclass UploadedDataSource implements DataSource {\n  isNewData(args: Arguments, state: State): boolean {\n    return (\n      args.hash !== state.hash ||\n      !!(args.gedcom && !state.loading && !state.data)\n    );\n  }\n\n  async loadData(args: Arguments): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(args.hash!, args.gedcom, args.images);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (args.images && args.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nclass GedcomUrlDataSource implements DataSource {\n  isNewData(args: Arguments, state: State): boolean {\n    return args.url !== state.url;\n  }\n\n  async loadData(args: Arguments): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(args.url!, args.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n\n/** Loading data from the WikiTree API. */\nclass WikiTreeDataSource implements DataSource {\n  constructor(private intl: InjectedIntl) {}\n\n  isNewData(args: Arguments, state: State): boolean {\n    if (state.selection && state.selection.id === args.indi) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      state.data &&\n      state.data.chartData.indis.some((indi) => indi.id === args.indi)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(args: Arguments): Promise<TopolaData> {\n    try {\n      const data = await loadWikiTree(args.indi!, this.intl, args.authcode);\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n\n/** Supported data sources. */\nenum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n}\n\n/** Arguments passed to the application, primarily through URL parameters. */\ninterface Arguments {\n  showSidePanel: boolean;\n  embedded: boolean;\n  url?: string;\n  indi?: string;\n  generation?: number;\n  hash?: string;\n  handleCors: boolean;\n  standalone: boolean;\n  source?: DataSourceEnum;\n  authcode?: string;\n  chartType: ChartType;\n  gedcom?: string;\n  images?: Map<string, string>;\n  freezeAnimation?: boolean;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const parsedGen = Number(getParam('gen'));\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n  const hash = getParam('file');\n  const url = getParam('url');\n  const source =\n    getParam('source') === 'wikitree'\n      ? DataSourceEnum.WIKITREE\n      : hash\n      ? DataSourceEnum.UPLOADED\n      : url\n      ? DataSourceEnum.GEDCOM_URL\n      : undefined;\n  return {\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    embedded: getParam('embedded') === 'true', // False by default.\n    url,\n    indi: getParam('indi'),\n    generation: !isNaN(parsedGen) ? parsedGen : undefined,\n    hash,\n    handleCors: getParam('handleCors') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false', // True by default.\n    source,\n    authcode: getParam('?authcode'),\n    freezeAnimation: getParam('freeze') === 'true', // False by default\n\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    gedcom: location.state && location.state.data,\n    images: location.state && location.state.images,\n  };\n}\n\n/** Returs true if the changes object has values that are different than those in state. */\nfunction hasUpdatedValues<T>(state: T, changes: Partial<T> | undefined) {\n  if (!changes) {\n    return false;\n  }\n  return Object.entries(changes).some(\n    ([key, value]) => value !== undefined && state[key] !== value,\n  );\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if data is currently being loaded. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  url?: string;\n  /** Whether the side panel is shown. */\n  showSidePanel?: boolean;\n  /** Whether the app is in embedded mode, i.e. embedded in an iframe. */\n  embedded: boolean;\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  standalone: boolean;\n  /** Type of displayed chart. */\n  chartType: ChartType;\n  /** Whether to show the error popup. */\n  showErrorPopup: boolean;\n  /** Source of the data. */\n  source?: DataSourceEnum;\n  loadingMore?: boolean;\n  /** Freeze animations after initial chart render. */\n  freezeAnimation?: boolean;\n}\n\nexport class App extends React.Component<RouteComponentProps, {}> {\n  state: State = {\n    loading: false,\n    embedded: false,\n    standalone: true,\n    chartType: ChartType.Hourglass,\n    showErrorPopup: false,\n  };\n  chartRef: Chart | null = null;\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  /** Mapping from data source identifier to data source handler functions. */\n  private readonly dataSources = new Map([\n    [DataSourceEnum.UPLOADED, new UploadedDataSource()],\n    [DataSourceEnum.GEDCOM_URL, new GedcomUrlDataSource()],\n    [DataSourceEnum.WIKITREE, new WikiTreeDataSource(this.context.intl)],\n  ]);\n\n  /** Sets the state with a new individual selection and chart type. */\n  private updateDisplay(\n    selection: IndiInfo,\n    otherStateChanges?: Partial<State>,\n  ) {\n    if (\n      !this.state.selection ||\n      this.state.selection.id !== selection.id ||\n      this.state.selection!.generation !== selection.generation ||\n      hasUpdatedValues(this.state, otherStateChanges)\n    ) {\n      this.setState(\n        Object.assign({}, this.state, {selection}, otherStateChanges),\n      );\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  private setError(error: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        error: error,\n        loading: false,\n      }),\n    );\n  }\n\n  private async onMessage(message: EmbeddedMessage) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            selection: getSelection(data.chartData),\n            error: undefined,\n            loading: false,\n          }),\n        );\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        this.setError(error.message);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  async componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      return;\n    }\n\n    const args = getArguments(this.props.location);\n\n    if (args.embedded && !this.state.embedded) {\n      this.setState(\n        Object.assign({}, this.state, {\n          embedded: true,\n          standalone: false,\n          showSidePanel: args.showSidePanel,\n        }),\n      );\n      // Notify the parent window that we are ready.\n      window.parent.postMessage('ready', '*');\n      window.addEventListener('message', (data) => this.onMessage(data.data));\n    }\n    if (args.embedded) {\n      // If the app is embedded, do not run the normal loading code.\n      return;\n    }\n\n    const dataSource = this.dataSources.get(args.source!);\n\n    if (!dataSource) {\n      this.props.history.replace({pathname: '/'});\n    } else if (\n      (!this.state.loading && !this.state.data && !this.state.error) ||\n      args.source !== this.state.source ||\n      dataSource.isNewData(args, this.state)\n    ) {\n      // Set loading state.\n      this.setState(\n        Object.assign({}, this.state, {\n          data: undefined,\n          selection: {id: args.indi},\n          hash: args.hash,\n          error: undefined,\n          loading: true,\n          url: args.url,\n          standalone: args.standalone,\n          chartType: args.chartType,\n          source: args.source,\n        }),\n      );\n      try {\n        const data = await dataSource.loadData(args);\n\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            hash: args.hash,\n            selection: getSelection(data.chartData, args.indi, args.generation),\n            error: undefined,\n            loading: false,\n            url: args.url,\n            showSidePanel: args.showSidePanel,\n            standalone: args.standalone,\n            chartType: args.chartType,\n            source: args.source,\n            freezeAnimation: args.freezeAnimation,\n          }),\n        );\n      } catch (error) {\n        this.setError(error.message);\n      }\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data.chartData,\n        args.indi,\n        args.generation,\n      );\n      const loadMoreFromWikitree =\n        args.source === DataSourceEnum.WIKITREE &&\n        (!this.state.selection || this.state.selection.id !== selection.id);\n      this.updateDisplay(selection, {\n        chartType: args.chartType,\n        loadingMore: loadMoreFromWikitree || undefined,\n      });\n      if (loadMoreFromWikitree) {\n        try {\n          const data = await loadWikiTree(args.indi!, this.context.intl);\n          const selection = getSelection(\n            data.chartData,\n            args.indi,\n            args.generation,\n          );\n          this.setState(\n            Object.assign({}, this.state, {\n              data,\n              hash: args.hash,\n              selection,\n              error: undefined,\n              loading: false,\n              url: args.url,\n              showSidePanel: args.showSidePanel,\n              standalone: args.standalone,\n              chartType: args.chartType,\n              source: args.source,\n              loadingMore: false,\n            }),\n          );\n        } catch (error) {\n          this.showErrorPopup(\n            this.context.intl.formatMessage(\n              {\n                id: 'error.failed_wikitree_load_more',\n                defaultMessage: 'Failed to load data from WikiTree. {error}',\n              },\n              {error},\n            ),\n            {\n              loadingMore: false,\n            },\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    // Don't allow selecting WikiTree private profiles.\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n      return;\n    }\n    analyticsEvent('selection_changed');\n    if (this.state.embedded) {\n      // In embedded mode the URL doesn't change.\n      this.updateDisplay(selection);\n      return;\n    }\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private onPrint = () => {\n    analyticsEvent('print');\n    this.chartRef && this.chartRef.print();\n  };\n\n  private showErrorPopup(message: string, otherStateChanges?: Partial<State>) {\n    this.setState(\n      Object.assign(\n        {},\n        this.state,\n        {\n          showErrorPopup: true,\n          error: message,\n        },\n        otherStateChanges,\n      ),\n    );\n  }\n\n  private onDownloadPdf = async () => {\n    analyticsEvent('download_pdf');\n    try {\n      this.chartRef && (await this.chartRef.downloadPdf());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadPng = async () => {\n    analyticsEvent('download_png');\n    try {\n      this.chartRef && (await this.chartRef.downloadPng());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadSvg = () => {\n    analyticsEvent('download_svg');\n    this.chartRef && this.chartRef.downloadSvg();\n  };\n\n  onDismissErrorPopup = () => {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: false,\n      }),\n    );\n  };\n\n  private renderMainArea = () => {\n    if (this.state.data && this.state.selection) {\n      return (\n        <div id=\"content\">\n          <ErrorPopup\n            open={this.state.showErrorPopup}\n            message={this.state.error}\n            onDismiss={this.onDismissErrorPopup}\n          />\n          {this.state.loadingMore ? (\n            <Loader active size=\"small\" className=\"loading-more\" />\n          ) : null}\n          <Chart\n            data={this.state.data.chartData}\n            selection={this.state.selection}\n            chartType={this.state.chartType}\n            onSelection={this.onSelection}\n            freezeAnimation={this.state.freezeAnimation}\n            ref={(ref) => (this.chartRef = ref)}\n          />\n          {this.state.showSidePanel ? (\n            <Responsive minWidth={768} id=\"sidePanel\">\n              <Details\n                gedcom={this.state.data.gedcom}\n                indi={this.state.selection.id}\n              />\n            </Responsive>\n          ) : null}\n        </div>\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              data={this.state.data && this.state.data.chartData}\n              allowAllRelativesChart={\n                this.state.source !== DataSourceEnum.WIKITREE\n              }\n              showingChart={\n                !!(\n                  this.props.history.location.pathname === '/view' &&\n                  this.state.data &&\n                  this.state.selection\n                )\n              }\n              standalone={this.state.standalone}\n              eventHandlers={{\n                onSelection: this.onSelection,\n                onPrint: this.onPrint,\n                onDownloadPdf: this.onDownloadPdf,\n                onDownloadPng: this.onDownloadPng,\n                onDownloadSvg: this.onDownloadSvg,\n              }}\n              showWikiTreeMenus={this.state.source === DataSourceEnum.WIKITREE}\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/wikitree.1dee3d66.png\";"],"sourceRoot":""}