{"version":3,"sources":["analytics.ts","chart.tsx","date_util.ts","details.tsx","gedcom_util.ts","load_data.ts","intro.tsx","search_index.ts","search_util.tsx","top_bar.tsx","app.tsx","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","zoomed","parent","d3","node","parentElement","scrollLeft","transform","x","scrollTop","y","scrolled","clientWidth","clientHeight","call","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","_callee6","image","href","response","dataUrl","regenerator_default","a","wrap","_context6","prev","next","baseVal","abrupt","fetch","sent","t0","console","warn","stop","inlineImages","_callee7","svg","images","_context7","Array","from","getElementsByTagName","all","map","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","chart","inherits","createClass","key","value","_this2","undefined","initialRender","innerHTML","createChart","json","props","chartType","HourglassChart","renderer","DetailedRenderer","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","chartInfo","render","startIndi","selection","id","baseGeneration","generation","on","scaleExtent","translateExtent","size","dx","origin","dy","offsetX","offsetY","svgTransition","transition","delay","duration","attr","tween","i","t","renderChart","prevProps","react","getElementById","cloneNode","removeAttribute","XMLSerializer","serializeToString","_getSvgContentsWithInlinedImages","asyncToGenerator","mark","_callee","_context","_this3","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","_downloadSvg","_callee2","contents","_context2","getSvgContentsWithInlinedImages","Blob","saveAs","_drawOnCanvas2","_callee3","_context3","t1","_downloadPng","_callee4","_context4","_downloadPdf","_callee5","doc","_context5","jsPDF","orientation","unit","format","addImage","save","React","contextTypes","intlShape","DATE_QUALIFIERS","Map","formatDate","date","hasDay","day","hasMonth","month","hasYear","year","text","dateObject","Date","qualifier","toLowerCase","formatOptions","formatMessage","defaultMessage","get","Intl","DateTimeFormat","join","translateDate","gedcomDate","dateOrRange","getDate","dateRange","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","translateTag","tag","index_es","joinLines","lines","line","Linkify_default","properties","getData","entry","tree","forEach","subentry","last","push","noteDetails","nameDetails","className","split","filter","name","getDetails","entries","tags","detailsFunction","flatMap","element","getOtherDetails","includes","toConsumableArray","note","dataDetails","Details","_React$Component","gedcom","indis","indi","find","place","eventDetails","pointerToId","pointer","substring","prepareGedcom","head","fams","sortChildren","comparator","idToIndiMap","indiId1","indiId2","b","idComparison","indi1","indi2","birth1","birth","birth2","date1","date2","birthDatesComparator","newFams","fam","children","newChildren","sort","assign","sortFamilyChildren","filterImages","newIndis","imageUrl","fileName","match","has","newIndi","startsWith","filterImage","getSoftware","sour","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","Error","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadFromUrl","_x","_x2","_loadFromUrl","url","handleCors","cachedData","urlToFetch","getItem","parse","status","statusText","loadGedcom","_x3","_x4","_x5","_loadGedcom","hash","GedcomLink","Link","pathname","search","queryString","Intro","Card","Content","Header","values","link","compare","score","naturalSort","ref","LunrSearchIndex","index","lunr","field","add","normalizedName","input","toLocaleLowerCase","normalize","replace","query","s","slice","getNameLine","nameTag","eventEntry","dateEntry","getDescriptionLine","birthDate","deathDate","loadFileAsText","file","evt","readAsText","isImageFileName","lower","endsWith","TopBar","state","loadUrlDialogOpen","searchResults","inputRef","searchRef","searchIndex","_handleUpload","event","files","filesArray","gedcomFile","imageMap","imageFileNames","event_value","md5","history","setState","results","title","description","displaySearchResult","setValue","initializeSearchIndex","_this4","loadFromUrlModal","Modal","onClose","handleClose","centered","Icon","txt","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","Actions","Button","secondary","onClick","primary","chartMenus","showingChart","Menu","Item","as","onPrint","Dropdown","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","Search","onSearchChange","debounce","_","handleSearch","onResultSelect","handleResultSelect","noResultsMessage","selectFirstResult","attached","inverted","color","handleLoadFromUrl","accept","multiple","handleUpload","htmlFor","ErrorMessage","Message","negative","message","App","loading","chartRef","location","gen","String","renderMainArea","chart_Chart","showSidePanel","Responsive","minWidth","details_Details","error","Loader","active","componentDidUpdate","_componentDidUpdate","getParam","parsedGen","software","Number","isNaN","isNewData","event_label","Route","top_bar_TopBar","downloadPdf","downloadPng","downloadSvg","Switch","exact","path","component","Redirect","addLocaleData","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","browser","detect","ReactDOM","querySelector","HashRouter"],"mappings":"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","file":"static/js/main.030b7a07.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import * as d3 from 'd3';\nimport * as React from 'react';\nimport jsPDF from 'jspdf';\nimport {intlShape} from 'react-intl';\nimport {saveAs} from 'file-saver';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n} from 'topola';\n\n/** Called when the view is dragged with the mouse. */\nfunction zoomed() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement!;\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  d3.select(parent).call(d3.zoom().translateTo, x, y);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: HourglassChart,\n        renderer: DetailedRenderer,\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chart');\n    const parent = (svg.node() as HTMLElement).parentElement as Element;\n\n    d3.select(parent)\n      .on('scroll', scrolled)\n      .call(\n        d3\n          .zoom()\n          .scaleExtent([1, 1])\n          .translateExtent([[0, 0], chartInfo.size])\n          .on('zoom', zoomed),\n      );\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0];\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1];\n    const offsetX = d3.max([0, (parent.clientWidth - chartInfo.size[0]) / 2]);\n    const offsetY = d3.max([0, (parent.clientHeight - chartInfo.size[1]) / 2]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0])\n      .attr('height', chartInfo.size[1]);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    this.renderChart({initialRender: this.props.data !== prevProps.data});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <svg id=\"chart\" />\n      </div>\n    );\n  }\n\n  private getSvgContents() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  private async getSvgContentsWithInlinedImages() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  async downloadSvg() {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return await drawOnCanvas(await loadImage(blob));\n  }\n\n  async downloadPng() {\n    const canvas = await this.drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'topola.png');\n  }\n\n  async downloadPdf() {\n    const canvas = await this.drawOnCanvas();\n    const doc = new jsPDF({\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\n      unit: 'pt',\n      format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('topola.pdf');\n  }\n}\n","import {Date as TopolaDate, DateRange, getDate} from 'topola';\nimport {InjectedIntl} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: InjectedIntl) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: InjectedIntl) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: InjectedIntl) {\n  const dateOrRange = getDate(gedcomDate);\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {FormattedMessage, InjectedIntl} from 'react-intl';\nimport {GedcomData} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {intlShape} from 'react-intl';\nimport {translateDate} from './date_util';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'DEAT', 'BURI'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'SOUR', 'NOTE'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CHR', 'Christening'],\n  ['DEAT', 'Death'],\n  ['EMAIL', 'E-mail'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  return (\n    <FormattedMessage\n      id={`gedcom.${tag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(tag) || tag}\n    />\n  );\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line) => (\n        <>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </>\n      ))}\n    </>\n  );\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nfunction getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\nfunction eventDetails(entry: GedcomEntry, intl: InjectedIntl) {\n  const lines = [];\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, intl));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(...getData(place));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return joinLines(getData(entry).map((line) => <i>{line}</i>));\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name) => (\n          <>\n            {name}\n            <br />\n          </>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element) => <div className=\"ui segment\">{element}</div>);\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element) => <div className=\"ui segment\">{element}</div>);\n}\n\nexport class Details extends React.Component<Props, {}> {\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.context.intl as InjectedIntl),\n        )}\n        {getOtherDetails(entries)}\n        {getDetails(entries, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\n","import {JsonFam, JsonGedcomData, JsonIndi, gedcomEntriesToJson} from 'topola';\nimport {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\n\nexport interface GedcomData {\n  head: GedcomEntry;\n  indis: {[key: string]: GedcomEntry};\n  fams: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nfunction pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const idToIndiMap = new Map<string, JsonIndi>();\n  gedcom.indis.forEach((indi) => {\n    idToIndiMap[indi.id] = indi;\n  });\n\n  return (indiId1: string, indiId2: string) => {\n    const idComparison = strcmp(indiId1, indiId2);\n    const indi1: JsonIndi = idToIndiMap[indiId1];\n    const indi2: JsonIndi = idToIndiMap[indiId2];\n    const birth1 = indi1 && indi1.birth;\n    const birth2 = indi2 && indi2.birth;\n    const date1 =\n      birth1 && (birth1.date || (birth1.dateRange && birth1.dateRange.from));\n    const date2 =\n      birth2 && (birth2.date || (birth2.dateRange && birth2.dateRange.from));\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n      return idComparison;\n    }\n    if (date1.year !== date2.year) {\n      return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n      return idComparison;\n    }\n    if (date1.month !== date2.month) {\n      return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n      return date1.month - date2.month;\n    }\n    return idComparison;\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (indi.imageUrl) {\n    const fileName = indi.imageUrl.match(/[^/\\\\]*$/)![0];\n    if (images.has(fileName)) {\n      const newIndi = Object.assign({}, indi);\n      newIndi.imageUrl = images.get(fileName);\n      return newIndi;\n    }\n  }\n  if (!indi.imageUrl || indi.imageUrl.startsWith('http')) {\n    return indi;\n  }\n  const newIndi = Object.assign({}, indi);\n  delete newIndi.imageUrl;\n  return newIndi;\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(sortChildren(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import {convertGedcom, TopolaData} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  return {\n    id: indi || data.indis[0].id,\n    generation: generation || 0,\n  };\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  const cachedData = sessionStorage.getItem(url);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const urlToFetch = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  const cachedData = sessionStorage.getItem(hash);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  if (!gedcom) {\n    throw new Error('Error loading data. Please upload your file again.');\n  }\n  return prepareData(gedcom, hash, images);\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Card} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <Card className=\"intro\">\n      <Card.Content>\n        <Card.Header>\n          <FormattedMessage\n            id=\"intro.title\"\n            defaultMessage=\"Topola Genealogy Viewer\"\n          />\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <p>\n          <FormattedMessage\n            id=\"intro.description\"\n            defaultMessage={\n              'Topola Genealogy is a genealogy tree viewer that lets you' +\n              ' browse the structure of the family.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.instructions\"\n            defaultMessage={\n              'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n              ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n              ' existing genealogy programs and web sites.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.examples\"\n            defaultMessage={\n              'Here are some examples from the web that you can view:'\n            }\n          />\n        </p>\n        <ul>\n          <li>\n            <GedcomLink\n              url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n              text=\"Karol Wojtyła\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n              GENPOL\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n              text=\"Shakespeare\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n              webtreeprint.com\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n              text=\"Harry Potter\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://famousfamilytrees.blogspot.com/\">\n              Famous Family Trees\n            </a>\n            )\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n          </b>\n          :\n          <FormattedMessage\n            id=\"intro.privacy_note\"\n            defaultMessage={\n              'When using the \"load from file\" option, this site does not' +\n              ' send your data anywhere and files loaded from disk do not' +\n              ' leave your computer. When using \"load from URL\", data is' +\n              ' passed through the {link} service to deal with an issue with' +\n              ' cross-site file loading in the browser (CORS).'\n            }\n            values={{\n              link: (\n                <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n              ),\n            }}\n          />\n        </p>\n      </Card.Content>\n    </Card>\n  );\n}\n","import naturalSort from 'javascript-natural-sort';\nimport lunr from 'lunr';\nimport {GedcomData} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: GedcomEntry;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return a.score - b.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index;\n\n  public constructor(private gedcom: GedcomData) {\n    this.index = lunr(function() {\n      this.ref('id');\n      this.field('id');\n      this.field('name');\n      this.field('normalizedName');\n\n      for (let id in gedcom.indis) {\n        const name = gedcom.indis[id].tree\n          .filter((entry) => entry.tag === 'NAME')\n          .map((entry) => entry.data)\n          .join(' ');\n        this.add({id, name, normalizedName: normalize(name)});\n      }\n    });\n  }\n\n  public search(input: string) {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.gedcom.indis[result.ref]}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(gedcom: GedcomData): SearchIndex {\n  return new LunrSearchIndex(gedcom);\n}\n","import * as React from 'react';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {InjectedIntl} from 'react-intl';\nimport {SearchResult} from './search_index';\nimport {translateDate} from './date_util';\n\nfunction getNameLine(result: SearchResult) {\n  const nameTag = result.indi.tree.find((entry) => entry.tag === 'NAME');\n  const name =\n    nameTag &&\n    nameTag.data\n      .split('/')\n      .filter((s) => !!s)\n      .join(' ');\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\nfunction getDate(indi: GedcomEntry, tag: string, intl: InjectedIntl) {\n  const eventEntry = indi.tree.find((entry) => entry.tag === tag);\n  const dateEntry =\n    eventEntry && eventEntry.tree.find((entry) => entry.tag === 'DATE');\n  return (dateEntry && translateDate(dateEntry.data, intl)) || '';\n}\n\nfunction getDescriptionLine(indi: GedcomEntry, intl: InjectedIntl) {\n  const birthDate = getDate(indi, 'BIRT', intl);\n  const deathDate = getDate(indi, 'DEAT', intl);\n  if (!deathDate) {\n    return birthDate;\n  }\n  return `${birthDate} – ${deathDate}`;\n}\n\n/** Produces an object that is displayed in the Semantic UI Search results. */\nexport function displaySearchResult(result: SearchResult, intl: InjectedIntl) {\n  return {\n    id: result.id,\n    title: getNameLine(result),\n    description: getDescriptionLine(result.indi, intl),\n  };\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport debounce from 'debounce';\nimport md5 from 'md5';\nimport {analyticsEvent} from './analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {displaySearchResult} from './search_util';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {GedcomData} from './gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n  Dropdown,\n  Search,\n  SearchProps,\n} from 'semantic-ui-react';\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n  searchResults: SearchResult[];\n}\n\ninterface Props {\n  showingChart: boolean;\n  gedcom?: GedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    loadUrlDialogOpen: false,\n    searchResults: [],\n  };\n  inputRef?: Input;\n  searchRef?: {setValue(value: string): void};\n  searchIndex?: SearchIndex;\n\n  /** Handles the \"Upload file\" button. */\n  async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      files.length === 1\n        ? files[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          files[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n    this.props.history.push({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  handleLoadFromUrl() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.inputRef!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      analyticsEvent('url_selected');\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  /** On search input change. */\n  handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = this.searchIndex!.search(input).map((result) =>\n      displaySearchResult(result, this.context.intl),\n    );\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\n  }\n\n  /** On search result selected. */\n  handleResultSelect(id: string) {\n    this.props.onSelection({id, generation: 0});\n    this.searchRef!.setValue('');\n  }\n\n  initializeSearchIndex() {\n    if (this.props.gedcom) {\n      this.searchIndex = buildSearchIndex(this.props.gedcom);\n    }\n  }\n\n  componentDidMount() {\n    this.initializeSearchIndex();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.gedcom !== this.props.gedcom) {\n      this.initializeSearchIndex();\n    }\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const loadFromUrlModal = (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={(ref) => (this.inputRef = ref!)}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n\n    const chartMenus = this.props.showingChart ? (\n      <>\n        <Menu.Item as=\"a\" onClick={() => this.props.onPrint()}>\n          <Icon name=\"print\" />\n          <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n        </Menu.Item>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"download\" />\n              <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => this.props.onDownloadPdf()}>\n              <FormattedMessage id=\"menu.pdf_file\" defaultMessage=\"PDF file\" />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.props.onDownloadPng()}>\n              <FormattedMessage id=\"menu.png_file\" defaultMessage=\"PNG file\" />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.props.onDownloadSvg()}>\n              <FormattedMessage id=\"menu.svg_file\" defaultMessage=\"SVG file\" />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <Search\n          onSearchChange={debounce(\n            (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\n              this.handleSearch(data.value),\n            200,\n          )}\n          onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\n          results={this.state.searchResults}\n          noResultsMessage={this.context.intl.formatMessage({\n            id: 'menu.search.no_results',\n            defaultMessage: 'No results found',\n          })}\n          placeholder={this.context.intl.formatMessage({\n            id: 'menu.search.placeholder',\n            defaultMessage: 'Search for people',\n          })}\n          selectFirstResult={true}\n          ref={(ref) =>\n            (this.searchRef = (ref as unknown) as {\n              setValue(value: string): void;\n            })\n          }\n        />\n      </>\n    ) : null;\n\n    return (\n      <Menu attached=\"top\" inverted color=\"blue\" size=\"large\">\n        <Link to=\"/\">\n          <Menu.Item>\n            <b>Topola Genealogy</b>\n          </Menu.Item>\n        </Link>\n        <Menu.Item as=\"a\" onClick={() => this.handleLoadFromUrl()}>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Menu.Item>\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged,image/*\"\n          id=\"fileInput\"\n          multiple\n          onChange={(e) => this.handleUpload(e)}\n        />\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">\n            <Icon name=\"folder open\" />\n            <FormattedMessage\n              id=\"menu.load_from_file\"\n              defaultMessage=\"Load from file\"\n            />\n          </Menu.Item>\n        </label>\n        {chartMenus}\n        <Menu.Item\n          as=\"a\"\n          href=\"https://github.com/PeWu/topola-viewer\"\n          position=\"right\"\n          target=\"_blank\"\n        >\n          <FormattedMessage\n            id=\"menu.github\"\n            defaultMessage=\"Source on GitHub\"\n          />\n        </Menu.Item>\n        {loadFromUrlModal}\n      </Menu>\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from './analytics';\nimport {Chart} from './chart';\nimport {Details} from './details';\nimport {getSelection, loadFromUrl, loadGedcom} from './load_data';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Responsive} from 'semantic-ui-react';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './top_bar';\nimport {TopolaData, getSoftware} from './gedcom_util';\n\n/** Shows an error message. */\nexport function ErrorMessage(props: {message: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>Failed to load file</Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if currently loading. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  url?: string;\n  /** Whether the side panel is shoen. */\n  showSidePanel?: boolean;\n}\n\nexport class App extends React.Component<RouteComponentProps, {}> {\n  state: State = {loading: false};\n  chartRef: Chart | null = null;\n\n  private isNewData(\n    hash: string | undefined,\n    url: string | undefined,\n  ): boolean {\n    return (\n      !!(hash && hash !== this.state.hash) || !!(url && this.state.url !== url)\n    );\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  async componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      return;\n    }\n    const gedcom = this.props.location.state && this.props.location.state.data;\n    const images =\n      this.props.location.state && this.props.location.state.images;\n    const search = queryString.parse(this.props.location.search);\n    const getParam = (name: string) => {\n      const value = search[name];\n      return typeof value === 'string' ? value : undefined;\n    };\n    const url = getParam('url');\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const generation = !isNaN(parsedGen) ? parsedGen : undefined;\n    const hash = getParam('file');\n    const handleCors = getParam('handleCors') !== 'false'; // True by default.\n    const showSidePanel = getParam('sidePanel') !== 'false'; // True by default.\n\n    if (!url && !hash) {\n      this.props.history.replace({pathname: '/'});\n    } else if (this.isNewData(hash, url)) {\n      try {\n        // Set loading state.\n        this.setState(\n          Object.assign({}, this.state, {\n            data: undefined,\n            selection: undefined,\n            hash,\n            error: undefined,\n            loading: true,\n            url,\n          }),\n        );\n        const data = hash\n          ? await loadGedcom(hash, gedcom, images)\n          : await loadFromUrl(url!, handleCors);\n\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent(hash ? 'upload_file_loaded' : 'url_file_loaded', {\n          event_label: software,\n          event_value: (images && images.size) || 0,\n        });\n\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            hash,\n            selection: getSelection(data.chartData, indi, generation),\n            error: undefined,\n            loading: false,\n            url,\n            showSidePanel,\n          }),\n        );\n      } catch (error) {\n        analyticsEvent(hash ? 'upload_file_error' : 'url_file_error');\n        // Set error state.\n        this.setState(\n          Object.assign({}, this.state, {\n            error: error.message,\n            loading: false,\n          }),\n        );\n      }\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data.chartData,\n        indi,\n        generation,\n      );\n      if (\n        this.state.selection.id !== selection.id ||\n        this.state.selection.generation !== selection.generation\n      ) {\n        this.setState(\n          Object.assign({}, this.state, {\n            selection,\n          }),\n        );\n      }\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    analyticsEvent('selection_changed');\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private renderMainArea = () => {\n    if (this.state.data && this.state.selection) {\n      return (\n        <div id=\"content\">\n          <Chart\n            data={this.state.data.chartData}\n            onSelection={this.onSelection}\n            selection={this.state.selection}\n            ref={(ref) => (this.chartRef = ref)}\n          />\n          {this.state.showSidePanel ? (\n            <Responsive minWidth={768} id=\"sidePanel\">\n              <Details\n                gedcom={this.state.data.gedcom}\n                indi={this.state.selection.id}\n              />\n            </Responsive>\n          ) : null}\n        </div>\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              gedcom={this.state.data && this.state.data.gedcom}\n              showingChart={\n                !!(\n                  this.props.history.location.pathname === '/view' &&\n                  this.state.data &&\n                  this.state.selection\n                )\n              }\n              onSelection={this.onSelection}\n              onPrint={() => {\n                analyticsEvent('print');\n                this.chartRef && this.chartRef.print();\n              }}\n              onDownloadPdf={() => {\n                analyticsEvent('download_pdf');\n                this.chartRef && this.chartRef.downloadPdf();\n              }}\n              onDownloadPng={() => {\n                analyticsEvent('download_png');\n                this.chartRef && this.chartRef.downloadPng();\n              }}\n              onDownloadSvg={() => {\n                analyticsEvent('download_svg');\n                this.chartRef && this.chartRef.downloadSvg();\n              }}\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}