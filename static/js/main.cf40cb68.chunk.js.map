{"version":3,"sources":["chart.tsx","details.tsx","gedcom_util.ts","load_data.ts","intro.tsx","top_bar.tsx","app.tsx","index.tsx"],"names":["zoomed","parent","d3","node","parentElement","scrollLeft","transform","x","scrollTop","y","scrolled","clientWidth","clientHeight","call","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","loadImage","image","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","chart","inherits","createClass","key","value","_this2","undefined","initialRender","innerHTML","createChart","json","props","data","chartType","HourglassChart","renderer","DetailedRenderer","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","chartInfo","render","startIndi","selection","id","baseGeneration","generation","svg","on","scaleExtent","translateExtent","size","dx","origin","dy","offsetX","offsetY","svgTransition","transition","delay","duration","attr","tween","i","t","renderChart","prevProps","react","getElementById","cloneNode","removeAttribute","XMLSerializer","serializeToString","promises","from","getElementsByTagName","map","href","baseVal","fetch","then","response","dataUrl","catch","console","warn","all","inlineImages","_this3","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","getSvgContentsWithInlinedImages","contents","Blob","type","saveAs","toBlob","canvasToBlob","doc","jsPDF","orientation","unit","format","addImage","save","React","contextTypes","intlShape","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","Map","translateTag","tag","index_es","defaultMessage","get","joinLines","lines","line","Linkify_default","a","properties","eventDetails","entry","date","tree","find","subentry","push","gedcomDate","dateOrRange","getDate","formatDate","translateDate","place","filter","forEach","note","className","noteDetails","nameDetails","split","name","getDetails","entries","tags","detailsFunction","flatMap","element","getOtherDetails","includes","dataDetails","Details","_React$Component","gedcom","indis","indi","pointerToId","pointer","substring","prepareGedcom","head","fams","sortFamilyChildren","fam","children","newChildren","sort","idToIndiMap","indiId1","indiId2","b","idComparison","indi1","indi2","birth1","birth","birth2","date1","dateRange","date2","year","month","day","birthDatesComparator","assign","sortChildren","newFams","filterImage","imageUrl","startsWith","newIndi","filterImages","newIndis","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","Error","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadGedcom","hash","cachedData","getItem","parse","loadGedcomSync","GedcomLink","Link","to","pathname","search","queryString","url","text","Intro","Card","Content","Header","values","link","TopBar","state","loadUrlDialogOpen","inputRef","event","files","evt","md5","history","file","readAsText","setState","_this4","loadFromUrlModal","Modal","onClose","handleClose","centered","Icon","txt","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","ref","Actions","Button","secondary","onClick","primary","chartMenus","showingChart","Menu","Item","as","onPrint","Dropdown","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","attached","inverted","color","handleLoadFromUrl","accept","handleUpload","htmlFor","ErrorMessage","Message","negative","message","App","loading","chartRef","location","gen","String","renderMainArea","chart_Chart","showSidePanel","Responsive","minWidth","details_Details","error","Loader","active","componentDidUpdate","getParam","parsedGen","Number","isNaN","handleCors","isNewData","urlToFetch","window","status","statusText","loadFromUrl","replace","Route","top_bar_TopBar","downloadPdf","downloadPng","downloadSvg","Switch","exact","path","component","Redirect","addLocaleData","toConsumableArray","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","browser","detect","ReactDOM","querySelector","HashRouter"],"mappings":"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","file":"static/js/main.cf40cb68.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport * as React from 'react';\nimport jsPDF from 'jspdf';\nimport {intlShape} from 'react-intl';\nimport {saveAs} from 'file-saver';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n} from 'topola';\n\n/** Called when the view is dragged with the mouse. */\nfunction zoomed() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement!;\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  d3.select(parent).call(d3.zoom().translateTo, x, y);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nfunction inlineImages(svg: Element): Promise<void[]> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  const promises = images.map((image) => {\n    const href = image.href && image.href.baseVal;\n    if (!href) {\n      return Promise.resolve();\n    }\n    return fetch(href)\n      .then((response) => response.blob())\n      .then(loadAsDataUrl)\n      .then((dataUrl) => {\n        image.href.baseVal = dataUrl;\n      })\n      // Log and ignore errors.\n      .catch((e) => console.warn('Failed to load image:', e));\n  });\n  return Promise.all(promises);\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => {\n      resolve(image);\n    });\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: HourglassChart,\n        renderer: DetailedRenderer,\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chart');\n    const parent = (svg.node() as HTMLElement).parentElement as Element;\n\n    d3.select(parent)\n      .on('scroll', scrolled)\n      .call(\n        d3\n          .zoom()\n          .scaleExtent([1, 1])\n          .translateExtent([[0, 0], chartInfo.size])\n          .on('zoom', zoomed),\n      );\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0];\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1];\n    const offsetX = d3.max([0, (parent.clientWidth - chartInfo.size[0]) / 2]);\n    const offsetY = d3.max([0, (parent.clientHeight - chartInfo.size[1]) / 2]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0])\n      .attr('height', chartInfo.size[1]);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    this.renderChart({initialRender: this.props.data !== prevProps.data});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <svg id=\"chart\" />\n      </div>\n    );\n  }\n\n  private getSvgContents() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  private getSvgContentsWithInlinedImages() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    return inlineImages(svg).then(() =>\n      new XMLSerializer().serializeToString(svg),\n    );\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  downloadSvg() {\n    this.getSvgContentsWithInlinedImages().then((contents) => {\n      const blob = new Blob([contents], {type: 'image/svg+xml'});\n      saveAs(blob, 'topola.svg');\n    });\n  }\n\n  drawOnCanvas(): Promise<HTMLCanvasElement> {\n    return this.getSvgContentsWithInlinedImages()\n      .then((contents) => new Blob([contents], {type: 'image/svg+xml'}))\n      .then(loadImage)\n      .then(drawOnCanvas);\n  }\n\n  downloadPng() {\n    this.drawOnCanvas()\n      .then((canvas) => canvasToBlob(canvas, 'image/png'))\n      .then((blob) => saveAs(blob, 'topola.png'));\n  }\n\n  downloadPdf() {\n    this.drawOnCanvas().then((canvas) => {\n      const doc = new jsPDF({\n        orientation: canvas.width > canvas.height ? 'l' : 'p',\n        unit: 'pt',\n        format: [canvas.width, canvas.height],\n      });\n      doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n      doc.save('topola.pdf');\n    });\n  }\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {formatDate, getDate} from 'topola';\nimport {FormattedMessage} from 'react-intl';\nimport {GedcomData} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {intlShape} from 'react-intl';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'DEAT', 'BURI'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'SOUR', 'NOTE'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CHR', 'Christening'],\n  ['DEAT', 'Death'],\n  ['EMAIL', 'E-mail'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  return (\n    <FormattedMessage\n      id={`gedcom.${tag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(tag) || tag}\n    />\n  );\n}\n\nfunction translateDate(gedcomDate: string, locale: string) {\n  const dateOrRange = getDate(gedcomDate);\n  const date = dateOrRange && dateOrRange.date;\n  if (!date) {\n    return gedcomDate;\n  }\n  return formatDate(date, locale);\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line) => (\n        <>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </>\n      ))}\n    </>\n  );\n}\n\nfunction eventDetails(entry: GedcomEntry, locale: string) {\n  const lines = [];\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, locale));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(place.data);\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) => {\n      lines.push(<i>{note.data}</i>);\n    });\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(entry.data);\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) => {\n      lines.push(<i>{note.data}</i>);\n    });\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(entry.data);\n  }\n  if (!lines.length) {\n    return null;\n  }\n  return <i>{joinLines(lines)}</i>;\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name) => (\n          <>\n            {name}\n            <br />\n          </>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element) => <div className=\"ui segment\">{element}</div>);\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element) => <div className=\"ui segment\">{element}</div>);\n}\n\nexport class Details extends React.Component<Props, {}> {\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.context.intl.locale),\n        )}\n        {getOtherDetails(entries)}\n        {getDetails(entries, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\n","import {JsonFam, JsonGedcomData, JsonIndi, gedcomEntriesToJson} from 'topola';\nimport {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\n\nexport interface GedcomData {\n  head: GedcomEntry;\n  indis: {[key: string]: GedcomEntry};\n  fams: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nfunction pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const idToIndiMap = new Map<string, JsonIndi>();\n  gedcom.indis.forEach((indi) => {\n    idToIndiMap[indi.id] = indi;\n  });\n\n  return (indiId1: string, indiId2: string) => {\n    const idComparison = strcmp(indiId1, indiId2);\n    const indi1: JsonIndi = idToIndiMap[indiId1];\n    const indi2: JsonIndi = idToIndiMap[indiId2];\n    const birth1 = indi1 && indi1.birth;\n    const birth2 = indi2 && indi2.birth;\n    const date1 =\n      birth1 && (birth1.date || (birth1.dateRange && birth1.dateRange.from));\n    const date2 =\n      birth2 && (birth2.date || (birth2.dateRange && birth2.dateRange.from));\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n      return idComparison;\n    }\n    if (date1.year !== date2.year) {\n      return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n      return idComparison;\n    }\n    if (date1.month !== date2.month) {\n      return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n      return date1.month - date2.month;\n    }\n    return idComparison;\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(fam: JsonFam, gedcom: JsonGedcomData): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(birthDatesComparator(gedcom));\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, gedcom));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi): JsonIndi {\n  if (!indi.imageUrl || indi.imageUrl.startsWith('http')) {\n    return indi;\n  }\n  const newIndi = Object.assign({}, indi);\n  delete newIndi.imageUrl;\n  return newIndi;\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(gedcom: JsonGedcomData): JsonGedcomData {\n  const newIndis = gedcom.indis.map(filterImage);\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links.\n */\nexport function convertGedcom(gedcom: string): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(sortChildren(json)),\n    gedcom: prepareGedcom(entries),\n  };\n}\n","import {convertGedcom, TopolaData} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  return {\n    id: indi || data.indis[0].id,\n    generation: generation || 0,\n  };\n}\n\nfunction prepareData(gedcom: string, cacheId: string): TopolaData {\n  const data = convertGedcom(gedcom);\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  const cachedData = sessionStorage.getItem(url);\n  if (cachedData) {\n    return Promise.resolve(JSON.parse(cachedData));\n  }\n  const urlToFetch = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/' + url\n    : url;\n\n  return window\n    .fetch(urlToFetch)\n    .then((response) => {\n      if (response.status !== 200) {\n        return Promise.reject(new Error(response.statusText));\n      }\n      return response.text();\n    })\n    .then((gedcom) => {\n      return prepareData(gedcom, url);\n    });\n}\n\n/** Loads data from the given GEDCOM file contents. */\nfunction loadGedcomSync(hash: string, gedcom?: string) {\n  const cachedData = sessionStorage.getItem(hash);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  if (!gedcom) {\n    throw new Error('Error loading data. Please upload your file again.');\n  }\n  return prepareData(gedcom, hash);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport function loadGedcom(hash: string, gedcom?: string): Promise<TopolaData> {\n  try {\n    return Promise.resolve(loadGedcomSync(hash, gedcom));\n  } catch (e) {\n    return Promise.reject(new Error('Failed to read GEDCOM file'));\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Card} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <Card className=\"intro\">\n      <Card.Content>\n        <Card.Header>\n          <FormattedMessage\n            id=\"intro.title\"\n            defaultMessage=\"Topola Genealogy Viewer\"\n          />\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <p>\n          <FormattedMessage\n            id=\"intro.description\"\n            defaultMessage={\n              'Topola Genealogy is a genealogy tree viewer that lets you' +\n              ' browse the structure of the family.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.instructions\"\n            defaultMessage={\n              'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n              ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n              ' existing genealogy programs and web sites.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.examples\"\n            defaultMessage={\n              'Here are some examples from the web that you can view:'\n            }\n          />\n        </p>\n        <ul>\n          <li>\n            <GedcomLink\n              url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n              text=\"Karol Wojtyła\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n              GENPOL\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n              text=\"Shakespeare\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n              webtreeprint.com\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n              text=\"Harry Potter\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://famousfamilytrees.blogspot.com/\">\n              Famous Family Trees\n            </a>\n            )\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n          </b>\n          :\n          <FormattedMessage\n            id=\"intro.privacy_note\"\n            defaultMessage={\n              'When using the \"load from file\" option, this site does not' +\n              ' send your data anywhere and files loaded from disk do not' +\n              ' leave your computer. When using \"load from URL\", data is' +\n              ' passed through the {link} service to deal with an issue with' +\n              ' cross-site file loading in the browser (CORS).'\n            }\n            values={{\n              link: (\n                <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n              ),\n            }}\n          />\n        </p>\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n  Dropdown,\n} from 'semantic-ui-react';\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n}\n\ninterface Props {\n  showingChart: boolean;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {loadUrlDialogOpen: false};\n  inputRef?: Input;\n\n  /** Handles the \"Upload file\" button. */\n  handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      const data = (evt.target as FileReader).result;\n      const hash = md5(data as string);\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({file: hash}),\n        state: {data},\n      });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  handleLoadFromUrl() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.inputRef!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  render() {\n    const loadFromUrlModal = (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={(ref) => (this.inputRef = ref!)}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n\n    const chartMenus = this.props.showingChart ? (\n      <>\n        <Menu.Item as=\"a\" onClick={() => this.props.onPrint()}>\n          <Icon name=\"print\" />\n          <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n        </Menu.Item>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"download\" />\n              <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => this.props.onDownloadPdf()}>\n              <FormattedMessage id=\"menu.pdf_file\" defaultMessage=\"PDF file\" />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.props.onDownloadPng()}>\n              <FormattedMessage id=\"menu.png_file\" defaultMessage=\"PNG file\" />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.props.onDownloadSvg()}>\n              <FormattedMessage id=\"menu.svg_file\" defaultMessage=\"SVG file\" />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    ) : null;\n\n    return (\n      <Menu attached=\"top\" inverted color=\"blue\" size=\"large\">\n        <Link to=\"/\">\n          <Menu.Item>\n            <b>Topola Genealogy</b>\n          </Menu.Item>\n        </Link>\n        <Menu.Item as=\"a\" onClick={() => this.handleLoadFromUrl()}>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Menu.Item>\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged\"\n          id=\"fileInput\"\n          onChange={(e) => this.handleUpload(e)}\n        />\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">\n            <Icon name=\"folder open\" />\n            <FormattedMessage\n              id=\"menu.load_from_file\"\n              defaultMessage=\"Load from file\"\n            />\n          </Menu.Item>\n        </label>\n        {chartMenus}\n        <Menu.Item\n          as=\"a\"\n          href=\"https://github.com/PeWu/topola-viewer\"\n          position=\"right\"\n        >\n          <FormattedMessage\n            id=\"menu.github\"\n            defaultMessage=\"Source on GitHub\"\n          />\n        </Menu.Item>\n        {loadFromUrlModal}\n      </Menu>\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Chart} from './chart';\nimport {Details} from './details';\nimport {getSelection, loadFromUrl, loadGedcom} from './load_data';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Responsive} from 'semantic-ui-react';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './top_bar';\nimport {TopolaData} from './gedcom_util';\n\n/** Shows an error message. */\nexport function ErrorMessage(props: {message: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>Failed to load file</Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if currently loading. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  url?: string;\n  /** Whether the side panel is shoen. */\n  showSidePanel?: boolean;\n}\n\nexport class App extends React.Component<RouteComponentProps, {}> {\n  state: State = {loading: false};\n  chartRef: Chart | null = null;\n\n  private isNewData(\n    hash: string | undefined,\n    url: string | undefined,\n  ): boolean {\n    return (\n      !!(hash && hash !== this.state.hash) || !!(url && this.state.url !== url)\n    );\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      return;\n    }\n    const gedcom = this.props.location.state && this.props.location.state.data;\n    const search = queryString.parse(this.props.location.search);\n    const getParam = (name: string) => {\n      const value = search[name];\n      return typeof value === 'string' ? value : undefined;\n    };\n    const url = getParam('url');\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const generation = !isNaN(parsedGen) ? parsedGen : undefined;\n    const hash = getParam('file');\n    const handleCors = getParam('handleCors') !== 'false'; // True by default.\n    const showSidePanel = getParam('sidePanel') !== 'false'; // True by default.\n\n    if (!url && !hash) {\n      this.props.history.replace({pathname: '/'});\n    } else if (this.isNewData(hash, url)) {\n      const loadedData = hash\n        ? loadGedcom(hash, gedcom)\n        : loadFromUrl(url!, handleCors);\n      loadedData.then(\n        (data) => {\n          // Set state with data.\n          this.setState(\n            Object.assign({}, this.state, {\n              data,\n              hash,\n              selection: getSelection(data.chartData, indi, generation),\n              error: undefined,\n              loading: false,\n              url,\n              showSidePanel,\n            }),\n          );\n        },\n        (error) => {\n          // Set error state.\n          this.setState(\n            Object.assign({}, this.state, {\n              error: error.message,\n              loading: false,\n            }),\n          );\n        },\n      );\n      // Set loading state.\n      this.setState(\n        Object.assign({}, this.state, {\n          data: undefined,\n          selection: undefined,\n          hash,\n          error: undefined,\n          loading: true,\n          url,\n        }),\n      );\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data.chartData,\n        indi,\n        generation,\n      );\n      if (\n        this.state.selection.id !== selection.id ||\n        this.state.selection.generation !== selection.generation\n      ) {\n        this.setState(\n          Object.assign({}, this.state, {\n            selection,\n          }),\n        );\n      }\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private renderMainArea = () => {\n    if (this.state.data && this.state.selection) {\n      return (\n        <div id=\"content\">\n          <Chart\n            data={this.state.data.chartData}\n            onSelection={this.onSelection}\n            selection={this.state.selection}\n            ref={(ref) => (this.chartRef = ref)}\n          />\n          {this.state.showSidePanel ? (\n            <Responsive minWidth={768} id=\"sidePanel\">\n              <Details\n                gedcom={this.state.data.gedcom}\n                indi={this.state.selection.id}\n              />\n            </Responsive>\n          ) : null}\n        </div>\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              showingChart={\n                !!(\n                  this.props.history.location.pathname === '/view' &&\n                  this.state.data &&\n                  this.state.selection\n                )\n              }\n              onPrint={() => this.chartRef && this.chartRef.print()}\n              onDownloadPdf={() => this.chartRef && this.chartRef.downloadPdf()}\n              onDownloadPng={() => this.chartRef && this.chartRef.downloadPng()}\n              onDownloadSvg={() => this.chartRef && this.chartRef.downloadSvg()}\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}