{"version":3,"sources":["topola.jpg","analytics.ts","chart.tsx","gedcom_util.ts","date_util.ts","details.tsx","load_data.ts","intro.tsx","wikitree.ts","search_index.ts","search_util.tsx","top_bar.tsx","app.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","analyticsEvent","action","data","window","gtag","ChartType","scrolled","parent","d3","node","x","scrollLeft","clientWidth","y","scrollTop","clientHeight","scale","k","call","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","_callee6","image","href","response","dataUrl","regenerator_default","a","wrap","_context6","prev","next","baseVal","abrupt","fetch","sent","t0","console","warn","stop","inlineImages","_callee7","svg","images","_context7","Array","from","getElementsByTagName","all","map","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","chart","animating","rerenderRequired","zoomBehavior","inherits","createClass","key","value","props","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","CircleRenderer","DetailedRenderer","factor","scaleBy","_this2","undefined","initialRender","innerHTML","createChart","json","getChartType","renderer","getRendererType","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","setData","chartInfo","render","startIndi","selection","id","baseGeneration","generation","zoomOutFactor","size","extent","scaleExtent","translateExtent","on","transform","offsetX","offsetY","attr","zoomed","dx","origin","dy","svgTransition","transition","delay","duration","tween","i","t","animationPromise","then","renderChart","prevProps","_this3","react","Responsive","minWidth","className","onClick","zoom","getElementById","cloneNode","removeAttribute","setAttribute","String","Number","getAttribute","querySelector","XMLSerializer","serializeToString","getStrippedSvg","_getSvgContentsWithInlinedImages","asyncToGenerator","mark","_callee","_context","_this4","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","_downloadSvg","_callee2","contents","_context2","getSvgContentsWithInlinedImages","Blob","saveAs","_drawOnCanvas2","_callee3","_context3","t1","_downloadPng","_callee4","_context4","_downloadPdf","_callee5","doc","_context5","jsPDF","orientation","unit","format","addImage","save","React","contextTypes","intlShape","pointerToId","pointer","substring","idToIndiMap","Map","indis","forEach","indi","set","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","compareDates","event1","event2","date1","date","dateRange","date2","year","month","day","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","get","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","normalizeGedcom","IMAGE_EXTENSIONS","filterImage","newImages","fileName","url","match","has","push","title","startsWith","lowerName","toLowerCase","some","ext","endsWith","isImageFile","filterImages","getSoftware","sour","tree","name","DATE_QUALIFIERS","formatDate","hasDay","hasMonth","hasYear","text","dateObject","Date","qualifier","formatOptions","formatMessage","defaultMessage","Intl","DateTimeFormat","join","formatDateOrRange","dateOrRange","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","translateTag","index_es","joinLines","lines","line","index","Linkify_default","properties","getData","subentry","last","eventDetails","gedcomDate","getDate","translateDate","place","toConsumableArray","filter","note","noteDetails","nameDetails","split","getDetails","tags","detailsFunction","flatMap","element","hasData","getOtherDetails","includes","dataDetails","Details","_React$Component","entriesWithData","dereferenced","dereference","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","Error","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadFromUrl","_x","_x2","_loadFromUrl","handleCors","cachedData","urlToFetch","getItem","parse","status","statusText","loadGedcom","_x3","_x4","_x5","_loadGedcom","hash","GedcomLink","Link","pathname","search","queryString","Intro","values","link","process","slice","Card","as","Content","Header","Grid","Row","Column","Image_Image","logo","alt","maxWidth","centered","getSessionStorageItem","setSessionStorageItem","wikiTreeGet","request","requestData","apiUrl","responseBody","FormData","append","method","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","fetchedResults","getChildren","getSpouses","items","person","Name","clientLogin","_x7","_clientLogin","authcode","loadWikiTree","_x8","_x9","_loadWikiTree","everyone","firstPerson","spouseKeys","ancestorKeys","ancestorDetails","descendantGenerationLimit","toFetch","people","allSpouses","families","spouses","idToName","converted","location","hostname","Cookies","clear","Spouses","s","personId","flat","Children","c","Id","Mother","Father","famId","getFamilyId","getSet","add","wife","husband","Set","convertPerson","spouse","familySpouses","Gender","_ref","_ref2","slicedToArray","husb","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","FirstName","firstName","LastNameAtBirth","lastName","famc","sex","BirthDate","BirthLocation","DataStatus","DeathDate","DeathLocation","death","PhotoData","path","dataStatus","matchedDate","gedcomIndis","escapedId","replace","level","newSet","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","lunr","field","boost","spouseLastName","husbId","getHusbandLastName","normalizedName","normalizedSpouseLastName","query","getNameLine","trim","getDescriptionLine","birthDate","deathDate","WikiTreeLoginState","ScreenSize","loadFileAsText","file","evt","readAsText","isImageFileName","lower","EmbeddedMessageType","TopBar","state","loadUrlDialogOpen","searchResults","wikiTreeLoginState","UNKNOWN","urlInputRef","wikiTreeLoginFormRef","wikiTreeReturnUrlRef","searchRef","searchIndex","_handleUpload","event","files","filesArray","gedcomFile","imageMap","imageFileNames","event_value","md5","history","setState","current","results","description","displaySearchResult","eventHandlers","setValue","initialize","buildSearchIndex","view","returnUrl","submit","LOGGED_IN","NOT_LOGGED_IN","wikiTreeLoginUsername","_componentDidMount","checkWikiTreeLoginState","initializeSearchIndex","Modal","onClose","handleClose","Icon","txt","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","Actions","Button","secondary","primary","_this5","Search","onSearchChange","debounce","_","handleSearch","onResultSelect","handleResultSelect","noResultsMessage","selectFirstResult","screenSize","_this6","showingChart","chartTypeItems","Dropdown","Item","changeView","allowAllRelativesChart","LARGE","Menu","onPrint","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","_this7","standalone","loadUrlItem","loadFileItem","commonElements","loadFromUrlModal","accept","multiple","handleUpload","openLoadUrlDialog","htmlFor","_this8","showWikiTreeLogin","wikiTreeLogoUrl","loginForm","display","wikiTreeLogin","tooltip","username","icon","fileMenus","chartMenus","wikiTreeLoginMenu","attached","inverted","color","desktopMenus","mobileMenus","ErrorMessage","Message","negative","message","ErrorPopup","Portal","onDismiss","DataSourceEnum","UploadedDataSource","loading","event_label","GedcomUrlDataSource","WikiTreeDataSource","DATA_SOURCES","UPLOADED","GEDCOM_URL","WIKITREE","getArguments","getParam","parsedGen","chartTypes","source","showSidePanel","embedded","isNaN","App","showErrorPopup","chartRef","updateDisplay","gen","downloadPdf","downloadPng","downloadSvg","onDismissErrorPopup","renderMainArea","error","loadingMore","Loader","active","chart_Chart","details_Details","otherStateChanges","changes","_onMessage","PARENT_READY","postMessage","READY","GEDCOM","setError","componentDidUpdate","_componentDidUpdate","dataSource","loadMoreFromWikitree","_data","onMessage","isNewData","loadData","Route","top_bar_TopBar","Switch","exact","component","Redirect","addLocaleData","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","browser","detect","ReactDOM","HashRouter"],"mappings":"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","file":"static/js/main.db6a416c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/topola.060eef13.jpg\";","/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import * as d3 from 'd3';\nimport * as React from 'react';\nimport jsPDF from 'jspdf';\nimport {intlShape} from 'react-intl';\nimport {saveAs} from 'file-saver';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n} from 'topola';\nimport {Responsive} from 'semantic-ui-react';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(size: [number, number]) {\n  const parent = d3.select('#svgContainer').node() as Element;\n\n  const scale = d3.event.transform.k;\n  const offsetX = d3.max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = d3.max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  d3.select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  d3.select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = d3.select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = d3.zoomTransform(parent).k;\n  d3.select(parent).call(d3.zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: d3.ZoomBehavior<Element, any>;\n\n  private getChartType() {\n    switch (this.props.chartType) {\n      case ChartType.Hourglass:\n        return HourglassChart;\n      case ChartType.Relatives:\n        return RelativesChart;\n      case ChartType.Fancy:\n        return FancyChart;\n      default:\n        // Fall back to hourglass chart.\n        return HourglassChart;\n    }\n  }\n\n  private getRendererType() {\n    switch (this.props.chartType) {\n      case ChartType.Fancy:\n        return CircleRenderer;\n      default:\n        // Use DetailedRenderer by default.\n        return DetailedRenderer;\n    }\n  }\n\n  private zoom(factor: number) {\n    const parent = d3.select('#svgContainer') as d3.Selection<\n      Element,\n      any,\n      any,\n      any\n    >;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      return;\n    }\n\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: this.getChartType(),\n        renderer: this.getRendererType(),\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    } else {\n      this.chart!.setData(this.props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chartSvg');\n    const parent = d3.select('#svgContainer').node() as Element;\n\n    const scale = d3.zoomTransform(parent).k;\n    const zoomOutFactor = d3.min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [d3.max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = d3\n      .zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', () => zoomed(chartInfo.size));\n    d3.select(parent)\n      .on('scroll', scrolled)\n      .call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = d3.max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = d3.max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        this.renderChart({initialRender: false});\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    const initialRender = this.props.chartType !== prevProps.chartType;\n    this.renderChart({initialRender});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <Responsive minWidth={768} className=\"zoom\">\n          <button className=\"zoom-in\" onClick={() => this.zoom(ZOOM_FACTOR)}>\n            +\n          </button>\n          <button\n            className=\"zoom-out\"\n            onClick={() => this.zoom(1 / ZOOM_FACTOR)}\n          >\n            −\n          </button>\n        </Responsive>\n        <svg id=\"chartSvg\">\n          <g id=\"chart\" />\n        </svg>\n      </div>\n    );\n  }\n\n  /** Return a copy of the SVG chart but without scaling and positioning. */\n  private getStrippedSvg() {\n    const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n    svg.removeAttribute('transform');\n    const parent = d3.select('#svgContainer').node() as Element;\n    const scale = d3.zoomTransform(parent).k;\n    svg.setAttribute(\n      'width',\n      String(Number(svg.getAttribute('width')) / scale),\n    );\n    svg.setAttribute(\n      'height',\n      String(Number(svg.getAttribute('height')) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute('transform');\n\n    return svg;\n  }\n\n  private getSvgContents() {\n    return new XMLSerializer().serializeToString(this.getStrippedSvg());\n  }\n\n  private async getSvgContentsWithInlinedImages() {\n    const svg = this.getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  async downloadSvg() {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return await drawOnCanvas(await loadImage(blob));\n  }\n\n  async downloadPng() {\n    const canvas = await this.drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'topola.png');\n  }\n\n  async downloadPdf() {\n    const canvas = await this.drawOnCanvas();\n    const doc = new jsPDF({\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\n      unit: 'pt',\n      format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('topola.pdf');\n  }\n}\n","import {\n  JsonFam,\n  JsonGedcomData,\n  JsonIndi,\n  gedcomEntriesToJson,\n  JsonImage,\n  JsonEvent,\n} from 'topola';\nimport {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Compares dates of the given events. */\nfunction compareDates(\n  event1: JsonEvent | undefined,\n  event2: JsonEvent | undefined,\n): number {\n  const date1 =\n    event1 && (event1.date || (event1.dateRange && event1.dateRange.from));\n  const date2 =\n    event2 && (event2.date || (event2.dateRange && event2.dateRange.from));\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nfunction isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import {Date as TopolaDate, DateRange, getDate, DateOrRange} from 'topola';\nimport {InjectedIntl} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: InjectedIntl) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: InjectedIntl) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: InjectedIntl,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: InjectedIntl): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {FormattedMessage, InjectedIntl} from 'react-intl';\nimport {GedcomData, pointerToId} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {intlShape} from 'react-intl';\nimport {translateDate} from './date_util';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'DEAT', 'BURI', 'EVEN', 'CENS'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'NOTE', 'SOUR'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['DEAT', 'Death'],\n  ['EMAIL', 'E-mail'],\n  ['EVEN', 'Event'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  return (\n    <FormattedMessage\n      id={`gedcom.${tag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(tag) || tag}\n    />\n  );\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nfunction getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\nfunction eventDetails(entry: GedcomEntry, intl: InjectedIntl) {\n  const lines = [];\n  if (entry.data && entry.data.length > 1) {\n    lines.push(<i>{entry.data}</i>);\n  }\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, intl));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(...getData(place));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return joinLines(\n    getData(entry).map((line, index) => <i key={index}>{line}</i>),\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nfunction dereference(entry: GedcomEntry, gedcom: GedcomData) {\n  if (entry.data) {\n    const dereferenced = gedcom.other[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\nexport class Details extends React.Component<Props, {}> {\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n    const entriesWithData = entries\n      .map((entry) => dereference(entry, this.props.gedcom))\n      .filter(hasData);\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.context.intl as InjectedIntl),\n        )}\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\n","import {convertGedcom, TopolaData} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    indi && data.indis.some((i) => i.id === indi) ? indi : data.indis[0].id;\n  return {id, generation: generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  const urlToFetch = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new Error('Error loading data. Please upload your file again.');\n  }\n  return prepareData(gedcom, hash, images);\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image, Responsive} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString.slice(0, 16);\n}\n\n/** The intro page. */\nexport function Intro() {\n  const contents = (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.examples\"\n          defaultMessage={\n            'Here are some examples from the web that you can view:'\n          }\n        />\n      </p>\n      <ul>\n        <li>\n          <GedcomLink\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n            text=\"Karol Wojtyła\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n            GENPOL\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n            text=\"Harry Potter\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://famousfamilytrees.blogspot.com/\">\n            Famous Family Trees\n          </a>\n          )\n        </li>\n      </ul>\n      <p>\n        <b>\n          <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n        </b>\n        {': '}\n        <FormattedMessage\n          id=\"intro.privacy_note\"\n          defaultMessage={\n            'When using the \"load from file\" option, this site does not' +\n            ' send your data anywhere and files loaded from disk do not' +\n            ' leave your computer. When using \"load from URL\", data is' +\n            ' passed through the {link} service to deal with an issue with' +\n            ' cross-site file loading in the browser (CORS).'\n          }\n          values={{\n            link: (\n              <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n            ),\n          }}\n        />\n      </p>\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${\n            process.env.REACT_APP_GIT_SHA\n          }`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Responsive as={Card.Content} minWidth={768}>\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Responsive>\n        <Card.Content>\n          <Responsive as={Grid} minWidth={768}>\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>{contents}</Grid.Column>\n            </Grid.Row>\n          </Responsive>\n          <Responsive maxWidth={767}>\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            {contents}\n          </Responsive>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import Cookies from 'js-cookie';\nimport {Date, JsonFam, JsonIndi, DateOrRange} from 'topola';\nimport {GedcomData, TopolaData, normalizeGedcom} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\n\n/** WikiTree API getAncestors request. */\ninterface GetAncestorsRequest {\n  action: 'getAncestors';\n  key: string;\n  fields: string;\n}\n\n/** WikiTree API getRelatives request. */\ninterface GetRelatives {\n  action: 'getRelatives';\n  keys: string;\n  getChildren?: true;\n  getSpouses?: true;\n}\n\ninterface ClientLogin {\n  action: 'clientLogin';\n  authcode: string;\n}\n\ntype WikiTreeRequest = GetAncestorsRequest | GetRelatives | ClientLogin;\n\n/** Person structure returned from WikiTree API. */\ninterface Person {\n  Id: number;\n  Name: string;\n  FirstName: string;\n  LastNameAtBirth: string;\n  Spouses: {[key: number]: Person};\n  Children: {[key: number]: Person};\n  Mother: number;\n  Father: number;\n  Gender: string;\n  BirthDate: string;\n  DeathDate: string;\n  BirthLocation: string;\n  DeathLocation: string;\n  marriage_location: string;\n  marriage_date: string;\n  DataStatus?: {\n    BirthDate: string;\n    DeathDate: string;\n  };\n  PhotoData?: {\n    path: string;\n  };\n}\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\n  const requestData = new FormData();\n  requestData.append('format', 'json');\n  for (const key in request) {\n    requestData.append(key, request[key]);\n  }\n  const apiUrl = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/https://apps.wikitree.com/api.php'\n    : 'https://apps.wikitree.com/api.php';\n  const response = await window.fetch(apiUrl, {\n    method: 'POST',\n    body: requestData,\n  });\n  const responseBody = await response.text();\n  return JSON.parse(responseBody);\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(key: string, handleCors: boolean) {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getAncestors',\n      key: key,\n      fields: '*',\n    },\n    handleCors,\n  );\n  const result = response[0].ancestors as Person[];\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(keys: string[], handleCors: boolean) {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getRelatives',\n      keys: keysToFetch.join(','),\n      getChildren: true,\n      getSpouses: true,\n    },\n    handleCors,\n  );\n  if (response[0].items === null) {\n    throw new Error(`WikiTree profile ${keysToFetch[0]} not found.`);\n  }\n  const fetchedResults = response[0].items.map(\n    (x: {person: Person}) => x.person,\n  ) as Person[];\n  fetchedResults.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(fetchedResults);\n}\n\nexport async function clientLogin(authcode: string) {\n  const response = await wikiTreeGet(\n    {\n      action: 'clientLogin',\n      authcode,\n    },\n    false,\n  );\n  return response.clientLogin;\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !Cookies.get('wikidb_wtb_UserID') && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    throw new Error(\n      `WikiTree profile ${key} is not accessible. Try logging in.`,\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses).map((s) => s.Name);\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n  everyone.push(...ancestorDetails);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person);\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(indis);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      person.DataStatus && person.DataStatus.BirthDate,\n    );\n    indi.birth = Object.assign({}, parsedDate, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      person.DataStatus && person.DataStatus.DeathDate,\n    );\n    indi.death = Object.assign({}, parsedDate, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [{url: `https://www.wikitree.com${person.PhotoData.path}`}];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(indis: JsonIndi[]): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  indis.forEach((indi) => {\n    // WikiTree URLs replace spaces with underscores.\n    const escapedId = indi.id.replace(/ /g, '_');\n    gedcomIndis[indi.id] = {\n      level: 0,\n      pointer: `@${indi.id}@`,\n      tag: 'INDI',\n      data: '',\n      tree: [\n        {\n          level: 1,\n          pointer: '',\n          tag: 'NAME',\n          data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n          tree: [],\n        },\n        {\n          level: 1,\n          pointer: '',\n          tag: 'WWW',\n          data: `https://www.wikitree.com/wiki/${escapedId}`,\n          tree: [],\n        },\n      ],\n    };\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: {},\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n","import naturalSort from 'javascript-natural-sort';\nimport lunr from 'lunr';\nimport {idToIndiMap, idToFamMap} from './gedcom_util';\nimport {JsonIndi, JsonFam, JsonGedcomData} from 'topola';\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function() {\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import * as React from 'react';\nimport {InjectedIntl} from 'react-intl';\nimport {SearchResult} from './search_index';\nimport {formatDateOrRange} from './date_util';\nimport {JsonIndi} from 'topola';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\nfunction getDescriptionLine(indi: JsonIndi, intl: InjectedIntl) {\n  const birthDate = formatDateOrRange(indi.birth, intl);\n  const deathDate = formatDateOrRange(indi.death, intl);\n  if (!deathDate) {\n    return birthDate;\n  }\n  return `${birthDate} – ${deathDate}`;\n}\n\n/** Produces an object that is displayed in the Semantic UI Search results. */\nexport function displaySearchResult(result: SearchResult, intl: InjectedIntl) {\n  return {\n    id: result.id,\n    key: result.id,\n    title: getNameLine(result),\n    description: getDescriptionLine(result.indi, intl),\n  };\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport Cookies from 'js-cookie';\nimport debounce from 'debounce';\nimport md5 from 'md5';\nimport {analyticsEvent} from './analytics';\nimport {buildSearchIndex, SearchIndex} from './search_index';\nimport {displaySearchResult} from './search_util';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n  Dropdown,\n  Search,\n  SearchProps,\n  SearchResultProps,\n  Responsive,\n} from 'semantic-ui-react';\n\nenum WikiTreeLoginState {\n  UNKNOWN,\n  NOT_LOGGED_IN,\n  LOGGED_IN,\n}\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n  wikiTreeLoginState: WikiTreeLoginState;\n  wikiTreeLoginUsername?: string;\n  searchResults: SearchResultProps[];\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show the 'Log in to WikiTree' button. */\n  showWikiTreeLogin: boolean;\n}\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    loadUrlDialogOpen: false,\n    searchResults: [],\n    wikiTreeLoginState: WikiTreeLoginState.UNKNOWN,\n  };\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  urlInputRef: React.RefObject<Input> = React.createRef();\n  wikiTreeLoginFormRef: React.RefObject<HTMLFormElement> = React.createRef();\n  wikiTreeReturnUrlRef: React.RefObject<HTMLInputElement> = React.createRef();\n  searchRef?: {setValue(value: string): void};\n  searchIndex?: SearchIndex;\n\n  /** Handles the \"Upload file\" button. */\n  private async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(this.props.location.search);\n    const historyPush =\n      search.file === hash\n        ? this.props.history.replace\n        : this.props.history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  private openLoadUrlDialog() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.urlInputRef.current!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  private handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  private handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      analyticsEvent('url_selected');\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  private handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  /** On search input change. */\n  private handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = this.searchIndex!.search(input).map((result) =>\n      displaySearchResult(result, this.context.intl),\n    );\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\n  }\n\n  /** On search result selected. */\n  private handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    this.props.eventHandlers.onSelection({id, generation: 0});\n    this.searchRef!.setValue('');\n  }\n\n  private initializeSearchIndex() {\n    if (this.props.data) {\n      this.searchIndex = buildSearchIndex(this.props.data);\n    }\n  }\n\n  changeView(view: string) {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      this.props.history.push(location);\n    }\n  }\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  private wikiTreeLogin() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // Append '&' because the login page appends '?authcode=...' to this URL.\n    // TODO: remove ?authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}&`;\n    this.wikiTreeReturnUrlRef.current!.value = returnUrl;\n    this.wikiTreeLoginFormRef.current!.submit();\n  }\n\n  private checkWikiTreeLoginState() {\n    const wikiTreeLoginState =\n      Cookies.get('wikidb_wtb_UserID') !== undefined\n        ? WikiTreeLoginState.LOGGED_IN\n        : WikiTreeLoginState.NOT_LOGGED_IN;\n    if (this.state.wikiTreeLoginState !== wikiTreeLoginState) {\n      const wikiTreeLoginUsername = Cookies.get('wikidb_wtb_UserName');\n      this.setState(\n        Object.assign({}, this.state, {\n          wikiTreeLoginState,\n          wikiTreeLoginUsername,\n        }),\n      );\n    }\n  }\n\n  async componentDidMount() {\n    this.checkWikiTreeLoginState();\n    this.initializeSearchIndex();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.checkWikiTreeLoginState();\n    if (prevProps.data !== this.props.data) {\n      this.initializeSearchIndex();\n    }\n  }\n\n  private loadFromUrlModal() {\n    return (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={this.urlInputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  private search() {\n    return (\n      <Search\n        onSearchChange={debounce(\n          (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\n            this.handleSearch(data.value),\n          200,\n        )}\n        onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\n        results={this.state.searchResults}\n        noResultsMessage={this.context.intl.formatMessage({\n          id: 'menu.search.no_results',\n          defaultMessage: 'No results found',\n        })}\n        placeholder={this.context.intl.formatMessage({\n          id: 'menu.search.placeholder',\n          defaultMessage: 'Search for people',\n        })}\n        selectFirstResult={true}\n        ref={(ref) =>\n          (this.searchRef = (ref as unknown) as {\n            setValue(value: string): void;\n          })\n        }\n        id=\"search\"\n      />\n    );\n  }\n\n  private chartMenus(screenSize: ScreenSize) {\n    if (!this.props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => this.changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {this.props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => this.changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => this.changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPdf()}\n                >\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadPng()}\n                >\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.props.eventHandlers.onDownloadSvg()}\n                >\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            {this.search()}\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={() => this.props.eventHandlers.onPrint()}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPdf()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Downlod PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPng()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadSvg()}\n            >\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  private title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  private fileMenus(screenSize: ScreenSize) {\n    if (!this.props.standalone) {\n      return null;\n    }\n    const loadUrlItem = (\n      <>\n        <Icon name=\"cloud download\" />\n        <FormattedMessage\n          id=\"menu.load_from_url\"\n          defaultMessage=\"Load from URL\"\n        />\n      </>\n    );\n    const loadFileItem = (\n      <>\n        <Icon name=\"folder open\" />\n        <FormattedMessage\n          id=\"menu.load_from_file\"\n          defaultMessage=\"Load from file\"\n        />\n      </>\n    );\n    const commonElements = (\n      <>\n        {this.loadFromUrlModal()}\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged,image/*\"\n          id=\"fileInput\"\n          multiple\n          onChange={(e) => this.handleUpload(e)}\n        />\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={() => this.openLoadUrlDialog()}>\n              {loadUrlItem}\n            </Menu.Item>\n            <label htmlFor=\"fileInput\">\n              <Menu.Item as=\"a\">{loadFileItem}</Menu.Item>\n            </label>\n            {commonElements}\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={() => this.openLoadUrlDialog()}>\n              {loadUrlItem}\n            </Dropdown.Item>\n            <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n              {loadFileItem}\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            {commonElements}\n          </>\n        );\n    }\n  }\n\n  private wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!this.props.showWikiTreeLogin) {\n      return null;\n    }\n    const wikiTreeLogoUrl =\n      'https://www.wikitree.com/photo.php/a/a5/WikiTree_Images.png';\n\n    switch (this.state.wikiTreeLoginState) {\n      case WikiTreeLoginState.NOT_LOGGED_IN:\n        const loginForm = (\n          <form\n            action=\"https://apps.wikitree.com/api.php\"\n            method=\"POST\"\n            style={{display: 'hidden'}}\n            ref={this.wikiTreeLoginFormRef}\n          >\n            <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\n            <input\n              type=\"hidden\"\n              name=\"returnURL\"\n              ref={this.wikiTreeReturnUrlRef}\n            />\n          </form>\n        );\n        switch (screenSize) {\n          case ScreenSize.LARGE:\n            return (\n              <Menu.Item onClick={() => this.wikiTreeLogin()}>\n                <img\n                  src={wikiTreeLogoUrl}\n                  alt=\"WikiTree logo\"\n                  style={{width: '24px', height: '24px'}}\n                />\n                <FormattedMessage\n                  id=\"menu.wikitree_login\"\n                  defaultMessage=\"Log in to WikiTree\"\n                />\n                {loginForm}\n              </Menu.Item>\n            );\n\n          case ScreenSize.SMALL:\n            return (\n              <>\n                <Dropdown.Item onClick={() => this.wikiTreeLogin()}>\n                  <img\n                    src={wikiTreeLogoUrl}\n                    alt=\"WikiTree logo\"\n                    style={{width: '24px', height: '24px'}}\n                  />\n                  <FormattedMessage\n                    id=\"menu.wikitree_login\"\n                    defaultMessage=\"Log in to WikiTree\"\n                  />\n                  {loginForm}\n                </Dropdown.Item>\n                <Dropdown.Divider />\n              </>\n            );\n        }\n        break;\n\n      case WikiTreeLoginState.LOGGED_IN:\n        const tooltip = this.state.wikiTreeLoginUsername\n          ? this.context.intl.formatMessage(\n              {\n                id: 'menu.wikitree_popup_username',\n                defaultMessage: 'Logged in to WikiTree as {username}',\n              },\n              {username: this.state.wikiTreeLoginUsername},\n            )\n          : this.context.intl.formatMessage({\n              id: 'menu.wikitree_popup',\n              defaultMessage: 'Logged in to WikiTree',\n            });\n        switch (screenSize) {\n          case ScreenSize.LARGE:\n            return (\n              <Menu.Item title={tooltip}>\n                <img\n                  src={wikiTreeLogoUrl}\n                  alt=\"WikiTree logo\"\n                  style={{width: '24px', height: '24px'}}\n                />\n                <FormattedMessage\n                  id=\"menu.wikitree_logged_in\"\n                  defaultMessage=\"Logged in\"\n                />\n              </Menu.Item>\n            );\n\n          case ScreenSize.SMALL:\n            return (\n              <>\n                <Menu.Item title={tooltip}>\n                  <img\n                    src={wikiTreeLogoUrl}\n                    alt=\"WikiTree logo\"\n                    style={{width: '24px', height: '24px'}}\n                  />\n                  <FormattedMessage\n                    id=\"menu.wikitree_logged_in\"\n                    defaultMessage=\"Logged in\"\n                  />\n                </Menu.Item>\n                <Dropdown.Divider />\n              </>\n            );\n\n          default:\n            return null;\n        }\n    }\n  }\n\n  private mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {this.fileMenus(ScreenSize.SMALL)}\n            {this.chartMenus(ScreenSize.SMALL)}\n            {this.wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"Source on GitHub\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {this.props.standalone ? (\n          <Link to=\"/\">{this.title()}</Link>\n        ) : (\n          this.title()\n        )}\n      </>\n    );\n  }\n\n  private desktopMenus() {\n    return (\n      <>\n        {this.props.standalone ? <Link to=\"/\">{this.title()}</Link> : null}\n        {this.fileMenus(ScreenSize.LARGE)}\n        {this.chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {this.wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Responsive\n          as={Menu}\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n          minWidth={768}\n        >\n          {this.desktopMenus()}\n        </Responsive>\n        <Responsive\n          as={Menu}\n          attached=\"top\"\n          inverted\n          color=\"blue\"\n          size=\"large\"\n          maxWidth={767}\n        >\n          {this.mobileMenus()}\n        </Responsive>\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from './analytics';\nimport {Chart, ChartType} from './chart';\nimport {Details} from './details';\nimport {FormattedMessage} from 'react-intl';\nimport {getSelection, loadFromUrl, loadGedcom} from './load_data';\nimport {getSoftware, TopolaData} from './gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {intlShape} from 'react-intl';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Responsive} from 'semantic-ui-react';\nimport {loadWikiTree} from './wikitree';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './top_bar';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\n/** Interface encapsulating functions specific for a data source. */\ninterface DataSource {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(args: Arguments, state: State): boolean;\n  /** Loads data from the data source. */\n  loadData(args: Arguments): Promise<TopolaData>;\n}\n\n/** Files opened from the local computer. */\nclass UploadedDataSource implements DataSource {\n  isNewData(args: Arguments, state: State): boolean {\n    return (\n      args.hash !== state.hash ||\n      !!(args.gedcom && !state.loading && !state.data)\n    );\n  }\n\n  async loadData(args: Arguments): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(args.hash!, args.gedcom, args.images);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (args.images && args.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nclass GedcomUrlDataSource implements DataSource {\n  isNewData(args: Arguments, state: State): boolean {\n    return args.url !== state.url;\n  }\n\n  async loadData(args: Arguments): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(args.url!, args.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n\n/** Loading data from the WikiTree API. */\nclass WikiTreeDataSource implements DataSource {\n  isNewData(args: Arguments, state: State): boolean {\n    // WikiTree is always a single data source.\n    return false;\n  }\n\n  async loadData(args: Arguments): Promise<TopolaData> {\n    try {\n      const data = await loadWikiTree(args.indi!, args.authcode);\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n\n/** Supported data sources. */\nenum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n}\n\n/** Mapping from data source identifier to data source handler functions. */\nconst DATA_SOURCES = new Map([\n  [DataSourceEnum.UPLOADED, new UploadedDataSource()],\n  [DataSourceEnum.GEDCOM_URL, new GedcomUrlDataSource()],\n  [DataSourceEnum.WIKITREE, new WikiTreeDataSource()],\n]);\n\n/** Arguments passed to the application, primarily through URL parameters. */\ninterface Arguments {\n  showSidePanel: boolean;\n  embedded: boolean;\n  url?: string;\n  indi?: string;\n  generation?: number;\n  hash?: string;\n  handleCors: boolean;\n  standalone: boolean;\n  source?: DataSourceEnum;\n  authcode?: string;\n  chartType: ChartType;\n  gedcom?: string;\n  images?: Map<string, string>;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const parsedGen = Number(getParam('gen'));\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n  const hash = getParam('file');\n  const url = getParam('url');\n  const source =\n    getParam('source') === 'wikitree'\n      ? DataSourceEnum.WIKITREE\n      : hash\n      ? DataSourceEnum.UPLOADED\n      : url\n      ? DataSourceEnum.GEDCOM_URL\n      : undefined;\n  return {\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    embedded: getParam('embedded') === 'true', // False by default.\n    url,\n    indi: getParam('indi'),\n    generation: !isNaN(parsedGen) ? parsedGen : undefined,\n    hash,\n    handleCors: getParam('handleCors') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false', // True by default.\n    source,\n    authcode: getParam('?authcode'),\n\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    gedcom: location.state && location.state.data,\n    images: location.state && location.state.images,\n  };\n}\n\n/** Returs true if the changes object has values that are different than those in state. */\nfunction hasUpdatedValues<T>(state: T, changes: Partial<T> | undefined) {\n  if (!changes) {\n    return false;\n  }\n  return Object.entries(changes).some(\n    ([key, value]) => value !== undefined && state[key] !== value,\n  );\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if data is currently being loaded. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  url?: string;\n  /** Whether the side panel is shown. */\n  showSidePanel?: boolean;\n  /** Whether the app is in embedded mode, i.e. embedded in an iframe. */\n  embedded: boolean;\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  standalone: boolean;\n  /** Type of displayed chart. */\n  chartType: ChartType;\n  /** Whether to show the error popup. */\n  showErrorPopup: boolean;\n  /** Source of the data. */\n  source?: DataSourceEnum;\n  loadingMore?: boolean;\n}\n\nexport class App extends React.Component<RouteComponentProps, {}> {\n  state: State = {\n    loading: false,\n    embedded: false,\n    standalone: true,\n    chartType: ChartType.Hourglass,\n    showErrorPopup: false,\n  };\n  chartRef: Chart | null = null;\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  /** Sets the state with a new individual selection and chart type. */\n  private updateDisplay(\n    selection: IndiInfo,\n    otherStateChanges?: Partial<State>,\n  ) {\n    if (\n      !this.state.selection ||\n      this.state.selection.id !== selection.id ||\n      this.state.selection!.generation !== selection.generation ||\n      hasUpdatedValues(this.state, otherStateChanges)\n    ) {\n      this.setState(\n        Object.assign({}, this.state, {selection}, otherStateChanges),\n      );\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  private setError(error: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        error: error,\n        loading: false,\n      }),\n    );\n  }\n\n  private async onMessage(message: EmbeddedMessage) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            selection: getSelection(data.chartData),\n            error: undefined,\n            loading: false,\n          }),\n        );\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        this.setError(error.message);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  async componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      return;\n    }\n\n    const args = getArguments(this.props.location);\n\n    if (args.embedded && !this.state.embedded) {\n      this.setState(\n        Object.assign({}, this.state, {\n          embedded: true,\n          standalone: false,\n          showSidePanel: args.showSidePanel,\n        }),\n      );\n      // Notify the parent window that we are ready.\n      window.parent.postMessage('ready', '*');\n      window.addEventListener('message', (data) => this.onMessage(data.data));\n    }\n    if (args.embedded) {\n      // If the app is embedded, do not run the normal loading code.\n      return;\n    }\n\n    const dataSource = DATA_SOURCES.get(args.source!);\n\n    if (!dataSource) {\n      this.props.history.replace({pathname: '/'});\n    } else if (\n      (!this.state.loading && !this.state.data && !this.state.error) ||\n      args.source !== this.state.source ||\n      dataSource.isNewData(args, this.state)\n    ) {\n      // Set loading state.\n      this.setState(\n        Object.assign({}, this.state, {\n          data: undefined,\n          selection: undefined,\n          hash: args.hash,\n          error: undefined,\n          loading: true,\n          url: args.url,\n          standalone: args.standalone,\n          chartType: args.chartType,\n          source: args.source,\n        }),\n      );\n      try {\n        const data = await dataSource.loadData(args);\n\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            hash: args.hash,\n            selection: getSelection(data.chartData, args.indi, args.generation),\n            error: undefined,\n            loading: false,\n            url: args.url,\n            showSidePanel: args.showSidePanel,\n            standalone: args.standalone,\n            chartType: args.chartType,\n            source: args.source,\n          }),\n        );\n      } catch (error) {\n        this.setError(error.message);\n      }\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data.chartData,\n        args.indi,\n        args.generation,\n      );\n      const loadMoreFromWikitree =\n        args.source === DataSourceEnum.WIKITREE &&\n        (!this.state.selection || this.state.selection.id !== selection.id);\n      this.updateDisplay(selection, {\n        chartType: args.chartType,\n        loadingMore: loadMoreFromWikitree || undefined,\n      });\n      if (loadMoreFromWikitree) {\n        const data = await loadWikiTree(args.indi!);\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            hash: args.hash,\n            selection: getSelection(data.chartData, args.indi, args.generation),\n            error: undefined,\n            loading: false,\n            url: args.url,\n            showSidePanel: args.showSidePanel,\n            standalone: args.standalone,\n            chartType: args.chartType,\n            source: args.source,\n            loadingMore: false,\n          }),\n        );\n      }\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    analyticsEvent('selection_changed');\n    if (this.state.embedded) {\n      // In embedded mode the URL doesn't change.\n      this.updateDisplay(selection);\n      return;\n    }\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private onPrint = () => {\n    analyticsEvent('print');\n    this.chartRef && this.chartRef.print();\n  };\n\n  private showErrorPopup(message: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: true,\n        error: message,\n      }),\n    );\n  }\n\n  private onDownloadPdf = async () => {\n    analyticsEvent('download_pdf');\n    try {\n      this.chartRef && (await this.chartRef.downloadPdf());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadPng = async () => {\n    analyticsEvent('download_png');\n    try {\n      this.chartRef && (await this.chartRef.downloadPng());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadSvg = () => {\n    analyticsEvent('download_svg');\n    this.chartRef && this.chartRef.downloadSvg();\n  };\n\n  onDismissErrorPopup = () => {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: false,\n      }),\n    );\n  };\n\n  private renderMainArea = () => {\n    if (this.state.data && this.state.selection) {\n      return (\n        <div id=\"content\">\n          <ErrorPopup\n            open={this.state.showErrorPopup}\n            message={this.state.error}\n            onDismiss={this.onDismissErrorPopup}\n          />\n          {this.state.loadingMore ? (\n            <Loader active size=\"small\" className=\"loading-more\" />\n          ) : null}\n          <Chart\n            data={this.state.data.chartData}\n            selection={this.state.selection}\n            chartType={this.state.chartType}\n            onSelection={this.onSelection}\n            ref={(ref) => (this.chartRef = ref)}\n          />\n          {this.state.showSidePanel ? (\n            <Responsive minWidth={768} id=\"sidePanel\">\n              <Details\n                gedcom={this.state.data.gedcom}\n                indi={this.state.selection.id}\n              />\n            </Responsive>\n          ) : null}\n        </div>\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              data={this.state.data && this.state.data.chartData}\n              allowAllRelativesChart={\n                this.state.source !== DataSourceEnum.WIKITREE\n              }\n              showingChart={\n                !!(\n                  this.props.history.location.pathname === '/view' &&\n                  this.state.data &&\n                  this.state.selection\n                )\n              }\n              standalone={this.state.standalone}\n              eventHandlers={{\n                onSelection: this.onSelection,\n                onPrint: this.onPrint,\n                onDownloadPdf: this.onDownloadPdf,\n                onDownloadPng: this.onDownloadPng,\n                onDownloadSvg: this.onDownloadSvg,\n              }}\n              showWikiTreeLogin={this.state.source === DataSourceEnum.WIKITREE}\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}