{"version":3,"sources":["topola.jpg","analytics.ts","chart.tsx","gedcom_util.ts","date_util.ts","details.tsx","load_data.ts","intro.tsx","wikitree.ts","search_index.ts","search_util.tsx","top_bar.tsx","app.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","analyticsEvent","action","data","window","gtag","ChartType","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","_callee6","image","href","response","dataUrl","regenerator_default","a","wrap","_context6","prev","next","baseVal","abrupt","fetch","sent","t0","console","warn","stop","inlineImages","_callee7","svg","images","_context7","Array","from","getElementsByTagName","all","map","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","chart","animating","rerenderRequired","zoomBehavior","inherits","createClass","key","value","props","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","CircleRenderer","DetailedRenderer","factor","parent","d3","scaleBy","_this2","undefined","initialRender","node","innerHTML","createChart","json","getChartType","renderer","getRendererType","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","setData","chartInfo","render","startIndi","selection","id","baseGeneration","generation","scale","enableZoom","k","zoomOutFactor","clientWidth","size","clientHeight","extent","scaleExtent","translateExtent","on","transform","offsetX","offsetY","attr","scrollLeft","x","scrollTop","y","zoomed","translateTo","scrolled","dx","origin","dy","svgTransition","transition","delay","duration","tween","i","t","animationPromise","then","renderChart","prevProps","_this3","react","className","onClick","zoom","getElementById","cloneNode","removeAttribute","setAttribute","String","Number","getAttribute","querySelector","XMLSerializer","serializeToString","getStrippedSvg","_getSvgContentsWithInlinedImages","asyncToGenerator","mark","_callee","_context","_this4","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","_downloadSvg","_callee2","contents","_context2","getSvgContentsWithInlinedImages","Blob","saveAs","_drawOnCanvas2","_callee3","_context3","t1","_downloadPng","_callee4","_context4","_downloadPdf","_callee5","doc","_context5","jsPDF","orientation","unit","format","addImage","save","React","contextTypes","intlShape","pointerToId","pointer","substring","prepareGedcom","entries","head","find","entry","tag","indis","fams","other","forEach","strcmp","b","compareDates","event1","event2","date1","date","dateRange","date2","year","month","day","sortChildren","gedcom","comparator","idToIndiMap","Map","indi","indiId1","indiId2","indi1","indi2","birth","birthDatesComparator","newFams","fam","children","newChildren","sort","assign","sortFamilyChildren","sortSpouses","idToFamMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","normalizeGedcom","IMAGE_EXTENSIONS","filterImage","newImages","fileName","url","match","has","push","get","title","startsWith","lowerName","toLowerCase","some","ext","endsWith","isImageFile","filterImages","getSoftware","sour","tree","name","DATE_QUALIFIERS","formatDate","hasDay","hasMonth","hasYear","text","dateObject","Date","qualifier","formatOptions","formatMessage","defaultMessage","Intl","DateTimeFormat","join","translateDate","gedcomDate","dateOrRange","getDate","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","translateTag","index_es","joinLines","lines","line","index","Linkify_default","properties","getData","subentry","last","noteDetails","nameDetails","split","filter","getDetails","tags","detailsFunction","flatMap","element","hasData","getOtherDetails","includes","toConsumableArray","note","dataDetails","Details","_React$Component","entriesWithData","dereferenced","dereference","place","eventDetails","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","Error","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadFromUrl","_x","_x2","_loadFromUrl","handleCors","cachedData","urlToFetch","getItem","parse","status","statusText","loadGedcom","_x3","_x4","_x5","_loadGedcom","hash","GedcomLink","Link","pathname","search","queryString","Intro","Card","Content","Header","Grid","Row","Column","Image_Image","logo","alt","values","link","process","slice","wikiTreeGet","request","requestData","apiUrl","responseBody","FormData","append","method","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","fetchedResults","getChildren","getSpouses","items","person","Name","clientLogin","_x7","_clientLogin","authcode","loadWikiTree","_x8","_x9","_loadWikiTree","everyone","firstPerson","spouseKeys","ancestorKeys","ancestorDetails","descendantGenerationLimit","toFetch","people","allSpouses","families","spouses","idToName","converted","location","hostname","Cookies","clear","Spouses","s","personId","flat","Children","c","set","Id","Mother","Father","famId","getFamilyId","getSet","add","wife","husband","Set","convertPerson","spouse","familySpouses","Gender","_ref","_ref2","slicedToArray","husb","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","FirstName","firstName","LastNameAtBirth","lastName","famc","sex","BirthDate","BirthLocation","DataStatus","DeathDate","DeathLocation","death","PhotoData","path","dataStatus","matchedDate","dataRange","gedcomIndis","escapedId","replace","level","newSet","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","getHusbandLastName","husbandId","names","LunrSearchIndex","self","lunr","field","boost","spouseLastName","normalizedName","normalizedSpouseLastName","query","getNameLine","nameTag","eventEntry","dateEntry","getDescriptionLine","birthDate","deathDate","WikiTreeLoginState","loadFileAsText","file","evt","readAsText","isImageFileName","lower","EmbeddedMessageType","TopBar","state","loadUrlDialogOpen","searchResults","wikiTreeLoginState","UNKNOWN","urlInputRef","wikiTreeLoginFormRef","wikiTreeReturnUrlRef","searchRef","searchIndex","_handleUpload","event","files","filesArray","gedcomFile","imageMap","imageFileNames","event_value","md5","history","setState","current","results","description","displaySearchResult","eventHandlers","setValue","initialize","buildSearchIndex","view","returnUrl","submit","LOGGED_IN","NOT_LOGGED_IN","wikiTreeLoginUsername","_componentDidMount","checkWikiTreeLoginState","initializeSearchIndex","Modal","onClose","handleClose","centered","Icon","txt","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","Actions","Button","secondary","primary","_this5","showingChart","Menu","Item","as","onPrint","Dropdown","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","changeView","allowAllRelativesChart","Search","onSearchChange","debounce","_","handleSearch","onResultSelect","handleResultSelect","noResultsMessage","selectFirstResult","_this6","standalone","openLoadUrlDialog","accept","multiple","handleUpload","htmlFor","_this7","showWikiTreeLogin","wikiTreeLogoUrl","wikiTreeLogin","display","tooltip","username","attached","inverted","color","fileMenus","chartMenus","wikiTreeLoginMenu","sourceLink","poweredByLink","loadFromUrlModal","ErrorMessage","Message","negative","message","ErrorPopup","Portal","onDismiss","DataSourceEnum","UploadedDataSource","loading","event_label","GedcomUrlDataSource","WikiTreeDataSource","DATA_SOURCES","UPLOADED","GEDCOM_URL","WIKITREE","getArguments","getParam","parsedGen","chartTypes","source","showSidePanel","embedded","isNaN","App","showErrorPopup","chartRef","updateDisplay","gen","downloadPdf","downloadPng","downloadSvg","onDismissErrorPopup","renderMainArea","error","loadingMore","Loader","active","chart_Chart","Responsive","minWidth","details_Details","otherStateChanges","changes","_onMessage","PARENT_READY","postMessage","READY","GEDCOM","setError","componentDidUpdate","_componentDidUpdate","dataSource","loadMoreFromWikitree","_data","onMessage","isNewData","loadData","Route","top_bar_TopBar","Switch","exact","component","Redirect","addLocaleData","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","browser","detect","ReactDOM","HashRouter"],"mappings":"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","file":"static/js/main.dd5d3ff1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/topola.060eef13.jpg\";","/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import * as d3 from 'd3';\nimport * as React from 'react';\nimport jsPDF from 'jspdf';\nimport {intlShape} from 'react-intl';\nimport {saveAs} from 'file-saver';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(size: [number, number], enableZoom: boolean) {\n  const parent = d3.select('#svgContainer').node() as Element;\n\n  if (enableZoom) {\n    const scale = d3.event.transform.k;\n    const offsetX = d3.max([0, (parent.clientWidth - size[0] * scale) / 2]);\n    const offsetY = d3.max([0, (parent.clientHeight - size[1] * scale) / 2]);\n    d3.select('#chartSvg')\n      .attr('width', size[0] * scale)\n      .attr('height', size[1] * scale)\n      .attr('transform', `translate(${offsetX}, ${offsetY})`);\n    d3.select('#chart').attr('transform', `scale(${scale})`);\n  }\n\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled(enableZoom: boolean) {\n  const parent = d3.select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = enableZoom ? d3.zoomTransform(parent).k : 1;\n  d3.select(parent).call(d3.zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  enableZoom: boolean;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: d3.ZoomBehavior<Element, any>;\n\n  private getChartType() {\n    switch (this.props.chartType) {\n      case ChartType.Hourglass:\n        return HourglassChart;\n      case ChartType.Relatives:\n        return RelativesChart;\n      case ChartType.Fancy:\n        return FancyChart;\n      default:\n        // Fall back to hourglass chart.\n        return HourglassChart;\n    }\n  }\n\n  private getRendererType() {\n    switch (this.props.chartType) {\n      case ChartType.Fancy:\n        return CircleRenderer;\n      default:\n        // Use DetailedRenderer by default.\n        return DetailedRenderer;\n    }\n  }\n\n  private zoom(factor: number) {\n    const parent = d3.select('#svgContainer') as d3.Selection<\n      Element,\n      any,\n      any,\n      any\n    >;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      return;\n    }\n\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: this.getChartType(),\n        renderer: this.getRendererType(),\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    } else {\n      this.chart!.setData(this.props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chartSvg');\n    const parent = d3.select('#svgContainer').node() as Element;\n\n    const scale = this.props.enableZoom ? d3.zoomTransform(parent).k : 1;\n    const zoomOutFactor = d3.min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = this.props.enableZoom\n      ? [d3.max([0.1, zoomOutFactor])!, 2]\n      : [1, 1];\n\n    this.zoomBehavior = d3\n      .zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', () => zoomed(chartInfo.size, this.props.enableZoom));\n    d3.select(parent)\n      .on('scroll', () => scrolled(this.props.enableZoom))\n      .call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = d3.max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = d3.max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        this.renderChart({initialRender: false});\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    const initialRender = this.props.chartType !== prevProps.chartType;\n    this.renderChart({initialRender});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <div className=\"zoom\">\n          <a className=\"zoom-in\" onClick={() => this.zoom(ZOOM_FACTOR)}>\n            +\n          </a>\n          <a className=\"zoom-out\" onClick={() => this.zoom(1 / ZOOM_FACTOR)}>\n            −\n          </a>\n        </div>\n        <svg id=\"chartSvg\">\n          <g id=\"chart\" />\n        </svg>\n      </div>\n    );\n  }\n\n  /** Return a copy of the SVG chart but without scaling and positioning. */\n  private getStrippedSvg() {\n    const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n    svg.removeAttribute('transform');\n    if (this.props.enableZoom) {\n      const parent = d3.select('#svgContainer').node() as Element;\n      const scale = d3.zoomTransform(parent).k;\n      svg.setAttribute(\n        'width',\n        String(Number(svg.getAttribute('width')) / scale),\n      );\n      svg.setAttribute(\n        'height',\n        String(Number(svg.getAttribute('height')) / scale),\n      );\n      svg.querySelector('#chart')!.removeAttribute('transform');\n    }\n    return svg;\n  }\n\n  private getSvgContents() {\n    return new XMLSerializer().serializeToString(this.getStrippedSvg());\n  }\n\n  private async getSvgContentsWithInlinedImages() {\n    const svg = this.getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  async downloadSvg() {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return await drawOnCanvas(await loadImage(blob));\n  }\n\n  async downloadPng() {\n    const canvas = await this.drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'topola.png');\n  }\n\n  async downloadPdf() {\n    const canvas = await this.drawOnCanvas();\n    const doc = new jsPDF({\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\n      unit: 'pt',\n      format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('topola.pdf');\n  }\n}\n","import {\n  JsonFam,\n  JsonGedcomData,\n  JsonIndi,\n  gedcomEntriesToJson,\n  JsonImage,\n  JsonEvent,\n} from 'topola';\nimport {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Compares dates of the given events. */\nfunction compareDates(\n  event1: JsonEvent | undefined,\n  event2: JsonEvent | undefined,\n): number {\n  const date1 =\n    event1 && (event1.date || (event1.dateRange && event1.dateRange.from));\n  const date2 =\n    event2 && (event2.date || (event2.dateRange && event2.dateRange.from));\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const idToIndiMap = new Map<string, JsonIndi>();\n  gedcom.indis.forEach((indi) => {\n    idToIndiMap[indi.id] = indi;\n  });\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi = idToIndiMap[indiId1];\n    const indi2: JsonIndi = idToIndiMap[indiId2];\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const idToFamMap = new Map<string, JsonFam>();\n  gedcom.fams.forEach((fam) => {\n    idToFamMap[fam.id] = fam;\n  });\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam = idToFamMap[famId1];\n    const fam2: JsonFam = idToFamMap[famId2];\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nfunction isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import {Date as TopolaDate, DateRange, getDate} from 'topola';\nimport {InjectedIntl} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: InjectedIntl) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: InjectedIntl) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: InjectedIntl) {\n  const dateOrRange = getDate(gedcomDate);\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {FormattedMessage, InjectedIntl} from 'react-intl';\nimport {GedcomData, pointerToId} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {intlShape} from 'react-intl';\nimport {translateDate} from './date_util';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'DEAT', 'BURI', 'EVEN'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'NOTE', 'SOUR'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CHR', 'Christening'],\n  ['DEAT', 'Death'],\n  ['EMAIL', 'E-mail'],\n  ['EVEN', 'Event'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  return (\n    <FormattedMessage\n      id={`gedcom.${tag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(tag) || tag}\n    />\n  );\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nfunction getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\nfunction eventDetails(entry: GedcomEntry, intl: InjectedIntl) {\n  const lines = [];\n  if (entry.data && entry.data.length > 1) {\n    lines.push(<i>{entry.data}</i>);\n  }\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, intl));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(...getData(place));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return joinLines(\n    getData(entry).map((line, index) => <i key={index}>{line}</i>),\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nfunction dereference(entry: GedcomEntry, gedcom: GedcomData) {\n  if (entry.data) {\n    const dereferenced = gedcom.other[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\nexport class Details extends React.Component<Props, {}> {\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n    const entriesWithData = entries\n      .map((entry) => dereference(entry, this.props.gedcom))\n      .filter(hasData);\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.context.intl as InjectedIntl),\n        )}\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\n","import {convertGedcom, TopolaData} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    indi && data.indis.some((i) => i.id === indi) ? indi : data.indis[0].id;\n  return {id, generation: generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  const urlToFetch = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new Error('Error loading data. Please upload your file again.');\n  }\n  return prepareData(gedcom, hash, images);\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString.slice(0, 16);\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Card.Content>\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <p>\n                  <FormattedMessage\n                    id=\"intro.description\"\n                    defaultMessage={\n                      'Topola Genealogy is a genealogy tree viewer that lets you' +\n                      ' browse the structure of the family.'\n                    }\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"intro.instructions\"\n                    defaultMessage={\n                      'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n                      ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n                      ' existing genealogy programs and web sites.'\n                    }\n                  />\n                </p>\n                <p>\n                  <FormattedMessage\n                    id=\"intro.examples\"\n                    defaultMessage={\n                      'Here are some examples from the web that you can view:'\n                    }\n                  />\n                </p>\n                <ul>\n                  <li>\n                    <GedcomLink\n                      url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n                      text=\"Karol Wojtyła\"\n                    />{' '}\n                    (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n                    <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n                      GENPOL\n                    </a>\n                    )\n                  </li>\n                  <li>\n                    <GedcomLink\n                      url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n                      text=\"Shakespeare\"\n                    />{' '}\n                    (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n                    <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n                      webtreeprint.com\n                    </a>\n                    )\n                  </li>\n                  <li>\n                    <GedcomLink\n                      url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n                      text=\"Harry Potter\"\n                    />{' '}\n                    (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n                    <a href=\"http://famousfamilytrees.blogspot.com/\">\n                      Famous Family Trees\n                    </a>\n                    )\n                  </li>\n                </ul>\n                <p>\n                  <b>\n                    <FormattedMessage\n                      id=\"intro.privacy\"\n                      defaultMessage=\"Privacy\"\n                    />\n                  </b>\n                  {': '}\n                  <FormattedMessage\n                    id=\"intro.privacy_note\"\n                    defaultMessage={\n                      'When using the \"load from file\" option, this site does not' +\n                      ' send your data anywhere and files loaded from disk do not' +\n                      ' leave your computer. When using \"load from URL\", data is' +\n                      ' passed through the {link} service to deal with an issue with' +\n                      ' cross-site file loading in the browser (CORS).'\n                    }\n                    values={{\n                      link: (\n                        <a href=\"https://cors-anywhere.herokuapp.com/\">\n                          cors-anywhere\n                        </a>\n                      ),\n                    }}\n                  />\n                </p>\n                <p className=\"ui right aligned version\">\n                  version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n                  <a\n                    href={`https://github.com/PeWu/topola-viewer/commit/${\n                      process.env.REACT_APP_GIT_SHA\n                    }`}\n                  >\n                    {process.env.REACT_APP_GIT_SHA}\n                  </a>\n                  )\n                </p>\n              </Grid.Column>{' '}\n            </Grid.Row>{' '}\n          </Grid>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import Cookies from 'js-cookie';\nimport {Date, JsonFam, JsonIndi} from 'topola';\nimport {GedcomData, TopolaData, normalizeGedcom} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\n\n/** WikiTree API getAncestors request. */\ninterface GetAncestorsRequest {\n  action: 'getAncestors';\n  key: string;\n  fields: string;\n}\n\n/** WikiTree API getRelatives request. */\ninterface GetRelatives {\n  action: 'getRelatives';\n  keys: string;\n  getChildren?: true;\n  getSpouses?: true;\n}\n\ninterface ClientLogin {\n  action: 'clientLogin';\n  authcode: string;\n}\n\ntype WikiTreeRequest = GetAncestorsRequest | GetRelatives | ClientLogin;\n\n/** Person structure returned from WikiTree API. */\ninterface Person {\n  Id: number;\n  Name: string;\n  FirstName: string;\n  LastNameAtBirth: string;\n  Spouses: {[key: number]: Person};\n  Children: {[key: number]: Person};\n  Mother: number;\n  Father: number;\n  Gender: string;\n  BirthDate: string;\n  DeathDate: string;\n  BirthLocation: string;\n  DeathLocation: string;\n  marriage_location: string;\n  marriage_date: string;\n  DataStatus?: {\n    BirthDate: string;\n    DeathDate: string;\n  };\n  PhotoData?: {\n    path: string;\n  };\n}\n\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\n  const requestData = new FormData();\n  requestData.append('format', 'json');\n  for (const key in request) {\n    requestData.append(key, request[key]);\n  }\n  const apiUrl = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/https://apps.wikitree.com/api.php'\n    : 'https://apps.wikitree.com/api.php';\n  const response = await window.fetch(apiUrl, {\n    method: 'POST',\n    body: requestData,\n  });\n  const responseBody = await response.text();\n  return JSON.parse(responseBody);\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(key: string, handleCors: boolean) {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = sessionStorage.getItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getAncestors',\n      key: key,\n      fields: '*',\n    },\n    handleCors,\n  );\n  const result = response[0].ancestors as Person[];\n  sessionStorage.setItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(keys: string[], handleCors: boolean) {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = sessionStorage.getItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await wikiTreeGet(\n    {\n      action: 'getRelatives',\n      keys: keysToFetch.join(','),\n      getChildren: true,\n      getSpouses: true,\n    },\n    handleCors,\n  );\n  if (response[0].items === null) {\n    throw new Error(`WikiTree profile ${keysToFetch[0]} not found.`);\n  }\n  const fetchedResults = response[0].items.map(\n    (x: {person: Person}) => x.person,\n  ) as Person[];\n  fetchedResults.forEach((person) => {\n    sessionStorage.setItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(fetchedResults);\n}\n\nexport async function clientLogin(authcode: string) {\n  const response = await wikiTreeGet(\n    {\n      action: 'clientLogin',\n      authcode,\n    },\n    false,\n  );\n  return response.clientLogin;\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !Cookies.get('wikidb_wtb_UserID') && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    throw new Error(\n      `WikiTree profile ${key} is not accessible. Try logging in.`,\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses).map((s) => s.Name);\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n  everyone.push(...ancestorDetails);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 10;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person);\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(indis);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      person.DataStatus && person.DataStatus.BirthDate,\n    );\n    indi.birth = Object.assign({}, parsedDate, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      person.DataStatus && person.DataStatus.DeathDate,\n    );\n    indi.death = Object.assign({}, parsedDate, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [{url: `https://wikitree.com${person.PhotoData.path}`}];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string) {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {text: date};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dataRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dataRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(indis: JsonIndi[]): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  indis.forEach((indi) => {\n    // WikiTree URLs replace spaces with underscores.\n    const escapedId = indi.id.replace(/ /g, '_');\n    gedcomIndis[indi.id] = {\n      level: 0,\n      pointer: `@${indi.id}@`,\n      tag: 'INDI',\n      data: '',\n      tree: [\n        {\n          level: 1,\n          pointer: '',\n          tag: 'NAME',\n          data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n          tree: [],\n        },\n        {\n          level: 1,\n          pointer: '',\n          tag: 'WWW',\n          data: `https://www.wikitree.com/wiki/${escapedId}`,\n          tree: [],\n        },\n      ],\n    };\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: {},\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n","import naturalSort from 'javascript-natural-sort';\nimport lunr from 'lunr';\nimport {GedcomData, pointerToId} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: GedcomEntry;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(indi: GedcomEntry, gedcom: GedcomData): string {\n  return indi.tree\n    .filter((entry) => entry.tag === 'FAMS')\n    .map((entry) => gedcom.fams[pointerToId(entry.data)])\n    .filter((entry) => !!entry)\n    .map((entry) => {\n      const husband = entry.tree.find((entry) => entry.tag === 'HUSB');\n      const husbandId = husband && pointerToId(husband.data);\n      return (\n        husbandId &&\n        husbandId !== pointerToId(indi.pointer) &&\n        gedcom.indis[husbandId]\n      );\n    })\n    .filter((entry) => !!entry)\n    .flatMap((husband) =>\n      (husband as GedcomEntry).tree\n        .filter((entry) => entry.tag === 'NAME')\n        .map((entry) => {\n          const names = entry.data.split('/');\n          return names.length >= 2 ? names[1] : '';\n        }),\n    )\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n\n  constructor(private gedcom: GedcomData) {}\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function() {\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      for (let id in self.gedcom.indis) {\n        const indi = self.gedcom.indis[id];\n        const name = indi.tree\n          .filter((entry) => entry.tag === 'NAME')\n          .map((entry) => entry.data)\n          .join(' ');\n        const spouseLastName = getHusbandLastName(indi, self.gedcom);\n        this.add({\n          id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      }\n    });\n  }\n\n  public search(input: string) {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.gedcom.indis[result.ref]}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(gedcom: GedcomData): SearchIndex {\n  const index = new LunrSearchIndex(gedcom);\n  index.initialize();\n  return index;\n}\n","import * as React from 'react';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {InjectedIntl} from 'react-intl';\nimport {SearchResult} from './search_index';\nimport {translateDate} from './date_util';\n\nfunction getNameLine(result: SearchResult) {\n  const nameTag = result.indi.tree.find((entry) => entry.tag === 'NAME');\n  const name =\n    nameTag &&\n    nameTag.data\n      .split('/')\n      .filter((s) => !!s)\n      .join(' ');\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\nfunction getDate(indi: GedcomEntry, tag: string, intl: InjectedIntl) {\n  const eventEntry = indi.tree.find((entry) => entry.tag === tag);\n  const dateEntry =\n    eventEntry && eventEntry.tree.find((entry) => entry.tag === 'DATE');\n  return (dateEntry && translateDate(dateEntry.data, intl)) || '';\n}\n\nfunction getDescriptionLine(indi: GedcomEntry, intl: InjectedIntl) {\n  const birthDate = getDate(indi, 'BIRT', intl);\n  const deathDate = getDate(indi, 'DEAT', intl);\n  if (!deathDate) {\n    return birthDate;\n  }\n  return `${birthDate} – ${deathDate}`;\n}\n\n/** Produces an object that is displayed in the Semantic UI Search results. */\nexport function displaySearchResult(result: SearchResult, intl: InjectedIntl) {\n  return {\n    id: result.id,\n    key: result.id,\n    title: getNameLine(result),\n    description: getDescriptionLine(result.indi, intl),\n  };\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport Cookies from 'js-cookie';\nimport debounce from 'debounce';\nimport md5 from 'md5';\nimport {analyticsEvent} from './analytics';\nimport {buildSearchIndex, SearchIndex} from './search_index';\nimport {displaySearchResult} from './search_util';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {GedcomData} from './gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n  Dropdown,\n  Search,\n  SearchProps,\n  SearchResultProps,\n} from 'semantic-ui-react';\n\nenum WikiTreeLoginState {\n  UNKNOWN,\n  NOT_LOGGED_IN,\n  LOGGED_IN,\n}\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n  wikiTreeLoginState: WikiTreeLoginState;\n  wikiTreeLoginUsername?: string;\n  searchResults: SearchResultProps[];\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  gedcom?: GedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show the 'Log in to WikiTree' button. */\n  showWikiTreeLogin: boolean;\n}\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    loadUrlDialogOpen: false,\n    searchResults: [],\n    wikiTreeLoginState: WikiTreeLoginState.UNKNOWN,\n  };\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  urlInputRef: React.RefObject<Input> = React.createRef();\n  wikiTreeLoginFormRef: React.RefObject<HTMLFormElement> = React.createRef();\n  wikiTreeReturnUrlRef: React.RefObject<HTMLInputElement> = React.createRef();\n  searchRef?: {setValue(value: string): void};\n  searchIndex?: SearchIndex;\n\n  /** Handles the \"Upload file\" button. */\n  private async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(this.props.location.search);\n    const historyPush =\n      search.file === hash\n        ? this.props.history.replace\n        : this.props.history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  private openLoadUrlDialog() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.urlInputRef.current!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  private handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  private handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      analyticsEvent('url_selected');\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  private handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  /** On search input change. */\n  private handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = this.searchIndex!.search(input).map((result) =>\n      displaySearchResult(result, this.context.intl),\n    );\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\n  }\n\n  /** On search result selected. */\n  private handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    this.props.eventHandlers.onSelection({id, generation: 0});\n    this.searchRef!.setValue('');\n  }\n\n  private initializeSearchIndex() {\n    if (this.props.gedcom) {\n      this.searchIndex = buildSearchIndex(this.props.gedcom);\n    }\n  }\n\n  changeView(view: string) {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      this.props.history.push(location);\n    }\n  }\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  private wikiTreeLogin() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // Append '&' because the login page appends '?authcode=...' to this URL.\n    // TODO: remove ?authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}&`;\n    this.wikiTreeReturnUrlRef.current!.value = returnUrl;\n    this.wikiTreeLoginFormRef.current!.submit();\n  }\n\n  private checkWikiTreeLoginState() {\n    const wikiTreeLoginState =\n      Cookies.get('wikidb_wtb_UserID') !== undefined\n        ? WikiTreeLoginState.LOGGED_IN\n        : WikiTreeLoginState.NOT_LOGGED_IN;\n    if (this.state.wikiTreeLoginState !== wikiTreeLoginState) {\n      const wikiTreeLoginUsername = Cookies.get('wikidb_wtb_UserName');\n      this.setState(\n        Object.assign({}, this.state, {\n          wikiTreeLoginState,\n          wikiTreeLoginUsername,\n        }),\n      );\n    }\n  }\n\n  async componentDidMount() {\n    this.checkWikiTreeLoginState();\n    this.initializeSearchIndex();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.checkWikiTreeLoginState();\n    if (prevProps.gedcom !== this.props.gedcom) {\n      this.initializeSearchIndex();\n    }\n  }\n\n  private loadFromUrlModal() {\n    return (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={this.urlInputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  private chartMenus() {\n    if (!this.props.showingChart) {\n      return null;\n    }\n    return (\n      <>\n        <Menu.Item as=\"a\" onClick={() => this.props.eventHandlers.onPrint()}>\n          <Icon name=\"print\" />\n          <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n        </Menu.Item>\n\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"download\" />\n              <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPdf()}\n            >\n              <FormattedMessage id=\"menu.pdf_file\" defaultMessage=\"PDF file\" />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPng()}\n            >\n              <FormattedMessage id=\"menu.png_file\" defaultMessage=\"PNG file\" />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadSvg()}\n            >\n              <FormattedMessage id=\"menu.svg_file\" defaultMessage=\"SVG file\" />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"eye\" />\n              <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => this.changeView('hourglass')}>\n              <Icon name=\"hourglass\" />\n              <FormattedMessage\n                id=\"menu.hourglass\"\n                defaultMessage=\"Hourglass chart\"\n              />\n            </Dropdown.Item>\n            {this.props.allowAllRelativesChart ? (\n              <Dropdown.Item onClick={() => this.changeView('relatives')}>\n                <Icon name=\"users\" />\n                <FormattedMessage\n                  id=\"menu.relatives\"\n                  defaultMessage=\"All relatives\"\n                />\n              </Dropdown.Item>\n            ) : null}\n            <Dropdown.Item onClick={() => this.changeView('fancy')}>\n              <Icon name=\"users\" />\n              <FormattedMessage\n                id=\"menu.fancy\"\n                defaultMessage=\"Fancy tree (experimental)\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Search\n          onSearchChange={debounce(\n            (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\n              this.handleSearch(data.value),\n            200,\n          )}\n          onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\n          results={this.state.searchResults}\n          noResultsMessage={this.context.intl.formatMessage({\n            id: 'menu.search.no_results',\n            defaultMessage: 'No results found',\n          })}\n          placeholder={this.context.intl.formatMessage({\n            id: 'menu.search.placeholder',\n            defaultMessage: 'Search for people',\n          })}\n          selectFirstResult={true}\n          ref={(ref) =>\n            (this.searchRef = (ref as unknown) as {\n              setValue(value: string): void;\n            })\n          }\n        />\n      </>\n    );\n  }\n\n  private fileMenus() {\n    if (!this.props.standalone) {\n      return null;\n    }\n    return (\n      <>\n        <Link to=\"/\">\n          <Menu.Item>\n            <b>Topola Genealogy</b>\n          </Menu.Item>\n        </Link>\n        <Menu.Item as=\"a\" onClick={() => this.openLoadUrlDialog()}>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Menu.Item>\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged,image/*\"\n          id=\"fileInput\"\n          multiple\n          onChange={(e) => this.handleUpload(e)}\n        />\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">\n            <Icon name=\"folder open\" />\n            <FormattedMessage\n              id=\"menu.load_from_file\"\n              defaultMessage=\"Load from file\"\n            />\n          </Menu.Item>\n        </label>\n      </>\n    );\n  }\n\n  private wikiTreeLoginMenu() {\n    if (!this.props.showWikiTreeLogin) {\n      return null;\n    }\n    const wikiTreeLogoUrl =\n      'https://www.wikitree.com/photo.php/a/a5/WikiTree_Images.png';\n    switch (this.state.wikiTreeLoginState) {\n      case WikiTreeLoginState.NOT_LOGGED_IN:\n        return (\n          <Menu.Item as=\"a\" onClick={() => this.wikiTreeLogin()}>\n            <img\n              src={wikiTreeLogoUrl}\n              alt=\"WikiTree logo\"\n              style={{width: '24px', height: '24px'}}\n            />\n            <FormattedMessage\n              id=\"menu.wikitree_login\"\n              defaultMessage=\"Log in to WikiTree\"\n            />\n            <form\n              action=\"https://apps.wikitree.com/api.php\"\n              method=\"POST\"\n              style={{display: 'hidden'}}\n              ref={this.wikiTreeLoginFormRef}\n            >\n              <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\n              <input\n                type=\"hidden\"\n                name=\"returnURL\"\n                ref={this.wikiTreeReturnUrlRef}\n              />\n            </form>\n          </Menu.Item>\n        );\n      case WikiTreeLoginState.LOGGED_IN:\n        const tooltip = this.state.wikiTreeLoginUsername\n          ? this.context.intl.formatMessage(\n              {\n                id: 'menu.wikitree_popup_username',\n                defaultMessage: 'Logged in to WikiTree as {username}',\n              },\n              {username: this.state.wikiTreeLoginUsername},\n            )\n          : this.context.intl.formatMessage({\n              id: 'menu.wikitree_popup',\n              defaultMessage: 'Logged in to WikiTree',\n            });\n        return (\n          <Menu.Item title={tooltip}>\n            <img\n              src={wikiTreeLogoUrl}\n              alt=\"WikiTree logo\"\n              style={{width: '24px', height: '24px'}}\n            />\n            <FormattedMessage\n              id=\"menu.wikitree_logged_in\"\n              defaultMessage=\"Logged in\"\n            />\n          </Menu.Item>\n        );\n      default:\n        return null;\n    }\n  }\n\n  private sourceLink() {\n    return (\n      <Menu.Item\n        as=\"a\"\n        href=\"https://github.com/PeWu/topola-viewer\"\n        target=\"_blank\"\n      >\n        <FormattedMessage id=\"menu.github\" defaultMessage=\"Source on GitHub\" />\n      </Menu.Item>\n    );\n  }\n\n  private poweredByLink() {\n    return (\n      <Menu.Item\n        as=\"a\"\n        href=\"https://pewu.github.com/topola-viewer\"\n        target=\"_blank\"\n      >\n        <FormattedMessage\n          id=\"menu.powered_by\"\n          defaultMessage=\"Powered by Topola\"\n        />\n      </Menu.Item>\n    );\n  }\n\n  render() {\n    return (\n      <Menu attached=\"top\" inverted color=\"blue\" size=\"large\">\n        {this.fileMenus()}\n        {this.chartMenus()}\n        <Menu.Menu position=\"right\">\n          {this.wikiTreeLoginMenu()}\n          {this.props.standalone ? this.sourceLink() : this.poweredByLink()}\n        </Menu.Menu>\n        {this.loadFromUrlModal()}\n      </Menu>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from './analytics';\nimport {Chart, ChartType} from './chart';\nimport {Details} from './details';\nimport {FormattedMessage} from 'react-intl';\nimport {getSelection, loadFromUrl, loadGedcom} from './load_data';\nimport {getSoftware, TopolaData} from './gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {intlShape} from 'react-intl';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Responsive} from 'semantic-ui-react';\nimport {loadWikiTree} from './wikitree';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './top_bar';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\n/** Interface encapsulating functions specific for a data source. */\ninterface DataSource {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(args: Arguments, state: State): boolean;\n  /** Loads data from the data source. */\n  loadData(args: Arguments): Promise<TopolaData>;\n}\n\n/** Files opened from the local computer. */\nclass UploadedDataSource implements DataSource {\n  isNewData(args: Arguments, state: State): boolean {\n    return (\n      args.hash !== state.hash ||\n      !!(args.gedcom && !state.loading && !state.data)\n    );\n  }\n\n  async loadData(args: Arguments): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(args.hash!, args.gedcom, args.images);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (args.images && args.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nclass GedcomUrlDataSource implements DataSource {\n  isNewData(args: Arguments, state: State): boolean {\n    return args.url !== state.url;\n  }\n\n  async loadData(args: Arguments): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(args.url!, args.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n\n/** Loading data from the WikiTree API. */\nclass WikiTreeDataSource implements DataSource {\n  isNewData(args: Arguments, state: State): boolean {\n    // WikiTree is always a single data source.\n    return false;\n  }\n\n  async loadData(args: Arguments): Promise<TopolaData> {\n    try {\n      const data = await loadWikiTree(args.indi!, args.authcode);\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n\n/** Supported data sources. */\nenum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n}\n\n/** Mapping from data source identifier to data source handler functions. */\nconst DATA_SOURCES = new Map([\n  [DataSourceEnum.UPLOADED, new UploadedDataSource()],\n  [DataSourceEnum.GEDCOM_URL, new GedcomUrlDataSource()],\n  [DataSourceEnum.WIKITREE, new WikiTreeDataSource()],\n]);\n\n/** Arguments passed to the application, primarily through URL parameters. */\ninterface Arguments {\n  showSidePanel: boolean;\n  embedded: boolean;\n  url?: string;\n  indi?: string;\n  generation?: number;\n  hash?: string;\n  handleCors: boolean;\n  standalone: boolean;\n  source?: DataSourceEnum;\n  authcode?: string;\n  chartType: ChartType;\n  gedcom?: string;\n  images?: Map<string, string>;\n  enableZoom: boolean;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const parsedGen = Number(getParam('gen'));\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n  const hash = getParam('file');\n  const url = getParam('url');\n  const source =\n    getParam('source') === 'wikitree'\n      ? DataSourceEnum.WIKITREE\n      : hash\n      ? DataSourceEnum.UPLOADED\n      : url\n      ? DataSourceEnum.GEDCOM_URL\n      : undefined;\n  return {\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    embedded: getParam('embedded') === 'true', // False by default.\n    url,\n    indi: getParam('indi'),\n    generation: !isNaN(parsedGen) ? parsedGen : undefined,\n    hash,\n    handleCors: getParam('handleCors') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false', // True by default.\n    source,\n    authcode: getParam('?authcode'),\n\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    gedcom: location.state && location.state.data,\n    images: location.state && location.state.images,\n    enableZoom: getParam('enableZoom') === 'true', // False by default.\n  };\n}\n\n/** Returs true if the changes object has values that are different than those in state. */\nfunction hasUpdatedValues<T>(state: T, changes: Partial<T> | undefined) {\n  if (!changes) {\n    return false;\n  }\n  return Object.entries(changes).some(\n    ([key, value]) => value !== undefined && state[key] !== value,\n  );\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if data is currently being loaded. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  url?: string;\n  /** Whether the side panel is shown. */\n  showSidePanel?: boolean;\n  /** Whether the app is in embedded mode, i.e. embedded in an iframe. */\n  embedded: boolean;\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  standalone: boolean;\n  /** Type of displayed chart. */\n  chartType: ChartType;\n  /** Whether to show the error popup. */\n  showErrorPopup: boolean;\n  /** Source of the data. */\n  source?: DataSourceEnum;\n  loadingMore?: boolean;\n  /** Whether the zoom functionality is enabled. */\n  enableZoom: boolean;\n}\n\nexport class App extends React.Component<RouteComponentProps, {}> {\n  state: State = {\n    loading: false,\n    embedded: false,\n    standalone: true,\n    chartType: ChartType.Hourglass,\n    showErrorPopup: false,\n    enableZoom: false,\n  };\n  chartRef: Chart | null = null;\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  /** Sets the state with a new individual selection and chart type. */\n  private updateDisplay(\n    selection: IndiInfo,\n    otherStateChanges?: Partial<State>,\n  ) {\n    if (\n      !this.state.selection ||\n      this.state.selection.id !== selection.id ||\n      this.state.selection!.generation !== selection.generation ||\n      hasUpdatedValues(this.state, otherStateChanges)\n    ) {\n      this.setState(\n        Object.assign({}, this.state, {selection}, otherStateChanges),\n      );\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  private setError(error: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        error: error,\n        loading: false,\n      }),\n    );\n  }\n\n  private async onMessage(message: EmbeddedMessage) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            selection: getSelection(data.chartData),\n            error: undefined,\n            loading: false,\n          }),\n        );\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        this.setError(error.message);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  async componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      return;\n    }\n\n    const args = getArguments(this.props.location);\n\n    if (args.embedded && !this.state.embedded) {\n      this.setState(\n        Object.assign({}, this.state, {\n          embedded: true,\n          standalone: false,\n          showSidePanel: args.showSidePanel,\n        }),\n      );\n      // Notify the parent window that we are ready.\n      window.parent.postMessage('ready', '*');\n      window.addEventListener('message', (data) => this.onMessage(data.data));\n    }\n    if (args.embedded) {\n      // If the app is embedded, do not run the normal loading code.\n      return;\n    }\n\n    const dataSource = DATA_SOURCES.get(args.source!);\n\n    if (!dataSource) {\n      this.props.history.replace({pathname: '/'});\n    } else if (\n      (!this.state.loading && !this.state.data && !this.state.error) ||\n      args.source !== this.state.source ||\n      dataSource.isNewData(args, this.state)\n    ) {\n      // Set loading state.\n      this.setState(\n        Object.assign({}, this.state, {\n          data: undefined,\n          selection: undefined,\n          hash: args.hash,\n          error: undefined,\n          loading: true,\n          url: args.url,\n          standalone: args.standalone,\n          chartType: args.chartType,\n          source: args.source,\n          enableZoom: args.enableZoom,\n        }),\n      );\n      try {\n        const data = await dataSource.loadData(args);\n\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            hash: args.hash,\n            selection: getSelection(data.chartData, args.indi, args.generation),\n            error: undefined,\n            loading: false,\n            url: args.url,\n            showSidePanel: args.showSidePanel,\n            standalone: args.standalone,\n            chartType: args.chartType,\n            source: args.source,\n            enableZoom: args.enableZoom,\n          }),\n        );\n      } catch (error) {\n        this.setError(error.message);\n      }\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data.chartData,\n        args.indi,\n        args.generation,\n      );\n      const loadMoreFromWikitree =\n        args.source === DataSourceEnum.WIKITREE &&\n        (!this.state.selection || this.state.selection.id !== selection.id);\n      this.updateDisplay(selection, {\n        chartType: args.chartType,\n        loadingMore: loadMoreFromWikitree || undefined,\n      });\n      if (loadMoreFromWikitree) {\n        const data = await loadWikiTree(args.indi!);\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            hash: args.hash,\n            selection: getSelection(data.chartData, args.indi, args.generation),\n            error: undefined,\n            loading: false,\n            url: args.url,\n            showSidePanel: args.showSidePanel,\n            standalone: args.standalone,\n            chartType: args.chartType,\n            source: args.source,\n            enableZoom: args.enableZoom,\n            loadingMore: false,\n          }),\n        );\n      }\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    analyticsEvent('selection_changed');\n    if (this.state.embedded) {\n      // In embedded mode the URL doesn't change.\n      this.updateDisplay(selection);\n      return;\n    }\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private onPrint = () => {\n    analyticsEvent('print');\n    this.chartRef && this.chartRef.print();\n  };\n\n  private showErrorPopup(message: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: true,\n        error: message,\n      }),\n    );\n  }\n\n  private onDownloadPdf = async () => {\n    analyticsEvent('download_pdf');\n    try {\n      this.chartRef && (await this.chartRef.downloadPdf());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadPng = async () => {\n    analyticsEvent('download_png');\n    try {\n      this.chartRef && (await this.chartRef.downloadPng());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadSvg = () => {\n    analyticsEvent('download_svg');\n    this.chartRef && this.chartRef.downloadSvg();\n  };\n\n  onDismissErrorPopup = () => {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: false,\n      }),\n    );\n  };\n\n  private renderMainArea = () => {\n    if (this.state.data && this.state.selection) {\n      return (\n        <div id=\"content\">\n          <ErrorPopup\n            open={this.state.showErrorPopup}\n            message={this.state.error}\n            onDismiss={this.onDismissErrorPopup}\n          />\n          {this.state.loadingMore ? (\n            <Loader active size=\"small\" className=\"loading-more\" />\n          ) : null}\n          <Chart\n            data={this.state.data.chartData}\n            selection={this.state.selection}\n            chartType={this.state.chartType}\n            onSelection={this.onSelection}\n            ref={(ref) => (this.chartRef = ref)}\n            enableZoom={this.state.enableZoom}\n          />\n          {this.state.showSidePanel ? (\n            <Responsive minWidth={768} id=\"sidePanel\">\n              <Details\n                gedcom={this.state.data.gedcom}\n                indi={this.state.selection.id}\n              />\n            </Responsive>\n          ) : null}\n        </div>\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              gedcom={this.state.data && this.state.data.gedcom}\n              allowAllRelativesChart={\n                this.state.source !== DataSourceEnum.WIKITREE\n              }\n              showingChart={\n                !!(\n                  this.props.history.location.pathname === '/view' &&\n                  this.state.data &&\n                  this.state.selection\n                )\n              }\n              standalone={this.state.standalone}\n              eventHandlers={{\n                onSelection: this.onSelection,\n                onPrint: this.onPrint,\n                onDownloadPdf: this.onDownloadPdf,\n                onDownloadPng: this.onDownloadPng,\n                onDownloadSvg: this.onDownloadSvg,\n              }}\n              showWikiTreeLogin={this.state.source === DataSourceEnum.WIKITREE}\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}