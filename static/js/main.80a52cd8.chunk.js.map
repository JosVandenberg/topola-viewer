{"version":3,"sources":["chart.tsx","gedcom_util.ts","chart_view.tsx","intro.tsx","top_bar.tsx","index.tsx"],"names":["zoomed","parent","d3","node","parentElement","scrollLeft","transform","x","scrollTop","y","scrolled","clientWidth","clientHeight","call","translateTo","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","chart","inherits","createClass","key","value","_this2","undefined","initialRender","innerHTML","createChart","json","props","data","chartType","HourglassChart","renderer","DetailedRenderer","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","chartInfo","render","startIndi","selection","id","baseGeneration","generation","svg","on","scaleExtent","translateExtent","size","dx","origin","dy","offsetX","offsetY","svgTransition","transition","delay","duration","attr","tween","i","t","renderChart","prevProps","react","React","sortFamilyChildren","fam","gedcom","children","newChildren","sort","idToIndiMap","Map","indis","forEach","indi","indiId1","indiId2","a","b","idComparison","indi1","indi2","birth1","birth","birth2","date1","date","dateRange","from","date2","year","month","day","birthDatesComparator","assign","filterImage","imageUrl","startsWith","newIndi","convertGedcom","gedcomToJson","fams","Error","newIndis","map","filterImages","newFams","sortChildren","ErrorMessage","Message","negative","className","Header","message","getSelection","ChartView","_React$Component","state","loading","location","search","queryString","gen","String","history","push","url","options","cachedData","sessionStorage","getItem","JSON","parse","setState","loadedUrl","error","hash","urlToFetch","handleCors","axios","get","then","response","setGedcom","catch","e","input","md5","serializedData","stringify","setItem","componentDidUpdate","getParam","name","parsedGen","Number","isNaN","replace","pathname","loadFromUrl","chart_Chart","Loader","active","GedcomLink","Link","to","text","TopBar","loadUrlDialogOpen","inputRef","event","files","target","reader","FileReader","onload","evt","result","file","readAsText","_this3","focus","_this4","loadFromUrlModal","Modal","open","onClose","handleClose","centered","Icon","index_es","defaultMessage","txt","Content","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","ref","values","link","href","Actions","Button","secondary","onClick","primary","Menu","attached","inverted","color","Item","as","handleLoadFromUrl","type","accept","handleUpload","htmlFor","position","addLocaleData","toConsumableArray","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","split","ReactDOM","locale","HashRouter","Route","component","Switch","exact","path","Card","document","querySelector"],"mappings":"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","file":"static/js/main.80a52cd8.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport * as React from 'react';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n} from 'topola';\n\n/** Called when the view is dragged with the mouse. */\nfunction zoomed() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement!;\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  d3.select(parent).call(d3.zoom().translateTo, x, y);\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: HourglassChart,\n        renderer: DetailedRenderer,\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n      });\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chart');\n    const parent = (svg.node() as HTMLElement).parentElement as Element;\n\n    d3.select(parent)\n      .on('scroll', scrolled)\n      .call(\n        d3\n          .zoom()\n          .scaleExtent([1, 1])\n          .translateExtent([[0, 0], chartInfo.size])\n          .on('zoom', zoomed),\n      );\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0];\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1];\n    const offsetX = d3.max([0, (parent.clientWidth - chartInfo.size[0]) / 2]);\n    const offsetY = d3.max([0, (parent.clientHeight - chartInfo.size[1]) / 2]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0])\n      .attr('height', chartInfo.size[1]);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    this.renderChart({initialRender: this.props.data !== prevProps.data});\n  }\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <svg id=\"chart\" />\n      </div>\n    );\n  }\n}\n","import {gedcomToJson, JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const idToIndiMap = new Map<string, JsonIndi>();\n  gedcom.indis.forEach((indi) => {\n    idToIndiMap[indi.id] = indi;\n  });\n\n  return (indiId1: string, indiId2: string) => {\n    const idComparison = strcmp(indiId1, indiId2);\n    const indi1: JsonIndi = idToIndiMap[indiId1];\n    const indi2: JsonIndi = idToIndiMap[indiId2];\n    const birth1 = indi1 && indi1.birth;\n    const birth2 = indi2 && indi2.birth;\n    const date1 =\n      birth1 && (birth1.date || (birth1.dateRange && birth1.dateRange.from));\n    const date2 =\n      birth2 && (birth2.date || (birth2.dateRange && birth2.dateRange.from));\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n      return idComparison;\n    }\n    if (date1.year !== date2.year) {\n      return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n      return idComparison;\n    }\n    if (date1.month !== date2.month) {\n      return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n      return date1.month - date2.month;\n    }\n    return idComparison;\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(fam: JsonFam, gedcom: JsonGedcomData): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(birthDatesComparator(gedcom));\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, gedcom));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi): JsonIndi {\n  if (!indi.imageUrl || indi.imageUrl.startsWith('http')) {\n    return indi;\n  }\n  const newIndi = Object.assign({}, indi);\n  delete newIndi.imageUrl;\n  return newIndi;\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(gedcom: JsonGedcomData): JsonGedcomData {\n  const newIndis = gedcom.indis.map(filterImage);\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links.\n */\nexport function convertGedcom(gedcom: string): JsonGedcomData {\n  const json = gedcomToJson(gedcom);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n  return filterImages(sortChildren(json));\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport axios from 'axios';\nimport md5 from 'md5';\nimport {Chart} from './chart';\nimport {convertGedcom} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Loader, Message} from 'semantic-ui-react';\nimport {RouteComponentProps} from 'react-router-dom';\n\n/** Shows an error message. */\nexport function ErrorMessage(props: {message: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>Failed to load file</Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nfunction getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  return {\n    id: indi || data.indis[0].id,\n    generation: generation || 0,\n  };\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: JsonGedcomData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if currently loading. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  loadedUrl?: string;\n}\n\n/** The main area of the application dedicated for rendering the family chart. */\nexport class ChartView extends React.Component<RouteComponentProps, State> {\n  state: State = {loading: false};\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  onSelection = (selection: IndiInfo) => {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  /** Loads a GEDCOM file from the given URL. */\n  loadFromUrl(\n    url: string,\n    options: {\n      handleCors?: boolean;\n      indi?: string;\n      generation?: number;\n    } = {},\n  ) {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      const data = JSON.parse(cachedData);\n      this.setState(\n        Object.assign({}, this.state, {\n          data,\n          selection: getSelection(data, options.indi, options.generation),\n          loadedUrl: url,\n          loading: false,\n          error: undefined,\n          hash: undefined,\n        }),\n      );\n      return;\n    }\n\n    this.setState(\n      Object.assign({}, this.state, {\n        loading: true,\n        loadedUrl: url,\n        data: undefined,\n        error: undefined,\n      }),\n    );\n\n    const urlToFetch = options.handleCors\n      ? 'https://cors-anywhere.herokuapp.com/' + url\n      : url;\n\n    axios\n      .get(urlToFetch)\n      .then((response) =>\n        this.setGedcom({\n          gedcom: response.data,\n          url,\n          indi: options.indi,\n          generation: options.generation,\n        }),\n      )\n      .catch((e: Error) =>\n        this.setState(\n          Object.assign({}, this.state, {error: e.message, loading: false}),\n        ),\n      );\n  }\n\n  /**\n   * Converts GEDCOM contents and sets the data in the state.\n   * In case of an error reading the file, sets an error.\n   */\n  setGedcom(input: {\n    gedcom: string;\n    url?: string;\n    indi?: string;\n    generation?: number;\n  }) {\n    const hash = md5(input.gedcom);\n    try {\n      const data = convertGedcom(input.gedcom);\n      const serializedData = JSON.stringify(data);\n      sessionStorage.setItem(input.url || hash, serializedData);\n      this.setState(\n        Object.assign({}, this.state, {\n          data,\n          selection: getSelection(data, input.indi, input.generation),\n          hash,\n          loading: false,\n          loadedUrl: input.url,\n          error: undefined,\n        }),\n      );\n    } catch (e) {\n      this.setState(\n        Object.assign({}, this.state, {\n          data: undefined,\n          selection: undefined,\n          hash,\n          loading: false,\n          error: 'Failed to read GEDCOM file',\n          loadedUrl: input.url,\n        }),\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const gedcom = this.props.location.state && this.props.location.state.data;\n    const search = queryString.parse(this.props.location.search);\n    const getParam = (name: string) => {\n      const value = search[name];\n      return typeof value === 'string' ? value : undefined;\n    };\n    const url = getParam('url');\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const generation = !isNaN(parsedGen) ? parsedGen : undefined;\n    const hash = getParam('file');\n\n    if (hash && hash !== this.state.hash) {\n      // New \"load from file\" data.\n      if (gedcom) {\n        this.setGedcom({gedcom, indi, generation});\n      } else {\n        // Data is not present. Try loading from cache.\n        const cachedData = sessionStorage.getItem(hash);\n        if (cachedData) {\n          const data = JSON.parse(cachedData);\n          this.setState(\n            Object.assign({}, this.state, {\n              data,\n              hash,\n              selection: getSelection(data, indi, generation),\n              error: undefined,\n              loading: false,\n              loadedUrl: undefined,\n            }),\n          );\n        } else {\n          // No data available. Redirect to main page.\n          this.props.history.replace({pathname: '/'});\n        }\n      }\n    } else if (!this.state.loading && url && this.state.loadedUrl !== url) {\n      // New URL to load data from.\n      this.loadFromUrl(url, {\n        indi,\n        generation,\n        handleCors: url.startsWith('http'),\n      });\n    } else if (!url && !gedcom && hash !== this.state.hash) {\n      this.props.history.replace({pathname: '/'});\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(this.state.data, indi, generation);\n      if (\n        this.state.selection.id !== selection.id ||\n        this.state.selection.generation !== selection.generation\n      ) {\n        this.setState(\n          Object.assign({}, this.state, {\n            selection,\n          }),\n        );\n      }\n    }\n  }\n\n  render() {\n    if (this.state.data && this.state.selection) {\n      return (\n        <Chart\n          data={this.state.data}\n          onSelection={this.onSelection}\n          selection={this.state.selection}\n        />\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Card} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <Card className=\"intro\">\n      <Card.Content>\n        <Card.Header>\n          <FormattedMessage\n            id=\"intro.title\"\n            defaultMessage=\"Topola Genealogy Viewer\"\n          />\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <p>\n          <FormattedMessage\n            id=\"intro.description\"\n            defaultMessage={\n              'Topola Genealogy is a genealogy tree viewer that lets you' +\n              ' browse the structure of the family.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.instructions\"\n            defaultMessage={\n              'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n              ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n              ' existing genealogy programs and web sites.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.examples\"\n            defaultMessage={\n              'Here are some examples from the web that you can view:'\n            }\n          />\n        </p>\n        <ul>\n          <li>\n            <GedcomLink\n              url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n              text=\"Karol Wojtyła\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n              GENPOL\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n              text=\"Shakespeare\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n              webtreeprint.com\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n              text=\"Harry Potter\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://famousfamilytrees.blogspot.com/\">\n              Famous Family Trees\n            </a>\n            )\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n          </b>\n          :\n          <FormattedMessage\n            id=\"intro.privacy_note\"\n            defaultMessage={\n              'When using the \"load from file\" option, this site does not' +\n              ' send your data anywhere and files loaded from disk do not' +\n              ' leave your computer. When using \"load from URL\", data is' +\n              ' passed through the {link} service to deal with an issue with' +\n              ' cross-site file loading in the browser (CORS).'\n            }\n            values={{\n              link: (\n                <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n              ),\n            }}\n          />\n        </p>\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n} from 'semantic-ui-react';\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n}\n\nexport class TopBar extends React.Component<RouteComponentProps, State> {\n  state: State = {loadUrlDialogOpen: false};\n  inputRef?: Input;\n\n  /** Handles the \"Upload file\" button. */\n  handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      const data = (evt.target as FileReader).result;\n      const hash = md5(data as string);\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({file: hash}),\n        state: {data},\n      });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  handleLoadFromUrl() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.inputRef!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  render() {\n    const loadFromUrlModal = (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={(ref) => (this.inputRef = ref!)}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n\n    return (\n      <Menu attached=\"top\" inverted color=\"blue\" size=\"large\">\n        <Link to=\"/\">\n          <Menu.Item>\n            <b>Topola Genealogy</b>\n          </Menu.Item>\n        </Link>\n        <Menu.Item as=\"a\" onClick={() => this.handleLoadFromUrl()}>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Menu.Item>\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged\"\n          id=\"fileInput\"\n          onChange={(e) => this.handleUpload(e)}\n        />\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">\n            <Icon name=\"folder open\" />\n            <FormattedMessage\n              id=\"menu.load_from_file\"\n              defaultMessage=\"Load from file\"\n            />\n          </Menu.Item>\n        </label>\n        <Menu.Item\n          as=\"a\"\n          href=\"https://github.com/PeWu/topola-viewer\"\n          position=\"right\"\n        >\n          <FormattedMessage\n            id=\"menu.github\"\n            defaultMessage=\"Source on GitHub\"\n          />\n        </Menu.Item>\n        {loadFromUrlModal}\n      </Menu>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {ChartView} from './chart_view';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {Intro} from './intro';\nimport {TopBar} from './top_bar';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages[language]}>\n    <Router>\n      <div className=\"root\">\n        <Route component={TopBar} />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" component={ChartView} />\n        </Switch>\n      </div>\n    </Router>\n  </IntlProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}