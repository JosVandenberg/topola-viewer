{"version":3,"sources":["chart.tsx","gedcom_util.ts","chart_view.tsx","intro.tsx","top_bar.tsx","index.tsx"],"names":["zoomed","parent","d3","node","parentElement","scrollLeft","transform","x","scrollTop","y","scrolled","clientWidth","clientHeight","call","translateTo","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","chart","inherits","createClass","key","value","_this2","undefined","initialRender","innerHTML","createChart","json","props","data","chartType","HourglassChart","renderer","DetailedRenderer","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","chartInfo","render","startIndi","selection","id","baseGeneration","generation","svg","on","scaleExtent","translateExtent","size","dx","origin","dy","offsetX","offsetY","svgTransition","transition","delay","duration","attr","tween","i","t","renderChart","prevProps","react","document","getElementById","cloneNode","removeAttribute","outerHTML","_this3","printWindow","createElement","style","position","top","left","onload","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","hiddenElement","href","URL","createObjectURL","Blob","type","target","download","click","canvas","width","getBBox","height","ctx","getContext","oldFill","fillStyle","fillRect","canvg","ignoreDimensions","ignoreClear","scaleWidth","scaleHeight","toBlob","blob","React","sortFamilyChildren","fam","gedcom","children","newChildren","sort","idToIndiMap","Map","indis","forEach","indi","indiId1","indiId2","a","b","idComparison","indi1","indi2","birth1","birth","birth2","date1","date","dateRange","from","date2","year","month","day","birthDatesComparator","assign","filterImage","imageUrl","startsWith","newIndi","convertGedcom","gedcomToJson","fams","Error","newIndis","map","filterImages","newFams","sortChildren","contextTypes","intlShape","ErrorMessage","Message","negative","className","Header","message","getSelection","ChartView","_React$Component","state","loading","chartRef","location","search","queryString","gen","String","history","push","url","options","cachedData","sessionStorage","getItem","JSON","parse","setState","loadedUrl","error","hash","urlToFetch","handleCors","window","fetch","then","response","status","Promise","reject","statusText","text","setGedcom","catch","e","input","md5","serializedData","stringify","setItem","componentDidUpdate","getParam","name","parsedGen","Number","isNaN","replace","pathname","loadFromUrl","chart_Chart","ref","Loader","active","downloadSvg","downloadPng","GedcomLink","Link","to","TopBar","loadUrlDialogOpen","inputRef","event","files","reader","FileReader","evt","result","file","readAsText","_this4","loadFromUrlModal","Modal","onClose","handleClose","centered","Icon","index_es","defaultMessage","txt","Content","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","values","link","Actions","Button","secondary","onClick","primary","Menu","attached","inverted","color","Item","as","handleLoadFromUrl","accept","handleUpload","htmlFor","onPrint","Dropdown","trigger","onDownloadPng","onDownloadSvg","addLocaleData","toConsumableArray","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","split","browser","detect","chartViewRef","ReactDOM","querySelector","HashRouter","Route","component","top_bar_TopBar","Switch","exact","path","Card","chart_view_ChartView"],"mappings":"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","file":"static/js/main.9f678c18.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport * as React from 'react';\nimport canvg from 'canvg';\nimport {intlShape} from 'react-intl';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n} from 'topola';\n\n/** Called when the view is dragged with the mouse. */\nfunction zoomed() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement!;\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  d3.select(parent).call(d3.zoom().translateTo, x, y);\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: HourglassChart,\n        renderer: DetailedRenderer,\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chart');\n    const parent = (svg.node() as HTMLElement).parentElement as Element;\n\n    d3.select(parent)\n      .on('scroll', scrolled)\n      .call(\n        d3\n          .zoom()\n          .scaleExtent([1, 1])\n          .translateExtent([[0, 0], chartInfo.size])\n          .on('zoom', zoomed),\n      );\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0];\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1];\n    const offsetX = d3.max([0, (parent.clientWidth - chartInfo.size[0]) / 2]);\n    const offsetY = d3.max([0, (parent.clientHeight - chartInfo.size[1]) / 2]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0])\n      .attr('height', chartInfo.size[1]);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    this.renderChart({initialRender: this.props.data !== prevProps.data});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <svg id=\"chart\" />\n      </div>\n    );\n  }\n\n  private getSvgContents() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    return svg.outerHTML;\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  downloadSvg() {\n    const hiddenElement = document.createElement('a');\n    hiddenElement.href = URL.createObjectURL(\n      new Blob([this.getSvgContents()], {type: 'image/svg+xml'}),\n    );\n    hiddenElement.target = '_blank';\n    hiddenElement.download = 'topola.svg';\n    hiddenElement.click();\n  }\n\n  downloadPng() {\n    const canvas = document.createElement('canvas');\n\n    // Scale image for better quality.\n    const svg = (document.getElementById('chart') as unknown) as SVGSVGElement;\n    canvas.width = svg.getBBox().width * 2;\n    canvas.height = svg.getBBox().height * 2;\n\n    // Fill canvas with white background.\n    const ctx = canvas.getContext('2d')!;\n    const oldFill = ctx.fillStyle;\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = oldFill;\n\n    canvg(canvas, this.getSvgContents(), {\n      ignoreDimensions: true,\n      ignoreClear: true,\n      scaleWidth: canvas.width,\n      scaleHeight: canvas.height,\n    });\n    const onBlob = (blob: Blob | null) => {\n      const hiddenElement = document.createElement('a');\n      hiddenElement.href = URL.createObjectURL(blob);\n      hiddenElement.target = '_blank';\n      hiddenElement.download = 'topola.png';\n      hiddenElement.click();\n    };\n    canvas.toBlob(onBlob, 'image/png');\n  }\n}\n","import {gedcomToJson, JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const idToIndiMap = new Map<string, JsonIndi>();\n  gedcom.indis.forEach((indi) => {\n    idToIndiMap[indi.id] = indi;\n  });\n\n  return (indiId1: string, indiId2: string) => {\n    const idComparison = strcmp(indiId1, indiId2);\n    const indi1: JsonIndi = idToIndiMap[indiId1];\n    const indi2: JsonIndi = idToIndiMap[indiId2];\n    const birth1 = indi1 && indi1.birth;\n    const birth2 = indi2 && indi2.birth;\n    const date1 =\n      birth1 && (birth1.date || (birth1.dateRange && birth1.dateRange.from));\n    const date2 =\n      birth2 && (birth2.date || (birth2.dateRange && birth2.dateRange.from));\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n      return idComparison;\n    }\n    if (date1.year !== date2.year) {\n      return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n      return idComparison;\n    }\n    if (date1.month !== date2.month) {\n      return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n      return date1.month - date2.month;\n    }\n    return idComparison;\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(fam: JsonFam, gedcom: JsonGedcomData): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(birthDatesComparator(gedcom));\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, gedcom));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi): JsonIndi {\n  if (!indi.imageUrl || indi.imageUrl.startsWith('http')) {\n    return indi;\n  }\n  const newIndi = Object.assign({}, indi);\n  delete newIndi.imageUrl;\n  return newIndi;\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(gedcom: JsonGedcomData): JsonGedcomData {\n  const newIndis = gedcom.indis.map(filterImage);\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links.\n */\nexport function convertGedcom(gedcom: string): JsonGedcomData {\n  const json = gedcomToJson(gedcom);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n  return filterImages(sortChildren(json));\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {Chart} from './chart';\nimport {convertGedcom} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Loader, Message} from 'semantic-ui-react';\nimport {RouteComponentProps} from 'react-router-dom';\n\n/** Shows an error message. */\nexport function ErrorMessage(props: {message: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>Failed to load file</Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nfunction getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  return {\n    id: indi || data.indis[0].id,\n    generation: generation || 0,\n  };\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: JsonGedcomData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if currently loading. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  loadedUrl?: string;\n}\n\n/** The main area of the application dedicated for rendering the family chart. */\nexport class ChartView extends React.Component<RouteComponentProps, State> {\n  state: State = {loading: false};\n  chartRef: Chart | null = null;\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  onSelection = (selection: IndiInfo) => {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  /** Loads a GEDCOM file from the given URL. */\n  loadFromUrl(\n    url: string,\n    options: {\n      handleCors?: boolean;\n      indi?: string;\n      generation?: number;\n    } = {},\n  ) {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      const data = JSON.parse(cachedData);\n      this.setState(\n        Object.assign({}, this.state, {\n          data,\n          selection: getSelection(data, options.indi, options.generation),\n          loadedUrl: url,\n          loading: false,\n          error: undefined,\n          hash: undefined,\n        }),\n      );\n      return;\n    }\n\n    this.setState(\n      Object.assign({}, this.state, {\n        loading: true,\n        loadedUrl: url,\n        data: undefined,\n        error: undefined,\n      }),\n    );\n\n    const urlToFetch = options.handleCors\n      ? 'https://cors-anywhere.herokuapp.com/' + url\n      : url;\n\n    window\n      .fetch(urlToFetch)\n      .then((response) => {\n        if (response.status !== 200) {\n          return Promise.reject(new Error(response.statusText));\n        }\n        return response.text();\n      })\n      .then((data) =>\n        this.setGedcom({\n          gedcom: data,\n          url,\n          indi: options.indi,\n          generation: options.generation,\n        }),\n      )\n      .catch((e: Error) =>\n        this.setState(\n          Object.assign({}, this.state, {error: e.message, loading: false}),\n        ),\n      );\n  }\n\n  /**\n   * Converts GEDCOM contents and sets the data in the state.\n   * In case of an error reading the file, sets an error.\n   */\n  setGedcom(input: {\n    gedcom: string;\n    url?: string;\n    indi?: string;\n    generation?: number;\n  }) {\n    const hash = md5(input.gedcom);\n    try {\n      const data = convertGedcom(input.gedcom);\n      const serializedData = JSON.stringify(data);\n      sessionStorage.setItem(input.url || hash, serializedData);\n      this.setState(\n        Object.assign({}, this.state, {\n          data,\n          selection: getSelection(data, input.indi, input.generation),\n          hash,\n          loading: false,\n          loadedUrl: input.url,\n          error: undefined,\n        }),\n      );\n    } catch (e) {\n      this.setState(\n        Object.assign({}, this.state, {\n          data: undefined,\n          selection: undefined,\n          hash,\n          loading: false,\n          error: 'Failed to read GEDCOM file',\n          loadedUrl: input.url,\n        }),\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const gedcom = this.props.location.state && this.props.location.state.data;\n    const search = queryString.parse(this.props.location.search);\n    const getParam = (name: string) => {\n      const value = search[name];\n      return typeof value === 'string' ? value : undefined;\n    };\n    const url = getParam('url');\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const generation = !isNaN(parsedGen) ? parsedGen : undefined;\n    const hash = getParam('file');\n    const handleCors = getParam('handleCors') !== 'false';\n\n    if (hash && hash !== this.state.hash) {\n      // New \"load from file\" data.\n      if (gedcom) {\n        this.setGedcom({gedcom, indi, generation});\n      } else {\n        // Data is not present. Try loading from cache.\n        const cachedData = sessionStorage.getItem(hash);\n        if (cachedData) {\n          const data = JSON.parse(cachedData);\n          this.setState(\n            Object.assign({}, this.state, {\n              data,\n              hash,\n              selection: getSelection(data, indi, generation),\n              error: undefined,\n              loading: false,\n              loadedUrl: undefined,\n            }),\n          );\n        } else {\n          // No data available. Redirect to main page.\n          this.props.history.replace({pathname: '/'});\n        }\n      }\n    } else if (!this.state.loading && url && this.state.loadedUrl !== url) {\n      // New URL to load data from.\n      this.loadFromUrl(url, {\n        indi,\n        generation,\n        handleCors: url.startsWith('http') && handleCors,\n      });\n    } else if (!url && !gedcom && hash !== this.state.hash) {\n      this.props.history.replace({pathname: '/'});\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(this.state.data, indi, generation);\n      if (\n        this.state.selection.id !== selection.id ||\n        this.state.selection.generation !== selection.generation\n      ) {\n        this.setState(\n          Object.assign({}, this.state, {\n            selection,\n          }),\n        );\n      }\n    }\n  }\n\n  render() {\n    if (this.state.data && this.state.selection) {\n      return (\n        <Chart\n          data={this.state.data}\n          onSelection={this.onSelection}\n          selection={this.state.selection}\n          ref={(ref) => (this.chartRef = ref)}\n        />\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    if (this.chartRef) {\n      this.chartRef.print();\n    }\n  }\n\n  downloadSvg() {\n    if (this.chartRef) {\n      this.chartRef.downloadSvg();\n    }\n  }\n\n  downloadPng() {\n    if (this.chartRef) {\n      this.chartRef.downloadPng();\n    }\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Card} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <Card className=\"intro\">\n      <Card.Content>\n        <Card.Header>\n          <FormattedMessage\n            id=\"intro.title\"\n            defaultMessage=\"Topola Genealogy Viewer\"\n          />\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <p>\n          <FormattedMessage\n            id=\"intro.description\"\n            defaultMessage={\n              'Topola Genealogy is a genealogy tree viewer that lets you' +\n              ' browse the structure of the family.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.instructions\"\n            defaultMessage={\n              'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n              ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n              ' existing genealogy programs and web sites.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.examples\"\n            defaultMessage={\n              'Here are some examples from the web that you can view:'\n            }\n          />\n        </p>\n        <ul>\n          <li>\n            <GedcomLink\n              url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n              text=\"Karol Wojtyła\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n              GENPOL\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n              text=\"Shakespeare\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n              webtreeprint.com\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n              text=\"Harry Potter\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://famousfamilytrees.blogspot.com/\">\n              Famous Family Trees\n            </a>\n            )\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n          </b>\n          :\n          <FormattedMessage\n            id=\"intro.privacy_note\"\n            defaultMessage={\n              'When using the \"load from file\" option, this site does not' +\n              ' send your data anywhere and files loaded from disk do not' +\n              ' leave your computer. When using \"load from URL\", data is' +\n              ' passed through the {link} service to deal with an issue with' +\n              ' cross-site file loading in the browser (CORS).'\n            }\n            values={{\n              link: (\n                <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n              ),\n            }}\n          />\n        </p>\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n  Dropdown,\n} from 'semantic-ui-react';\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n}\n\ninterface Props {\n  onPrint: () => void;\n  onDownloadSvg: () => void;\n  onDownloadPng: () => void;\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {loadUrlDialogOpen: false};\n  inputRef?: Input;\n\n  /** Handles the \"Upload file\" button. */\n  handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      const data = (evt.target as FileReader).result;\n      const hash = md5(data as string);\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({file: hash}),\n        state: {data},\n      });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  handleLoadFromUrl() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.inputRef!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  render() {\n    const loadFromUrlModal = (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={(ref) => (this.inputRef = ref!)}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n\n    return (\n      <Menu attached=\"top\" inverted color=\"blue\" size=\"large\">\n        <Link to=\"/\">\n          <Menu.Item>\n            <b>Topola Genealogy</b>\n          </Menu.Item>\n        </Link>\n        <Menu.Item as=\"a\" onClick={() => this.handleLoadFromUrl()}>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Menu.Item>\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged\"\n          id=\"fileInput\"\n          onChange={(e) => this.handleUpload(e)}\n        />\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">\n            <Icon name=\"folder open\" />\n            <FormattedMessage\n              id=\"menu.load_from_file\"\n              defaultMessage=\"Load from file\"\n            />\n          </Menu.Item>\n        </label>\n        <Menu.Item as=\"a\" onClick={() => this.props.onPrint()}>\n          <Icon name=\"print\" />\n          <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n        </Menu.Item>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"download\" />\n              <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => this.props.onDownloadPng()}>\n              <FormattedMessage id=\"menu.png_file\" defaultMessage=\"PNG file\" />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.props.onDownloadSvg()}>\n              <FormattedMessage id=\"menu.svg_file\" defaultMessage=\"SVG file\" />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <Menu.Item\n          as=\"a\"\n          href=\"https://github.com/PeWu/topola-viewer\"\n          position=\"right\"\n        >\n          <FormattedMessage\n            id=\"menu.github\"\n            defaultMessage=\"Source on GitHub\"\n          />\n        </Menu.Item>\n        {loadFromUrlModal}\n      </Menu>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {detect} from 'detect-browser';\nimport {ChartView} from './chart_view';\nimport {\n  HashRouter as Router,\n  Route,\n  RouteComponentProps,\n  Switch,\n} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {Intro} from './intro';\nimport {TopBar} from './top_bar';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nlet chartViewRef: ChartView | null = null;\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <div className=\"root\">\n          <Route\n            component={(props: RouteComponentProps) => (\n              <TopBar\n                {...props}\n                onPrint={() => chartViewRef && chartViewRef.print()}\n                onDownloadSvg={() => chartViewRef && chartViewRef.downloadSvg()}\n                onDownloadPng={() => chartViewRef && chartViewRef.downloadPng()}\n              />\n            )}\n          />\n          <Switch>\n            <Route exact path=\"/\" component={Intro} />\n            <Route\n              exact\n              path=\"/view\"\n              component={(props: RouteComponentProps) => (\n                <ChartView {...props} ref={(ref) => (chartViewRef = ref)} />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}