{"version":3,"sources":["analytics.ts","chart.tsx","gedcom_util.ts","date_util.ts","details.tsx","load_data.ts","intro.tsx","search_index.ts","search_util.tsx","top_bar.tsx","app.tsx","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","ChartType","zoomed","parent","d3","node","parentElement","scrollLeft","transform","x","scrollTop","y","scrolled","clientWidth","clientHeight","call","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","_callee6","image","href","response","dataUrl","regenerator_default","a","wrap","_context6","prev","next","baseVal","abrupt","fetch","sent","t0","console","warn","stop","inlineImages","_callee7","svg","images","_context7","Array","from","getElementsByTagName","all","map","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","chart","inherits","createClass","key","value","props","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","CircleRenderer","DetailedRenderer","_this2","undefined","initialRender","innerHTML","createChart","json","getChartType","renderer","getRendererType","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","chartInfo","render","startIndi","selection","id","baseGeneration","generation","on","scaleExtent","translateExtent","size","dx","origin","dy","offsetX","offsetY","svgTransition","transition","delay","duration","attr","tween","i","t","renderChart","prevProps","react","getElementById","cloneNode","removeAttribute","XMLSerializer","serializeToString","_getSvgContentsWithInlinedImages","asyncToGenerator","mark","_callee","_context","_this3","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","_downloadSvg","_callee2","contents","_context2","getSvgContentsWithInlinedImages","Blob","saveAs","_drawOnCanvas2","_callee3","_context3","t1","_downloadPng","_callee4","_context4","_downloadPdf","_callee5","doc","_context5","jsPDF","orientation","unit","format","addImage","save","React","contextTypes","intlShape","pointerToId","pointer","substring","prepareGedcom","entries","head","find","entry","tag","indis","fams","other","forEach","sortChildren","gedcom","comparator","idToIndiMap","Map","indi","indiId1","indiId2","b","idComparison","indi1","indi2","birth1","birth","birth2","date1","date","dateRange","date2","year","month","day","birthDatesComparator","newFams","fam","children","newChildren","sort","assign","sortFamilyChildren","filterImages","newIndis","imageUrl","fileName","match","has","newIndi","get","startsWith","filterImage","getSoftware","sour","tree","name","DATE_QUALIFIERS","formatDate","hasDay","hasMonth","hasYear","text","dateObject","Date","qualifier","toLowerCase","formatOptions","formatMessage","defaultMessage","Intl","DateTimeFormat","join","translateDate","gedcomDate","dateOrRange","getDate","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","translateTag","index_es","joinLines","lines","line","index","Linkify_default","properties","getData","subentry","last","push","noteDetails","nameDetails","className","split","filter","getDetails","tags","detailsFunction","flatMap","element","hasData","getOtherDetails","includes","toConsumableArray","note","dataDetails","Details","_React$Component","entriesWithData","dereferenced","dereference","place","eventDetails","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","Error","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadFromUrl","_x","_x2","_loadFromUrl","url","handleCors","cachedData","urlToFetch","getItem","parse","status","statusText","loadGedcom","_x3","_x4","_x5","_loadGedcom","hash","GedcomLink","Link","pathname","search","queryString","Intro","Card","Content","Header","values","link","compare","score","naturalSort","ref","LunrSearchIndex","lunr","field","add","normalizedName","input","toLocaleLowerCase","normalize","replace","query","s","slice","getNameLine","nameTag","eventEntry","dateEntry","getDescriptionLine","birthDate","deathDate","loadFileAsText","file","evt","readAsText","isImageFileName","lower","endsWith","EmbeddedMessageType","TopBar","state","loadUrlDialogOpen","searchResults","inputRef","searchRef","searchIndex","_handleUpload","event","files","filesArray","gedcomFile","imageMap","imageFileNames","event_value","md5","location","history","setState","results","title","description","displaySearchResult","eventHandlers","setValue","view","initializeSearchIndex","_this4","loadFromUrlModal","Modal","onClose","handleClose","centered","Icon","txt","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","Actions","Button","secondary","onClick","primary","chartMenus","showingChart","Menu","Item","as","onPrint","Dropdown","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","changeView","Search","onSearchChange","debounce","_","handleSearch","onResultSelect","handleResultSelect","noResultsMessage","selectFirstResult","fileMenus","standalone","handleLoadFromUrl","accept","multiple","handleUpload","htmlFor","sourceLink","attached","inverted","color","ErrorMessage","Message","negative","message","ErrorPopup","Portal","onDismiss","App","loading","embedded","showErrorPopup","chartRef","updateDisplay","gen","String","downloadPdf","downloadPng","downloadSvg","onDismissErrorPopup","renderMainArea","error","chart_Chart","showSidePanel","Responsive","minWidth","details_Details","Loader","active","_onMessage","PARENT_READY","postMessage","READY","GEDCOM","event_label","setError","componentDidUpdate","_componentDidUpdate","getParam","parsedGen","chartTypes","software","onMessage","Number","isNaN","isNewData","Route","top_bar_TopBar","Switch","exact","path","component","Redirect","addLocaleData","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","browser","detect","ReactDOM","querySelector","HashRouter"],"mappings":"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","file":"static/js/main.76148759.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import * as d3 from 'd3';\nimport * as React from 'react';\nimport jsPDF from 'jspdf';\nimport {intlShape} from 'react-intl';\nimport {saveAs} from 'file-saver';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n} from 'topola';\n\n/** Called when the view is dragged with the mouse. */\nfunction zoomed() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement!;\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  d3.select(parent).call(d3.zoom().translateTo, x, y);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n\n  private getChartType() {\n    switch (this.props.chartType) {\n      case ChartType.Hourglass:\n        return HourglassChart;\n      case ChartType.Relatives:\n        return RelativesChart;\n      case ChartType.Fancy:\n        return FancyChart;\n      default:\n        // Fall back to hourglass chart.\n        return HourglassChart;\n    }\n  }\n\n  private getRendererType() {\n    switch (this.props.chartType) {\n      case ChartType.Fancy:\n        return CircleRenderer;\n      default:\n        // Use DetailedRenderer by default.\n        return DetailedRenderer;\n    }\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: this.getChartType(),\n        renderer: this.getRendererType(),\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chart');\n    const parent = (svg.node() as HTMLElement).parentElement as Element;\n\n    d3.select(parent)\n      .on('scroll', scrolled)\n      .call(\n        d3\n          .zoom()\n          .scaleExtent([1, 1])\n          .translateExtent([[0, 0], chartInfo.size])\n          .on('zoom', zoomed),\n      );\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0];\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1];\n    const offsetX = d3.max([0, (parent.clientWidth - chartInfo.size[0]) / 2]);\n    const offsetY = d3.max([0, (parent.clientHeight - chartInfo.size[1]) / 2]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0])\n      .attr('height', chartInfo.size[1]);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    const initialRender =\n      this.props.data !== prevProps.data ||\n      this.props.chartType !== prevProps.chartType;\n    this.renderChart({initialRender});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <svg id=\"chart\" />\n      </div>\n    );\n  }\n\n  private getSvgContents() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  private async getSvgContentsWithInlinedImages() {\n    const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(this.getSvgContents());\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n\n  async downloadSvg() {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'topola.svg');\n  }\n\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await this.getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return await drawOnCanvas(await loadImage(blob));\n  }\n\n  async downloadPng() {\n    const canvas = await this.drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'topola.png');\n  }\n\n  async downloadPdf() {\n    const canvas = await this.drawOnCanvas();\n    const doc = new jsPDF({\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\n      unit: 'pt',\n      format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('topola.pdf');\n  }\n}\n","import {JsonFam, JsonGedcomData, JsonIndi, gedcomEntriesToJson} from 'topola';\nimport {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const idToIndiMap = new Map<string, JsonIndi>();\n  gedcom.indis.forEach((indi) => {\n    idToIndiMap[indi.id] = indi;\n  });\n\n  return (indiId1: string, indiId2: string) => {\n    const idComparison = strcmp(indiId1, indiId2);\n    const indi1: JsonIndi = idToIndiMap[indiId1];\n    const indi2: JsonIndi = idToIndiMap[indiId2];\n    const birth1 = indi1 && indi1.birth;\n    const birth2 = indi2 && indi2.birth;\n    const date1 =\n      birth1 && (birth1.date || (birth1.dateRange && birth1.dateRange.from));\n    const date2 =\n      birth2 && (birth2.date || (birth2.dateRange && birth2.dateRange.from));\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n      return idComparison;\n    }\n    if (date1.year !== date2.year) {\n      return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n      return idComparison;\n    }\n    if (date1.month !== date2.month) {\n      return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n      return date1.month - date2.month;\n    }\n    return idComparison;\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (indi.imageUrl) {\n    const fileName = indi.imageUrl.match(/[^/\\\\]*$/)![0];\n    if (images.has(fileName)) {\n      const newIndi = Object.assign({}, indi);\n      newIndi.imageUrl = images.get(fileName);\n      return newIndi;\n    }\n  }\n  if (!indi.imageUrl || indi.imageUrl.startsWith('http')) {\n    return indi;\n  }\n  const newIndi = Object.assign({}, indi);\n  delete newIndi.imageUrl;\n  return newIndi;\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(sortChildren(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n","import {Date as TopolaDate, DateRange, getDate} from 'topola';\nimport {InjectedIntl} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: InjectedIntl) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = new Date(\n    hasYear ? date.year! : 0,\n    hasMonth ? date.month! - 1 : 0,\n    hasDay ? date.day! : 1,\n  );\n\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\n  const translatedQualifier =\n    qualifier &&\n    intl.formatMessage({\n      id: `date.${qualifier}`,\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\n    });\n\n  const formatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate].join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: InjectedIntl) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: InjectedIntl) {\n  const dateOrRange = getDate(gedcomDate);\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n","import * as React from 'react';\nimport flatMap from 'array.prototype.flatmap';\nimport Linkify from 'react-linkify';\nimport {FormattedMessage, InjectedIntl} from 'react-intl';\nimport {GedcomData, pointerToId} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {intlShape} from 'react-intl';\nimport {translateDate} from './date_util';\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'DEAT', 'BURI', 'EVEN'];\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'NOTE', 'SOUR'];\nconst TAG_DESCRIPTIONS = new Map([\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CHR', 'Christening'],\n  ['DEAT', 'Death'],\n  ['EMAIL', 'E-mail'],\n  ['EVEN', 'Event'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n]);\n\nfunction translateTag(tag: string) {\n  return (\n    <FormattedMessage\n      id={`gedcom.${tag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(tag) || tag}\n    />\n  );\n}\n\nfunction joinLines(lines: (JSX.Element | string)[]) {\n  return (\n    <>\n      {lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nfunction getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\nfunction eventDetails(entry: GedcomEntry, intl: InjectedIntl) {\n  const lines = [];\n  if (entry.data && entry.data.length > 1) {\n    lines.push(<i>{entry.data}</i>);\n  }\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\n  if (date && date.data) {\n    lines.push(translateDate(date.data, intl));\n  }\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\n  if (place && place.data) {\n    lines.push(...getData(place));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\n      <span>{joinLines(lines)}</span>\n    </>\n  );\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return joinLines(\n    getData(entry).map((line, index) => <i key={index}>{line}</i>),\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  return (\n    <h2 className=\"ui header\">\n      {entry.data\n        .split('/')\n        .filter((name) => !!name)\n        .map((name, index) => (\n          <div key={index}>\n            {name}\n            <br />\n          </div>\n        ))}\n    </h2>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter(\n      (entry) =>\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\n    )\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <div className=\"ui segment\" key={index}>\n        {element}\n      </div>\n    ));\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nfunction dereference(entry: GedcomEntry, gedcom: GedcomData) {\n  if (entry.data) {\n    const dereferenced = gedcom.other[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\nexport class Details extends React.Component<Props, {}> {\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\n    const entriesWithData = entries\n      .map((entry) => dereference(entry, this.props.gedcom))\n      .filter(hasData);\n\n    return (\n      <div className=\"ui segments\" id=\"details\">\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entries, EVENT_TAGS, (entry) =>\n          eventDetails(entry, this.context.intl as InjectedIntl),\n        )}\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </div>\n    );\n  }\n}\n","import {convertGedcom, TopolaData} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  return {\n    id: indi || data.indis[0].id,\n    generation: generation || 0,\n  };\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  const urlToFetch = handleCors\n    ? 'https://cors-anywhere.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new Error('Error loading data. Please upload your file again.');\n  }\n  return prepareData(gedcom, hash, images);\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Card} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <Card className=\"intro\">\n      <Card.Content>\n        <Card.Header>\n          <FormattedMessage\n            id=\"intro.title\"\n            defaultMessage=\"Topola Genealogy Viewer\"\n          />\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <p>\n          <FormattedMessage\n            id=\"intro.description\"\n            defaultMessage={\n              'Topola Genealogy is a genealogy tree viewer that lets you' +\n              ' browse the structure of the family.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.instructions\"\n            defaultMessage={\n              'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n              ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n              ' existing genealogy programs and web sites.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.examples\"\n            defaultMessage={\n              'Here are some examples from the web that you can view:'\n            }\n          />\n        </p>\n        <ul>\n          <li>\n            <GedcomLink\n              url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n              text=\"Karol Wojtyła\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n              GENPOL\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n              text=\"Shakespeare\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n              webtreeprint.com\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n              text=\"Harry Potter\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://famousfamilytrees.blogspot.com/\">\n              Famous Family Trees\n            </a>\n            )\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n          </b>\n          :\n          <FormattedMessage\n            id=\"intro.privacy_note\"\n            defaultMessage={\n              'When using the \"load from file\" option, this site does not' +\n              ' send your data anywhere and files loaded from disk do not' +\n              ' leave your computer. When using \"load from URL\", data is' +\n              ' passed through the {link} service to deal with an issue with' +\n              ' cross-site file loading in the browser (CORS).'\n            }\n            values={{\n              link: (\n                <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n              ),\n            }}\n          />\n        </p>\n      </Card.Content>\n    </Card>\n  );\n}\n","import naturalSort from 'javascript-natural-sort';\nimport lunr from 'lunr';\nimport {GedcomData} from './gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: GedcomEntry;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return a.score - b.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index;\n\n  public constructor(private gedcom: GedcomData) {\n    this.index = lunr(function() {\n      this.ref('id');\n      this.field('id');\n      this.field('name');\n      this.field('normalizedName');\n\n      for (let id in gedcom.indis) {\n        const name = gedcom.indis[id].tree\n          .filter((entry) => entry.tag === 'NAME')\n          .map((entry) => entry.data)\n          .join(' ');\n        this.add({id, name, normalizedName: normalize(name)});\n      }\n    });\n  }\n\n  public search(input: string) {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `+${s}*`)\n      .join(' ');\n    const results = this.index.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.gedcom.indis[result.ref]}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(gedcom: GedcomData): SearchIndex {\n  return new LunrSearchIndex(gedcom);\n}\n","import * as React from 'react';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {InjectedIntl} from 'react-intl';\nimport {SearchResult} from './search_index';\nimport {translateDate} from './date_util';\n\nfunction getNameLine(result: SearchResult) {\n  const nameTag = result.indi.tree.find((entry) => entry.tag === 'NAME');\n  const name =\n    nameTag &&\n    nameTag.data\n      .split('/')\n      .filter((s) => !!s)\n      .join(' ');\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\nfunction getDate(indi: GedcomEntry, tag: string, intl: InjectedIntl) {\n  const eventEntry = indi.tree.find((entry) => entry.tag === tag);\n  const dateEntry =\n    eventEntry && eventEntry.tree.find((entry) => entry.tag === 'DATE');\n  return (dateEntry && translateDate(dateEntry.data, intl)) || '';\n}\n\nfunction getDescriptionLine(indi: GedcomEntry, intl: InjectedIntl) {\n  const birthDate = getDate(indi, 'BIRT', intl);\n  const deathDate = getDate(indi, 'DEAT', intl);\n  if (!deathDate) {\n    return birthDate;\n  }\n  return `${birthDate} – ${deathDate}`;\n}\n\n/** Produces an object that is displayed in the Semantic UI Search results. */\nexport function displaySearchResult(result: SearchResult, intl: InjectedIntl) {\n  return {\n    id: result.id,\n    key: result.id,\n    title: getNameLine(result),\n    description: getDescriptionLine(result.indi, intl),\n  };\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport debounce from 'debounce';\nimport md5 from 'md5';\nimport {analyticsEvent} from './analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {displaySearchResult} from './search_util';\nimport {FormattedMessage, intlShape} from 'react-intl';\nimport {GedcomData} from './gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n  Dropdown,\n  Search,\n  SearchProps,\n} from 'semantic-ui-react';\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n  searchResults: SearchResult[];\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  showingChart: boolean;\n  gedcom?: GedcomData;\n  standalone: boolean;\n  eventHandlers: EventHandlers;\n}\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {\n    loadUrlDialogOpen: false,\n    searchResults: [],\n  };\n  inputRef?: Input;\n  searchRef?: {setValue(value: string): void};\n  searchIndex?: SearchIndex;\n\n  /** Handles the \"Upload file\" button. */\n  async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(this.props.location.search);\n    const historyPush =\n      search.file === hash\n        ? this.props.history.replace\n        : this.props.history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  handleLoadFromUrl() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.inputRef!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      analyticsEvent('url_selected');\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  /** On search input change. */\n  handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = this.searchIndex!.search(input).map((result) =>\n      displaySearchResult(result, this.context.intl),\n    );\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\n  }\n\n  /** On search result selected. */\n  handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    this.props.eventHandlers.onSelection({id, generation: 0});\n    this.searchRef!.setValue('');\n  }\n\n  initializeSearchIndex() {\n    if (this.props.gedcom) {\n      this.searchIndex = buildSearchIndex(this.props.gedcom);\n    }\n  }\n\n  changeView(view: string) {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      this.props.history.push(location);\n    }\n  }\n\n  componentDidMount() {\n    this.initializeSearchIndex();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.gedcom !== this.props.gedcom) {\n      this.initializeSearchIndex();\n    }\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    const loadFromUrlModal = (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={(ref) => (this.inputRef = ref!)}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n\n    const chartMenus = this.props.showingChart ? (\n      <>\n        <Menu.Item as=\"a\" onClick={() => this.props.eventHandlers.onPrint()}>\n          <Icon name=\"print\" />\n          <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n        </Menu.Item>\n\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"download\" />\n              <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPdf()}\n            >\n              <FormattedMessage id=\"menu.pdf_file\" defaultMessage=\"PDF file\" />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadPng()}\n            >\n              <FormattedMessage id=\"menu.png_file\" defaultMessage=\"PNG file\" />\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={() => this.props.eventHandlers.onDownloadSvg()}\n            >\n              <FormattedMessage id=\"menu.svg_file\" defaultMessage=\"SVG file\" />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"eye\" />\n              <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n            </div>\n          }\n          className=\"item\"\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => this.changeView('hourglass')}>\n              <Icon name=\"hourglass\" />\n              <FormattedMessage\n                id=\"menu.hourglass\"\n                defaultMessage=\"Hourglass chart\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.changeView('relatives')}>\n              <Icon name=\"users\" />\n              <FormattedMessage\n                id=\"menu.relatives\"\n                defaultMessage=\"All relatives\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => this.changeView('fancy')}>\n              <Icon name=\"users\" />\n              <FormattedMessage\n                id=\"menu.fancy\"\n                defaultMessage=\"Fancy tree (experimental)\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Search\n          onSearchChange={debounce(\n            (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\n              this.handleSearch(data.value),\n            200,\n          )}\n          onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\n          results={this.state.searchResults}\n          noResultsMessage={this.context.intl.formatMessage({\n            id: 'menu.search.no_results',\n            defaultMessage: 'No results found',\n          })}\n          placeholder={this.context.intl.formatMessage({\n            id: 'menu.search.placeholder',\n            defaultMessage: 'Search for people',\n          })}\n          selectFirstResult={true}\n          ref={(ref) =>\n            (this.searchRef = (ref as unknown) as {\n              setValue(value: string): void;\n            })\n          }\n        />\n      </>\n    ) : null;\n\n    const fileMenus = this.props.standalone ? (\n      <>\n        <Link to=\"/\">\n          <Menu.Item>\n            <b>Topola Genealogy</b>\n          </Menu.Item>\n        </Link>\n        <Menu.Item as=\"a\" onClick={() => this.handleLoadFromUrl()}>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Menu.Item>\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged,image/*\"\n          id=\"fileInput\"\n          multiple\n          onChange={(e) => this.handleUpload(e)}\n        />\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">\n            <Icon name=\"folder open\" />\n            <FormattedMessage\n              id=\"menu.load_from_file\"\n              defaultMessage=\"Load from file\"\n            />\n          </Menu.Item>\n        </label>\n      </>\n    ) : null;\n\n    const sourceLink = this.props.standalone ? (\n      <>\n        <Menu.Item\n          as=\"a\"\n          href=\"https://github.com/PeWu/topola-viewer\"\n          position=\"right\"\n          target=\"_blank\"\n        >\n          <FormattedMessage\n            id=\"menu.github\"\n            defaultMessage=\"Source on GitHub\"\n          />\n        </Menu.Item>\n      </>\n    ) : (\n      <>\n        <Menu.Item\n          as=\"a\"\n          href=\"https://pewu.github.com/topola-viewer\"\n          position=\"right\"\n          target=\"_blank\"\n        >\n          <FormattedMessage\n            id=\"menu.powered_by\"\n            defaultMessage=\"Powered by Topola\"\n          />\n        </Menu.Item>\n      </>\n    );\n\n    return (\n      <Menu attached=\"top\" inverted color=\"blue\" size=\"large\">\n        {fileMenus}\n        {chartMenus}\n        {sourceLink}\n        {loadFromUrlModal}\n      </Menu>\n    );\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {analyticsEvent} from './analytics';\nimport {Chart, ChartType} from './chart';\nimport {Details} from './details';\nimport {FormattedMessage} from 'react-intl';\nimport {getSelection, loadFromUrl, loadGedcom} from './load_data';\nimport {getSoftware, TopolaData} from './gedcom_util';\nimport {IndiInfo} from 'topola';\nimport {intlShape} from 'react-intl';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Responsive} from 'semantic-ui-react';\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\nimport {TopBar} from './top_bar';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: TopolaData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if data is currently being loaded. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  url?: string;\n  /** Whether the side panel is shown. */\n  showSidePanel?: boolean;\n  /** Whether the app is in embedded mode, i.e. embedded in an iframe. */\n  embedded: boolean;\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  standalone: boolean;\n  /** Type of displayed chart. */\n  chartType: ChartType;\n  /** Whether to show the error popup. */\n  showErrorPopup: boolean;\n}\n\nexport class App extends React.Component<RouteComponentProps, {}> {\n  state: State = {\n    loading: false,\n    embedded: false,\n    standalone: true,\n    chartType: ChartType.Hourglass,\n    showErrorPopup: false,\n  };\n  chartRef: Chart | null = null;\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  private isNewData(\n    hash: string | undefined,\n    url: string | undefined,\n    gedcom: string | undefined,\n  ): boolean {\n    return (\n      !!(hash && hash !== this.state.hash) ||\n      !!(url && this.state.url !== url) ||\n      (!!gedcom && !this.state.loading && !this.state.data)\n    );\n  }\n\n  /** Sets the state with a new individual selection and chart type. */\n  private updateDisplay(selection: IndiInfo, chartType?: ChartType) {\n    if (\n      !this.state.selection ||\n      this.state.selection.id !== selection.id ||\n      this.state.selection!.generation !== selection.generation ||\n      (chartType !== undefined && chartType !== this.state.chartType)\n    ) {\n      this.setState(\n        Object.assign({}, this.state, {\n          selection,\n          chartType: chartType !== undefined ? chartType : this.state.chartType,\n        }),\n      );\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  private setError(error: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        error: error,\n        loading: false,\n      }),\n    );\n  }\n\n  private async onMessage(message: EmbeddedMessage) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            selection: getSelection(data.chartData),\n            error: undefined,\n            loading: false,\n          }),\n        );\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        this.setError(error.message);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  async componentDidUpdate() {\n    if (this.props.location.pathname !== '/view') {\n      return;\n    }\n\n    const search = queryString.parse(this.props.location.search);\n    const getParam = (name: string) => {\n      const value = search[name];\n      return typeof value === 'string' ? value : undefined;\n    };\n\n    const showSidePanel = getParam('sidePanel') !== 'false'; // True by default.\n    const embedded = getParam('embedded') === 'true'; // False by default.\n\n    if (embedded && !this.state.embedded) {\n      this.setState(\n        Object.assign({}, this.state, {\n          embedded: true,\n          standalone: false,\n          showSidePanel,\n        }),\n      );\n      // Notify the parent window that we are ready.\n      window.parent.postMessage('ready', '*');\n      window.addEventListener('message', (data) => this.onMessage(data.data));\n    }\n    if (embedded) {\n      // If the app is embedded, do not run the normal loading code.\n      return;\n    }\n\n    const url = getParam('url');\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const generation = !isNaN(parsedGen) ? parsedGen : undefined;\n    const hash = getParam('file');\n    const handleCors = getParam('handleCors') !== 'false'; // True by default.\n    const standalone = getParam('standalone') !== 'false'; // True by default.\n    const view = getParam('view');\n\n    const chartTypes = new Map<string | undefined, ChartType>([\n      ['relatives', ChartType.Relatives],\n      ['fancy', ChartType.Fancy],\n    ]);\n    // Hourglass is the default view.\n    const chartType = chartTypes.get(view) || ChartType.Hourglass;\n\n    const gedcom = this.props.location.state && this.props.location.state.data;\n    const images =\n      this.props.location.state && this.props.location.state.images;\n\n    if (!url && !hash) {\n      this.props.history.replace({pathname: '/'});\n    } else if (this.isNewData(hash, url, gedcom)) {\n      try {\n        // Set loading state.\n        this.setState(\n          Object.assign({}, this.state, {\n            data: undefined,\n            selection: undefined,\n            hash,\n            error: undefined,\n            loading: true,\n            url,\n            standalone,\n            chartType,\n          }),\n        );\n        const data = hash\n          ? await loadGedcom(hash, gedcom, images)\n          : await loadFromUrl(url!, handleCors);\n\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent(hash ? 'upload_file_loaded' : 'url_file_loaded', {\n          event_label: software,\n          event_value: (images && images.size) || 0,\n        });\n\n        // Set state with data.\n        this.setState(\n          Object.assign({}, this.state, {\n            data,\n            hash,\n            selection: getSelection(data.chartData, indi, generation),\n            error: undefined,\n            loading: false,\n            url,\n            showSidePanel,\n            standalone,\n            chartType,\n          }),\n        );\n      } catch (error) {\n        analyticsEvent(hash ? 'upload_file_error' : 'url_file_error');\n        this.setError(error.message);\n      }\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(\n        this.state.data.chartData,\n        indi,\n        generation,\n      );\n      this.updateDisplay(selection, chartType);\n    }\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  private onSelection = (selection: IndiInfo) => {\n    analyticsEvent('selection_changed');\n    if (this.state.embedded) {\n      // In embedded mode the URL doesn't change.\n      this.updateDisplay(selection);\n      return;\n    }\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  private onPrint = () => {\n    analyticsEvent('print');\n    this.chartRef && this.chartRef.print();\n  };\n\n  private showErrorPopup(message: string) {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: true,\n        error: message,\n      }),\n    );\n  }\n\n  private onDownloadPdf = async () => {\n    analyticsEvent('download_pdf');\n    try {\n      this.chartRef && (await this.chartRef.downloadPdf());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadPng = async () => {\n    analyticsEvent('download_png');\n    try {\n      this.chartRef && (await this.chartRef.downloadPng());\n    } catch (e) {\n      this.showErrorPopup(\n        this.context.intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  };\n\n  private onDownloadSvg = () => {\n    analyticsEvent('download_svg');\n    this.chartRef && this.chartRef.downloadSvg();\n  };\n\n  onDismissErrorPopup = () => {\n    this.setState(\n      Object.assign({}, this.state, {\n        showErrorPopup: false,\n      }),\n    );\n  };\n\n  private renderMainArea = () => {\n    if (this.state.data && this.state.selection) {\n      return (\n        <div id=\"content\">\n          <ErrorPopup\n            open={this.state.showErrorPopup}\n            message={this.state.error}\n            onDismiss={this.onDismissErrorPopup}\n          />\n          <Chart\n            data={this.state.data.chartData}\n            selection={this.state.selection}\n            chartType={this.state.chartType}\n            onSelection={this.onSelection}\n            ref={(ref) => (this.chartRef = ref)}\n          />\n          {this.state.showSidePanel ? (\n            <Responsive minWidth={768} id=\"sidePanel\">\n              <Details\n                gedcom={this.state.data.gedcom}\n                indi={this.state.selection.id}\n              />\n            </Responsive>\n          ) : null}\n        </div>\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  };\n\n  render() {\n    return (\n      <>\n        <Route\n          render={(props: RouteComponentProps) => (\n            <TopBar\n              {...props}\n              gedcom={this.state.data && this.state.data.gedcom}\n              showingChart={\n                !!(\n                  this.props.history.location.pathname === '/view' &&\n                  this.state.data &&\n                  this.state.selection\n                )\n              }\n              standalone={this.state.standalone}\n              eventHandlers={{\n                onSelection: this.onSelection,\n                onPrint: this.onPrint,\n                onDownloadPdf: this.onDownloadPdf,\n                onDownloadPng: this.onDownloadPng,\n                onDownloadSvg: this.onDownloadSvg,\n              }}\n            />\n          )}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Intro} />\n          <Route exact path=\"/view\" render={this.renderMainArea} />\n          <Redirect to={'/'} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <Route component={App} />\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}