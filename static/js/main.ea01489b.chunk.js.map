{"version":3,"sources":["chart.tsx","gedcom_util.ts","chart_view.tsx","intro.tsx","top_bar.tsx","index.tsx"],"names":["zoomed","parent","d3","node","parentElement","scrollLeft","transform","x","scrollTop","y","scrolled","clientWidth","clientHeight","call","translateTo","Chart","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","chart","inherits","createClass","key","value","_this2","undefined","initialRender","innerHTML","createChart","json","props","data","chartType","HourglassChart","renderer","DetailedRenderer","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","context","intl","chartInfo","render","startIndi","selection","id","baseGeneration","generation","svg","on","scaleExtent","translateExtent","size","dx","origin","dy","offsetX","offsetY","svgTransition","transition","delay","duration","attr","tween","i","t","renderChart","prevProps","react","printWindow","document","createElement","style","position","top","left","onload","getElementById","cloneNode","removeAttribute","contents","outerHTML","contentDocument","open","write","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","React","sortFamilyChildren","fam","gedcom","children","newChildren","sort","idToIndiMap","Map","indis","forEach","indi","indiId1","indiId2","a","b","idComparison","indi1","indi2","birth1","birth","birth2","date1","date","dateRange","from","date2","year","month","day","birthDatesComparator","assign","filterImage","imageUrl","startsWith","newIndi","convertGedcom","gedcomToJson","fams","Error","newIndis","map","filterImages","newFams","sortChildren","contextTypes","intlShape","ErrorMessage","Message","negative","className","Header","message","getSelection","ChartView","_React$Component","state","loading","chartRef","location","search","queryString","gen","String","history","push","url","options","cachedData","sessionStorage","getItem","JSON","parse","setState","loadedUrl","error","hash","urlToFetch","handleCors","window","fetch","then","response","status","Promise","reject","statusText","text","setGedcom","catch","e","input","md5","serializedData","stringify","setItem","componentDidUpdate","getParam","name","parsedGen","Number","isNaN","replace","pathname","loadFromUrl","_this3","chart_Chart","ref","Loader","active","GedcomLink","Link","to","TopBar","loadUrlDialogOpen","inputRef","event","files","target","reader","FileReader","evt","result","file","readAsText","_this4","loadFromUrlModal","Modal","onClose","handleClose","centered","Icon","index_es","defaultMessage","txt","Content","Form","onSubmit","handleLoad","Input","placeholder","fluid","onChange","handleUrlChange","values","link","href","Actions","Button","secondary","onClick","primary","Menu","attached","inverted","color","Item","as","handleLoadFromUrl","type","accept","handleUpload","htmlFor","onPrint","addLocaleData","toConsumableArray","locale_en","locale_pl","messages","pl","messages_pl","language","navigator","split","browser","detect","chartViewRef","ReactDOM","querySelector","HashRouter","Route","component","top_bar_TopBar","Switch","exact","path","Card","chart_view_ChartView"],"mappings":"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","file":"static/js/main.ea01489b.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport * as React from 'react';\nimport {intlShape} from 'react-intl';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n} from 'topola';\n\n/** Called when the view is dragged with the mouse. */\nfunction zoomed() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement!;\n  parent.scrollLeft = -d3.event.transform.x;\n  parent.scrollTop = -d3.event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const svg = d3.select('#chart');\n  const parent = (svg.node() as HTMLElement).parentElement as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  d3.select(parent).call(d3.zoom().translateTo, x, y);\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Component showing the genealogy chart and handling transition animations. */\nexport class Chart extends React.PureComponent<ChartProps, {}> {\n  private chart?: ChartHandle;\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\n    if (args.initialRender) {\n      (d3.select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: this.props.data,\n        chartType: HourglassChart,\n        renderer: DetailedRenderer,\n        svgSelector: '#chart',\n        indiCallback: (info) => this.props.onSelection(info),\n        animate: true,\n        updateSvgSize: false,\n        locale: this.context.intl.locale,\n      });\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: this.props.selection.id,\n      baseGeneration: this.props.selection.generation,\n    });\n    const svg = d3.select('#chart');\n    const parent = (svg.node() as HTMLElement).parentElement as Element;\n\n    d3.select(parent)\n      .on('scroll', scrolled)\n      .call(\n        d3\n          .zoom()\n          .scaleExtent([1, 1])\n          .translateExtent([[0, 0], chartInfo.size])\n          .on('zoom', zoomed),\n      );\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = d3.interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0];\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1];\n    const offsetX = d3.max([0, (parent.clientWidth - chartInfo.size[0]) / 2]);\n    const offsetY = d3.max([0, (parent.clientHeight - chartInfo.size[1]) / 2]);\n    const svgTransition = svg\n      .transition()\n      .delay(200)\n      .duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0])\n      .attr('height', chartInfo.size[1]);\n    if (args.initialRender) {\n      parent.scrollLeft = -dx;\n      parent.scrollTop = -dy;\n    } else {\n      svgTransition\n        .tween('scrollLeft', scrollLeftTween(-dx))\n        .tween('scrollTop', scrollTopTween(-dy));\n    }\n  }\n\n  componentDidMount() {\n    this.renderChart({initialRender: true});\n  }\n\n  componentDidUpdate(prevProps: ChartProps) {\n    this.renderChart({initialRender: this.props.data !== prevProps.data});\n  }\n\n  /** Make intl appear in this.context. */\n  static contextTypes = {\n    intl: intlShape,\n  };\n\n  render() {\n    return (\n      <div id=\"svgContainer\">\n        <svg id=\"chart\" />\n      </div>\n    );\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    const printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.style.top = '-1000px';\n    printWindow.style.left = '-1000px';\n    printWindow.onload = () => {\n      const svg = document.getElementById('chart')!.cloneNode(true) as Element;\n      svg.removeAttribute('transform');\n      const contents = svg.outerHTML;\n      printWindow.contentDocument!.open();\n      printWindow.contentDocument!.write(contents);\n      printWindow.contentDocument!.close();\n      // Doesn't work on Firefox without the setTimeout.\n      setTimeout(() => {\n        printWindow.contentWindow!.focus();\n        printWindow.contentWindow!.print();\n        printWindow.parentNode!.removeChild(printWindow);\n      }, 500);\n    };\n    document.body.appendChild(printWindow);\n  }\n}\n","import {gedcomToJson, JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const idToIndiMap = new Map<string, JsonIndi>();\n  gedcom.indis.forEach((indi) => {\n    idToIndiMap[indi.id] = indi;\n  });\n\n  return (indiId1: string, indiId2: string) => {\n    const idComparison = strcmp(indiId1, indiId2);\n    const indi1: JsonIndi = idToIndiMap[indiId1];\n    const indi2: JsonIndi = idToIndiMap[indiId2];\n    const birth1 = indi1 && indi1.birth;\n    const birth2 = indi2 && indi2.birth;\n    const date1 =\n      birth1 && (birth1.date || (birth1.dateRange && birth1.dateRange.from));\n    const date2 =\n      birth2 && (birth2.date || (birth2.dateRange && birth2.dateRange.from));\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n      return idComparison;\n    }\n    if (date1.year !== date2.year) {\n      return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n      return idComparison;\n    }\n    if (date1.month !== date2.month) {\n      return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n      return date1.month - date2.month;\n    }\n    return idComparison;\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(fam: JsonFam, gedcom: JsonGedcomData): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(birthDatesComparator(gedcom));\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, gedcom));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi): JsonIndi {\n  if (!indi.imageUrl || indi.imageUrl.startsWith('http')) {\n    return indi;\n  }\n  const newIndi = Object.assign({}, indi);\n  delete newIndi.imageUrl;\n  return newIndi;\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(gedcom: JsonGedcomData): JsonGedcomData {\n  const newIndis = gedcom.indis.map(filterImage);\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links.\n */\nexport function convertGedcom(gedcom: string): JsonGedcomData {\n  const json = gedcomToJson(gedcom);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new Error('Failed to read GEDCOM file');\n  }\n  return filterImages(sortChildren(json));\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {Chart} from './chart';\nimport {convertGedcom} from './gedcom_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Loader, Message} from 'semantic-ui-react';\nimport {RouteComponentProps} from 'react-router-dom';\n\n/** Shows an error message. */\nexport function ErrorMessage(props: {message: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>Failed to load file</Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nfunction getSelection(\n  data: JsonGedcomData,\n  indi?: string,\n  generation?: number,\n): IndiInfo {\n  return {\n    id: indi || data.indis[0].id,\n    generation: generation || 0,\n  };\n}\n\ninterface State {\n  /** Loaded data. */\n  data?: JsonGedcomData;\n  /** Selected individual. */\n  selection?: IndiInfo;\n  /** Hash of the GEDCOM contents. */\n  hash?: string;\n  /** Error to display. */\n  error?: string;\n  /** True if currently loading. */\n  loading: boolean;\n  /** URL of the data that is loaded or is being loaded. */\n  loadedUrl?: string;\n}\n\n/** The main area of the application dedicated for rendering the family chart. */\nexport class ChartView extends React.Component<RouteComponentProps, State> {\n  state: State = {loading: false};\n  chartRef: Chart | null = null;\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  onSelection = (selection: IndiInfo) => {\n    const location = this.props.location;\n    const search = queryString.parse(location.search);\n    search.indi = selection.id;\n    search.gen = String(selection.generation);\n    location.search = queryString.stringify(search);\n    this.props.history.push(location);\n  };\n\n  /** Loads a GEDCOM file from the given URL. */\n  loadFromUrl(\n    url: string,\n    options: {\n      handleCors?: boolean;\n      indi?: string;\n      generation?: number;\n    } = {},\n  ) {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      const data = JSON.parse(cachedData);\n      this.setState(\n        Object.assign({}, this.state, {\n          data,\n          selection: getSelection(data, options.indi, options.generation),\n          loadedUrl: url,\n          loading: false,\n          error: undefined,\n          hash: undefined,\n        }),\n      );\n      return;\n    }\n\n    this.setState(\n      Object.assign({}, this.state, {\n        loading: true,\n        loadedUrl: url,\n        data: undefined,\n        error: undefined,\n      }),\n    );\n\n    const urlToFetch = options.handleCors\n      ? 'https://cors-anywhere.herokuapp.com/' + url\n      : url;\n\n    window\n      .fetch(urlToFetch)\n      .then((response) => {\n        if (response.status !== 200) {\n          return Promise.reject(new Error(response.statusText));\n        }\n        return response.text();\n      })\n      .then((data) =>\n        this.setGedcom({\n          gedcom: data,\n          url,\n          indi: options.indi,\n          generation: options.generation,\n        }),\n      )\n      .catch((e: Error) =>\n        this.setState(\n          Object.assign({}, this.state, {error: e.message, loading: false}),\n        ),\n      );\n  }\n\n  /**\n   * Converts GEDCOM contents and sets the data in the state.\n   * In case of an error reading the file, sets an error.\n   */\n  setGedcom(input: {\n    gedcom: string;\n    url?: string;\n    indi?: string;\n    generation?: number;\n  }) {\n    const hash = md5(input.gedcom);\n    try {\n      const data = convertGedcom(input.gedcom);\n      const serializedData = JSON.stringify(data);\n      sessionStorage.setItem(input.url || hash, serializedData);\n      this.setState(\n        Object.assign({}, this.state, {\n          data,\n          selection: getSelection(data, input.indi, input.generation),\n          hash,\n          loading: false,\n          loadedUrl: input.url,\n          error: undefined,\n        }),\n      );\n    } catch (e) {\n      this.setState(\n        Object.assign({}, this.state, {\n          data: undefined,\n          selection: undefined,\n          hash,\n          loading: false,\n          error: 'Failed to read GEDCOM file',\n          loadedUrl: input.url,\n        }),\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const gedcom = this.props.location.state && this.props.location.state.data;\n    const search = queryString.parse(this.props.location.search);\n    const getParam = (name: string) => {\n      const value = search[name];\n      return typeof value === 'string' ? value : undefined;\n    };\n    const url = getParam('url');\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const generation = !isNaN(parsedGen) ? parsedGen : undefined;\n    const hash = getParam('file');\n    const handleCors = getParam('handleCors') !== 'false';\n\n    if (hash && hash !== this.state.hash) {\n      // New \"load from file\" data.\n      if (gedcom) {\n        this.setGedcom({gedcom, indi, generation});\n      } else {\n        // Data is not present. Try loading from cache.\n        const cachedData = sessionStorage.getItem(hash);\n        if (cachedData) {\n          const data = JSON.parse(cachedData);\n          this.setState(\n            Object.assign({}, this.state, {\n              data,\n              hash,\n              selection: getSelection(data, indi, generation),\n              error: undefined,\n              loading: false,\n              loadedUrl: undefined,\n            }),\n          );\n        } else {\n          // No data available. Redirect to main page.\n          this.props.history.replace({pathname: '/'});\n        }\n      }\n    } else if (!this.state.loading && url && this.state.loadedUrl !== url) {\n      // New URL to load data from.\n      this.loadFromUrl(url, {\n        indi,\n        generation,\n        handleCors: url.startsWith('http') && handleCors,\n      });\n    } else if (!url && !gedcom && hash !== this.state.hash) {\n      this.props.history.replace({pathname: '/'});\n    } else if (this.state.data && this.state.selection) {\n      // Update selection if it has changed in the URL.\n      const selection = getSelection(this.state.data, indi, generation);\n      if (\n        this.state.selection.id !== selection.id ||\n        this.state.selection.generation !== selection.generation\n      ) {\n        this.setState(\n          Object.assign({}, this.state, {\n            selection,\n          }),\n        );\n      }\n    }\n  }\n\n  render() {\n    if (this.state.data && this.state.selection) {\n      return (\n        <Chart\n          data={this.state.data}\n          onSelection={this.onSelection}\n          selection={this.state.selection}\n          ref={(ref) => (this.chartRef = ref)}\n        />\n      );\n    }\n    if (this.state.error) {\n      return <ErrorMessage message={this.state.error!} />;\n    }\n    return <Loader active size=\"large\" />;\n  }\n\n  /** Shows the print dialog to print the currently displayed chart. */\n  print() {\n    if (this.chartRef) {\n      this.chartRef.print();\n    }\n  }\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport {Card} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <Card className=\"intro\">\n      <Card.Content>\n        <Card.Header>\n          <FormattedMessage\n            id=\"intro.title\"\n            defaultMessage=\"Topola Genealogy Viewer\"\n          />\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <p>\n          <FormattedMessage\n            id=\"intro.description\"\n            defaultMessage={\n              'Topola Genealogy is a genealogy tree viewer that lets you' +\n              ' browse the structure of the family.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.instructions\"\n            defaultMessage={\n              'Use the LOAD FROM URL or LOAD FROM FILE buttons above to load' +\n              ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n              ' existing genealogy programs and web sites.'\n            }\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"intro.examples\"\n            defaultMessage={\n              'Here are some examples from the web that you can view:'\n            }\n          />\n        </p>\n        <ul>\n          <li>\n            <GedcomLink\n              url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n              text=\"Karol Wojtyła\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n              GENPOL\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n              text=\"Shakespeare\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n              webtreeprint.com\n            </a>\n            )\n          </li>\n          <li>\n            <GedcomLink\n              url=\"http://genealogyoflife.com/tng/gedcom/HarryPotter.ged\"\n              text=\"Harry Potter\"\n            />{' '}\n            (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n            <a href=\"http://famousfamilytrees.blogspot.com/\">\n              Famous Family Trees\n            </a>\n            )\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n          </b>\n          :\n          <FormattedMessage\n            id=\"intro.privacy_note\"\n            defaultMessage={\n              'When using the \"load from file\" option, this site does not' +\n              ' send your data anywhere and files loaded from disk do not' +\n              ' leave your computer. When using \"load from URL\", data is' +\n              ' passed through the {link} service to deal with an issue with' +\n              ' cross-site file loading in the browser (CORS).'\n            }\n            values={{\n              link: (\n                <a href=\"https://cors-anywhere.herokuapp.com/\">cors-anywhere</a>\n              ),\n            }}\n          />\n        </p>\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as queryString from 'query-string';\nimport * as React from 'react';\nimport md5 from 'md5';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {\n  Header,\n  Button,\n  Icon,\n  Menu,\n  Modal,\n  Input,\n  Form,\n} from 'semantic-ui-react';\n\n/** Menus and dialogs state. */\ninterface State {\n  loadUrlDialogOpen: boolean;\n  url?: string;\n}\n\ninterface Props {\n  onPrint: () => void;\n}\n\nexport class TopBar extends React.Component<\n  RouteComponentProps & Props,\n  State\n> {\n  state: State = {loadUrlDialogOpen: false};\n  inputRef?: Input;\n\n  /** Handles the \"Upload file\" button. */\n  handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      const data = (evt.target as FileReader).result;\n      const hash = md5(data as string);\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({file: hash}),\n        state: {data},\n      });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  /** Opens the \"Load from URL\" dialog. */\n  handleLoadFromUrl() {\n    this.setState(\n      Object.assign({}, this.state, {loadUrlDialogOpen: true}),\n      () => this.inputRef!.focus(),\n    );\n  }\n\n  /** Cancels the \"Load from URL\" dialog. */\n  handleClose() {\n    this.setState(Object.assign({}, this.state, {loadUrlDialogOpen: false}));\n  }\n\n  /** Upload button clicked in the \"Load from URL\" dialog. */\n  handleLoad() {\n    this.setState(\n      Object.assign({}, this.state, {\n        loadUrlDialogOpen: false,\n      }),\n    );\n    if (this.state.url) {\n      this.props.history.push({\n        pathname: '/view',\n        search: queryString.stringify({url: this.state.url}),\n      });\n    }\n  }\n\n  /** Called when the URL input is typed into. */\n  handleUrlChange(event: React.SyntheticEvent) {\n    this.setState(\n      Object.assign({}, this.state, {\n        url: (event.target as HTMLInputElement).value,\n      }),\n    );\n  }\n\n  render() {\n    const loadFromUrlModal = (\n      <Modal\n        open={this.state.loadUrlDialogOpen}\n        onClose={() => this.handleClose()}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n            children={(txt) => txt}\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={() => this.handleLoad()}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              onChange={(e) => this.handleUrlChange(e)}\n              ref={(ref) => (this.inputRef = ref!)}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://cors-anywhere.herokuapp.com/\">\n                      cors-anywhere.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => this.handleClose()}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={() => this.handleLoad()}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n\n    return (\n      <Menu attached=\"top\" inverted color=\"blue\" size=\"large\">\n        <Link to=\"/\">\n          <Menu.Item>\n            <b>Topola Genealogy</b>\n          </Menu.Item>\n        </Link>\n        <Menu.Item as=\"a\" onClick={() => this.handleLoadFromUrl()}>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"menu.load_from_url\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Menu.Item>\n        <input\n          className=\"hidden\"\n          type=\"file\"\n          accept=\".ged\"\n          id=\"fileInput\"\n          onChange={(e) => this.handleUpload(e)}\n        />\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">\n            <Icon name=\"folder open\" />\n            <FormattedMessage\n              id=\"menu.load_from_file\"\n              defaultMessage=\"Load from file\"\n            />\n          </Menu.Item>\n        </label>\n        <Menu.Item as=\"a\" onClick={() => this.props.onPrint()}>\n          <Icon name=\"print\" />\n          <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n        </Menu.Item>\n        <Menu.Item\n          as=\"a\"\n          href=\"https://github.com/PeWu/topola-viewer\"\n          position=\"right\"\n        >\n          <FormattedMessage\n            id=\"menu.github\"\n            defaultMessage=\"Source on GitHub\"\n          />\n        </Menu.Item>\n        {loadFromUrlModal}\n      </Menu>\n    );\n  }\n}\n","import * as locale_en from 'react-intl/locale-data/en';\nimport * as locale_pl from 'react-intl/locale-data/pl';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_pl from './translations/pl.json';\nimport {addLocaleData} from 'react-intl';\nimport {detect} from 'detect-browser';\nimport {ChartView} from './chart_view';\nimport {\n  HashRouter as Router,\n  Route,\n  RouteComponentProps,\n  Switch,\n} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {Intro} from './intro';\nimport {TopBar} from './top_bar';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n\naddLocaleData([...locale_en, ...locale_pl]);\n\nconst messages = {\n  pl: messages_pl,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nlet chartViewRef: ChartView | null = null;\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <Router>\n        <div className=\"root\">\n          <Route\n            component={(props: RouteComponentProps) => (\n              <TopBar\n                {...props}\n                onPrint={() => chartViewRef && chartViewRef.print()}\n              />\n            )}\n          />\n          <Switch>\n            <Route exact path=\"/\" component={Intro} />\n            <Route\n              exact\n              path=\"/view\"\n              component={(props: RouteComponentProps) => (\n                <ChartView {...props} ref={(ref) => (chartViewRef = ref)} />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}